// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mcdota.proto

#include "mcdota.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_mcdota_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_mcdota_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CDOTAMsg_CoachHUDPing;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_mcdota_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsg_CVars_CVar;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_mcdota_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_CMsg_CVars;
}  // namespace protobuf_mcdota_2eproto
class CDOTAClientMsg_TipAlertDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CDOTAClientMsg_TipAlert>
      _instance;
} _CDOTAClientMsg_TipAlert_default_instance_;
class CCLCMsg_SplitPlayerConnectDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CCLCMsg_SplitPlayerConnect>
      _instance;
} _CCLCMsg_SplitPlayerConnect_default_instance_;
class CDOTAClientMsg_EventCNY2015CmdDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CDOTAClientMsg_EventCNY2015Cmd>
      _instance;
} _CDOTAClientMsg_EventCNY2015Cmd_default_instance_;
class CDOTAClientMsg_RankWagerDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CDOTAClientMsg_RankWager>
      _instance;
} _CDOTAClientMsg_RankWager_default_instance_;
class CDOTAClientMsg_EventPointsTipDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CDOTAClientMsg_EventPointsTip>
      _instance;
} _CDOTAClientMsg_EventPointsTip_default_instance_;
class CDOTAClientMsg_CoinWagerDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CDOTAClientMsg_CoinWager>
      _instance;
} _CDOTAClientMsg_CoinWager_default_instance_;
class CMsg_CVars_CVarDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsg_CVars_CVar>
      _instance;
} _CMsg_CVars_CVar_default_instance_;
class CMsg_CVarsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsg_CVars>
      _instance;
} _CMsg_CVars_default_instance_;
class CNETMsg_SetConVarDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CNETMsg_SetConVar>
      _instance;
} _CNETMsg_SetConVar_default_instance_;
class CNETMsg_StringCmdDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CNETMsg_StringCmd>
      _instance;
} _CNETMsg_StringCmd_default_instance_;
class CDOTAMsg_CoachHUDPingDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CDOTAMsg_CoachHUDPing>
      _instance;
} _CDOTAMsg_CoachHUDPing_default_instance_;
class CDOTAUserMsg_CoachHUDPingDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CDOTAUserMsg_CoachHUDPing>
      _instance;
} _CDOTAUserMsg_CoachHUDPing_default_instance_;
class CDOTAClientMsg_GuideSelectOptionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CDOTAClientMsg_GuideSelectOption>
      _instance;
} _CDOTAClientMsg_GuideSelectOption_default_instance_;
class CDOTAClientMsg_GuideSelectedDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CDOTAClientMsg_GuideSelected>
      _instance;
} _CDOTAClientMsg_GuideSelected_default_instance_;
class CCLCMsg_CmdKeyValuesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CCLCMsg_CmdKeyValues>
      _instance;
} _CCLCMsg_CmdKeyValues_default_instance_;
class CCLCMsg_FileCRCCheckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CCLCMsg_FileCRCCheck>
      _instance;
} _CCLCMsg_FileCRCCheck_default_instance_;
class CCLCMsg_ClientMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CCLCMsg_ClientMessage>
      _instance;
} _CCLCMsg_ClientMessage_default_instance_;
namespace protobuf_mcdota_2eproto {
static void InitDefaultsCDOTAClientMsg_TipAlert() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CDOTAClientMsg_TipAlert_default_instance_;
    new (ptr) ::CDOTAClientMsg_TipAlert();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CDOTAClientMsg_TipAlert::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CDOTAClientMsg_TipAlert =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCDOTAClientMsg_TipAlert}, {}};

static void InitDefaultsCCLCMsg_SplitPlayerConnect() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CCLCMsg_SplitPlayerConnect_default_instance_;
    new (ptr) ::CCLCMsg_SplitPlayerConnect();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CCLCMsg_SplitPlayerConnect::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CCLCMsg_SplitPlayerConnect =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCCLCMsg_SplitPlayerConnect}, {}};

static void InitDefaultsCDOTAClientMsg_EventCNY2015Cmd() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CDOTAClientMsg_EventCNY2015Cmd_default_instance_;
    new (ptr) ::CDOTAClientMsg_EventCNY2015Cmd();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CDOTAClientMsg_EventCNY2015Cmd::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CDOTAClientMsg_EventCNY2015Cmd =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCDOTAClientMsg_EventCNY2015Cmd}, {}};

static void InitDefaultsCDOTAClientMsg_RankWager() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CDOTAClientMsg_RankWager_default_instance_;
    new (ptr) ::CDOTAClientMsg_RankWager();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CDOTAClientMsg_RankWager::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CDOTAClientMsg_RankWager =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCDOTAClientMsg_RankWager}, {}};

static void InitDefaultsCDOTAClientMsg_EventPointsTip() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CDOTAClientMsg_EventPointsTip_default_instance_;
    new (ptr) ::CDOTAClientMsg_EventPointsTip();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CDOTAClientMsg_EventPointsTip::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CDOTAClientMsg_EventPointsTip =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCDOTAClientMsg_EventPointsTip}, {}};

static void InitDefaultsCDOTAClientMsg_CoinWager() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CDOTAClientMsg_CoinWager_default_instance_;
    new (ptr) ::CDOTAClientMsg_CoinWager();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CDOTAClientMsg_CoinWager::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CDOTAClientMsg_CoinWager =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCDOTAClientMsg_CoinWager}, {}};

static void InitDefaultsCMsg_CVars_CVar() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsg_CVars_CVar_default_instance_;
    new (ptr) ::CMsg_CVars_CVar();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsg_CVars_CVar::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsg_CVars_CVar =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsg_CVars_CVar}, {}};

static void InitDefaultsCMsg_CVars() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CMsg_CVars_default_instance_;
    new (ptr) ::CMsg_CVars();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsg_CVars::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CMsg_CVars =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCMsg_CVars}, {
      &protobuf_mcdota_2eproto::scc_info_CMsg_CVars_CVar.base,}};

static void InitDefaultsCNETMsg_SetConVar() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CNETMsg_SetConVar_default_instance_;
    new (ptr) ::CNETMsg_SetConVar();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CNETMsg_SetConVar::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CNETMsg_SetConVar =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCNETMsg_SetConVar}, {
      &protobuf_mcdota_2eproto::scc_info_CMsg_CVars.base,}};

static void InitDefaultsCNETMsg_StringCmd() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CNETMsg_StringCmd_default_instance_;
    new (ptr) ::CNETMsg_StringCmd();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CNETMsg_StringCmd::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CNETMsg_StringCmd =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCNETMsg_StringCmd}, {}};

static void InitDefaultsCDOTAMsg_CoachHUDPing() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CDOTAMsg_CoachHUDPing_default_instance_;
    new (ptr) ::CDOTAMsg_CoachHUDPing();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CDOTAMsg_CoachHUDPing::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CDOTAMsg_CoachHUDPing =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCDOTAMsg_CoachHUDPing}, {}};

static void InitDefaultsCDOTAUserMsg_CoachHUDPing() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CDOTAUserMsg_CoachHUDPing_default_instance_;
    new (ptr) ::CDOTAUserMsg_CoachHUDPing();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CDOTAUserMsg_CoachHUDPing::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CDOTAUserMsg_CoachHUDPing =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCDOTAUserMsg_CoachHUDPing}, {
      &protobuf_mcdota_2eproto::scc_info_CDOTAMsg_CoachHUDPing.base,}};

static void InitDefaultsCDOTAClientMsg_GuideSelectOption() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CDOTAClientMsg_GuideSelectOption_default_instance_;
    new (ptr) ::CDOTAClientMsg_GuideSelectOption();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CDOTAClientMsg_GuideSelectOption::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CDOTAClientMsg_GuideSelectOption =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCDOTAClientMsg_GuideSelectOption}, {}};

static void InitDefaultsCDOTAClientMsg_GuideSelected() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CDOTAClientMsg_GuideSelected_default_instance_;
    new (ptr) ::CDOTAClientMsg_GuideSelected();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CDOTAClientMsg_GuideSelected::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CDOTAClientMsg_GuideSelected =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCDOTAClientMsg_GuideSelected}, {}};

static void InitDefaultsCCLCMsg_CmdKeyValues() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CCLCMsg_CmdKeyValues_default_instance_;
    new (ptr) ::CCLCMsg_CmdKeyValues();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CCLCMsg_CmdKeyValues::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CCLCMsg_CmdKeyValues =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCCLCMsg_CmdKeyValues}, {}};

static void InitDefaultsCCLCMsg_FileCRCCheck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CCLCMsg_FileCRCCheck_default_instance_;
    new (ptr) ::CCLCMsg_FileCRCCheck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CCLCMsg_FileCRCCheck::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CCLCMsg_FileCRCCheck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCCLCMsg_FileCRCCheck}, {}};

static void InitDefaultsCCLCMsg_ClientMessage() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CCLCMsg_ClientMessage_default_instance_;
    new (ptr) ::CCLCMsg_ClientMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CCLCMsg_ClientMessage::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CCLCMsg_ClientMessage =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCCLCMsg_ClientMessage}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_CDOTAClientMsg_TipAlert.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CCLCMsg_SplitPlayerConnect.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CDOTAClientMsg_EventCNY2015Cmd.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CDOTAClientMsg_RankWager.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CDOTAClientMsg_EventPointsTip.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CDOTAClientMsg_CoinWager.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsg_CVars_CVar.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsg_CVars.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CNETMsg_SetConVar.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CNETMsg_StringCmd.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CDOTAMsg_CoachHUDPing.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CDOTAUserMsg_CoachHUDPing.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CDOTAClientMsg_GuideSelectOption.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CDOTAClientMsg_GuideSelected.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CCLCMsg_CmdKeyValues.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CCLCMsg_FileCRCCheck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CCLCMsg_ClientMessage.base);
}

::google::protobuf::Metadata file_level_metadata[17];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAClientMsg_TipAlert, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAClientMsg_TipAlert, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAClientMsg_TipAlert, tip_text_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCLCMsg_SplitPlayerConnect, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCLCMsg_SplitPlayerConnect, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCLCMsg_SplitPlayerConnect, playername_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAClientMsg_EventCNY2015Cmd, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAClientMsg_EventCNY2015Cmd, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAClientMsg_EventCNY2015Cmd, data_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAClientMsg_RankWager, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAClientMsg_RankWager, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAClientMsg_RankWager, announce_wager_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAClientMsg_EventPointsTip, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAClientMsg_EventPointsTip, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAClientMsg_EventPointsTip, recipient_player_id_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAClientMsg_CoinWager, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAClientMsg_CoinWager, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAClientMsg_CoinWager, wager_amount_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsg_CVars_CVar, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsg_CVars_CVar, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsg_CVars_CVar, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsg_CVars_CVar, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsg_CVars, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsg_CVars, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsg_CVars, cvars_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CNETMsg_SetConVar, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CNETMsg_SetConVar, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CNETMsg_SetConVar, convars_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CNETMsg_StringCmd, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CNETMsg_StringCmd, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CNETMsg_StringCmd, command_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAMsg_CoachHUDPing, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAMsg_CoachHUDPing, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAMsg_CoachHUDPing, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAMsg_CoachHUDPing, y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAMsg_CoachHUDPing, tgtpath_),
  1,
  2,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_CoachHUDPing, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_CoachHUDPing, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_CoachHUDPing, player_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAUserMsg_CoachHUDPing, hud_ping_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAClientMsg_GuideSelectOption, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAClientMsg_GuideSelectOption, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAClientMsg_GuideSelectOption, option_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAClientMsg_GuideSelectOption, force_recalculate_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAClientMsg_GuideSelected, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAClientMsg_GuideSelected, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAClientMsg_GuideSelected, guide_workshop_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDOTAClientMsg_GuideSelected, is_plus_guide_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCLCMsg_CmdKeyValues, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCLCMsg_CmdKeyValues, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCLCMsg_CmdKeyValues, data_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCLCMsg_FileCRCCheck, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCLCMsg_FileCRCCheck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCLCMsg_FileCRCCheck, code_path_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCLCMsg_FileCRCCheck, path_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCLCMsg_FileCRCCheck, code_filename_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCLCMsg_FileCRCCheck, filename_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCLCMsg_FileCRCCheck, crc_),
  2,
  0,
  3,
  1,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCLCMsg_ClientMessage, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCLCMsg_ClientMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCLCMsg_ClientMessage, msg_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCLCMsg_ClientMessage, data_),
  1,
  0,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 6, sizeof(::CDOTAClientMsg_TipAlert)},
  { 7, 13, sizeof(::CCLCMsg_SplitPlayerConnect)},
  { 14, 20, sizeof(::CDOTAClientMsg_EventCNY2015Cmd)},
  { 21, 27, sizeof(::CDOTAClientMsg_RankWager)},
  { 28, 34, sizeof(::CDOTAClientMsg_EventPointsTip)},
  { 35, 41, sizeof(::CDOTAClientMsg_CoinWager)},
  { 42, 49, sizeof(::CMsg_CVars_CVar)},
  { 51, 57, sizeof(::CMsg_CVars)},
  { 58, 64, sizeof(::CNETMsg_SetConVar)},
  { 65, 71, sizeof(::CNETMsg_StringCmd)},
  { 72, 80, sizeof(::CDOTAMsg_CoachHUDPing)},
  { 83, 90, sizeof(::CDOTAUserMsg_CoachHUDPing)},
  { 92, 99, sizeof(::CDOTAClientMsg_GuideSelectOption)},
  { 101, 108, sizeof(::CDOTAClientMsg_GuideSelected)},
  { 110, 116, sizeof(::CCLCMsg_CmdKeyValues)},
  { 117, 127, sizeof(::CCLCMsg_FileCRCCheck)},
  { 132, 139, sizeof(::CCLCMsg_ClientMessage)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CDOTAClientMsg_TipAlert_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CCLCMsg_SplitPlayerConnect_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CDOTAClientMsg_EventCNY2015Cmd_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CDOTAClientMsg_RankWager_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CDOTAClientMsg_EventPointsTip_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CDOTAClientMsg_CoinWager_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsg_CVars_CVar_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsg_CVars_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CNETMsg_SetConVar_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CNETMsg_StringCmd_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CDOTAMsg_CoachHUDPing_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CDOTAUserMsg_CoachHUDPing_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CDOTAClientMsg_GuideSelectOption_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CDOTAClientMsg_GuideSelected_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CCLCMsg_CmdKeyValues_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CCLCMsg_FileCRCCheck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CCLCMsg_ClientMessage_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "mcdota.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 17);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\014mcdota.proto\"+\n\027CDOTAClientMsg_TipAler"
      "t\022\020\n\010tip_text\030\001 \001(\t\"0\n\032CCLCMsg_SplitPlay"
      "erConnect\022\022\n\nplayername\030\001 \001(\t\".\n\036CDOTACl"
      "ientMsg_EventCNY2015Cmd\022\014\n\004data\030\001 \001(\014\"2\n"
      "\030CDOTAClientMsg_RankWager\022\026\n\016announce_wa"
      "ger\030\001 \001(\010\"<\n\035CDOTAClientMsg_EventPointsT"
      "ip\022\033\n\023recipient_player_id\030\001 \001(\r\"0\n\030CDOTA"
      "ClientMsg_CoinWager\022\024\n\014wager_amount\030\001 \001("
      "\r\"R\n\nCMsg_CVars\022\037\n\005cvars\030\001 \003(\0132\020.CMsg_CV"
      "ars.CVar\032#\n\004CVar\022\014\n\004name\030\001 \001(\t\022\r\n\005value\030"
      "\002 \001(\t\"1\n\021CNETMsg_SetConVar\022\034\n\007convars\030\001 "
      "\001(\0132\013.CMsg_CVars\"$\n\021CNETMsg_StringCmd\022\017\n"
      "\007command\030\001 \001(\t\">\n\025CDOTAMsg_CoachHUDPing\022"
      "\t\n\001x\030\001 \001(\r\022\t\n\001y\030\002 \001(\r\022\017\n\007tgtpath\030\003 \001(\t\"X"
      "\n\031CDOTAUserMsg_CoachHUDPing\022\021\n\tplayer_id"
      "\030\001 \001(\r\022(\n\010hud_ping\030\002 \001(\0132\026.CDOTAMsg_Coac"
      "hHUDPing\"M\n CDOTAClientMsg_GuideSelectOp"
      "tion\022\016\n\006option\030\001 \001(\r\022\031\n\021force_recalculat"
      "e\030\002 \001(\010\"P\n\034CDOTAClientMsg_GuideSelected\022"
      "\031\n\021guide_workshop_id\030\001 \001(\004\022\025\n\ris_plus_gu"
      "ide\030\002 \001(\010\"$\n\024CCLCMsg_CmdKeyValues\022\014\n\004dat"
      "a\030\001 \001(\014\"m\n\024CCLCMsg_FileCRCCheck\022\021\n\tcode_"
      "path\030\001 \001(\005\022\014\n\004path\030\002 \001(\t\022\025\n\rcode_filenam"
      "e\030\003 \001(\005\022\020\n\010filename\030\004 \001(\t\022\013\n\003crc\030\005 \001(\007\"7"
      "\n\025CCLCMsg_ClientMessage\022\020\n\010msg_type\030\001 \001("
      "\005\022\014\n\004data\030\002 \001(\014B\005H\001\200\001\000"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1022);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "mcdota.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_mcdota_2eproto

// ===================================================================

void CDOTAClientMsg_TipAlert::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CDOTAClientMsg_TipAlert::kTipTextFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CDOTAClientMsg_TipAlert::CDOTAClientMsg_TipAlert()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_mcdota_2eproto::scc_info_CDOTAClientMsg_TipAlert.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CDOTAClientMsg_TipAlert)
}
CDOTAClientMsg_TipAlert::CDOTAClientMsg_TipAlert(const CDOTAClientMsg_TipAlert& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  tip_text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_tip_text()) {
    tip_text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tip_text_);
  }
  // @@protoc_insertion_point(copy_constructor:CDOTAClientMsg_TipAlert)
}

void CDOTAClientMsg_TipAlert::SharedCtor() {
  tip_text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CDOTAClientMsg_TipAlert::~CDOTAClientMsg_TipAlert() {
  // @@protoc_insertion_point(destructor:CDOTAClientMsg_TipAlert)
  SharedDtor();
}

void CDOTAClientMsg_TipAlert::SharedDtor() {
  tip_text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CDOTAClientMsg_TipAlert::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CDOTAClientMsg_TipAlert::descriptor() {
  ::protobuf_mcdota_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mcdota_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CDOTAClientMsg_TipAlert& CDOTAClientMsg_TipAlert::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_mcdota_2eproto::scc_info_CDOTAClientMsg_TipAlert.base);
  return *internal_default_instance();
}


void CDOTAClientMsg_TipAlert::Clear() {
// @@protoc_insertion_point(message_clear_start:CDOTAClientMsg_TipAlert)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    tip_text_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CDOTAClientMsg_TipAlert::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CDOTAClientMsg_TipAlert)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string tip_text = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tip_text()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->tip_text().data(), static_cast<int>(this->tip_text().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CDOTAClientMsg_TipAlert.tip_text");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CDOTAClientMsg_TipAlert)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CDOTAClientMsg_TipAlert)
  return false;
#undef DO_
}

void CDOTAClientMsg_TipAlert::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CDOTAClientMsg_TipAlert)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string tip_text = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->tip_text().data(), static_cast<int>(this->tip_text().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CDOTAClientMsg_TipAlert.tip_text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->tip_text(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CDOTAClientMsg_TipAlert)
}

::google::protobuf::uint8* CDOTAClientMsg_TipAlert::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CDOTAClientMsg_TipAlert)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string tip_text = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->tip_text().data(), static_cast<int>(this->tip_text().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CDOTAClientMsg_TipAlert.tip_text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->tip_text(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDOTAClientMsg_TipAlert)
  return target;
}

size_t CDOTAClientMsg_TipAlert::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CDOTAClientMsg_TipAlert)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional string tip_text = 1;
  if (has_tip_text()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->tip_text());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CDOTAClientMsg_TipAlert::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CDOTAClientMsg_TipAlert)
  GOOGLE_DCHECK_NE(&from, this);
  const CDOTAClientMsg_TipAlert* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CDOTAClientMsg_TipAlert>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CDOTAClientMsg_TipAlert)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CDOTAClientMsg_TipAlert)
    MergeFrom(*source);
  }
}

void CDOTAClientMsg_TipAlert::MergeFrom(const CDOTAClientMsg_TipAlert& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CDOTAClientMsg_TipAlert)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_tip_text()) {
    set_has_tip_text();
    tip_text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tip_text_);
  }
}

void CDOTAClientMsg_TipAlert::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CDOTAClientMsg_TipAlert)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CDOTAClientMsg_TipAlert::CopyFrom(const CDOTAClientMsg_TipAlert& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CDOTAClientMsg_TipAlert)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CDOTAClientMsg_TipAlert::IsInitialized() const {
  return true;
}

void CDOTAClientMsg_TipAlert::Swap(CDOTAClientMsg_TipAlert* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CDOTAClientMsg_TipAlert::InternalSwap(CDOTAClientMsg_TipAlert* other) {
  using std::swap;
  tip_text_.Swap(&other->tip_text_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CDOTAClientMsg_TipAlert::GetMetadata() const {
  protobuf_mcdota_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mcdota_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CCLCMsg_SplitPlayerConnect::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CCLCMsg_SplitPlayerConnect::kPlayernameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CCLCMsg_SplitPlayerConnect::CCLCMsg_SplitPlayerConnect()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_mcdota_2eproto::scc_info_CCLCMsg_SplitPlayerConnect.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CCLCMsg_SplitPlayerConnect)
}
CCLCMsg_SplitPlayerConnect::CCLCMsg_SplitPlayerConnect(const CCLCMsg_SplitPlayerConnect& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  playername_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_playername()) {
    playername_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.playername_);
  }
  // @@protoc_insertion_point(copy_constructor:CCLCMsg_SplitPlayerConnect)
}

void CCLCMsg_SplitPlayerConnect::SharedCtor() {
  playername_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CCLCMsg_SplitPlayerConnect::~CCLCMsg_SplitPlayerConnect() {
  // @@protoc_insertion_point(destructor:CCLCMsg_SplitPlayerConnect)
  SharedDtor();
}

void CCLCMsg_SplitPlayerConnect::SharedDtor() {
  playername_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CCLCMsg_SplitPlayerConnect::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CCLCMsg_SplitPlayerConnect::descriptor() {
  ::protobuf_mcdota_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mcdota_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CCLCMsg_SplitPlayerConnect& CCLCMsg_SplitPlayerConnect::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_mcdota_2eproto::scc_info_CCLCMsg_SplitPlayerConnect.base);
  return *internal_default_instance();
}


void CCLCMsg_SplitPlayerConnect::Clear() {
// @@protoc_insertion_point(message_clear_start:CCLCMsg_SplitPlayerConnect)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    playername_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CCLCMsg_SplitPlayerConnect::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CCLCMsg_SplitPlayerConnect)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string playername = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_playername()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->playername().data(), static_cast<int>(this->playername().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CCLCMsg_SplitPlayerConnect.playername");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CCLCMsg_SplitPlayerConnect)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CCLCMsg_SplitPlayerConnect)
  return false;
#undef DO_
}

void CCLCMsg_SplitPlayerConnect::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CCLCMsg_SplitPlayerConnect)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string playername = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->playername().data(), static_cast<int>(this->playername().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CCLCMsg_SplitPlayerConnect.playername");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->playername(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CCLCMsg_SplitPlayerConnect)
}

::google::protobuf::uint8* CCLCMsg_SplitPlayerConnect::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CCLCMsg_SplitPlayerConnect)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string playername = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->playername().data(), static_cast<int>(this->playername().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CCLCMsg_SplitPlayerConnect.playername");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->playername(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCLCMsg_SplitPlayerConnect)
  return target;
}

size_t CCLCMsg_SplitPlayerConnect::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCLCMsg_SplitPlayerConnect)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional string playername = 1;
  if (has_playername()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->playername());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CCLCMsg_SplitPlayerConnect::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CCLCMsg_SplitPlayerConnect)
  GOOGLE_DCHECK_NE(&from, this);
  const CCLCMsg_SplitPlayerConnect* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CCLCMsg_SplitPlayerConnect>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CCLCMsg_SplitPlayerConnect)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CCLCMsg_SplitPlayerConnect)
    MergeFrom(*source);
  }
}

void CCLCMsg_SplitPlayerConnect::MergeFrom(const CCLCMsg_SplitPlayerConnect& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CCLCMsg_SplitPlayerConnect)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_playername()) {
    set_has_playername();
    playername_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.playername_);
  }
}

void CCLCMsg_SplitPlayerConnect::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CCLCMsg_SplitPlayerConnect)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CCLCMsg_SplitPlayerConnect::CopyFrom(const CCLCMsg_SplitPlayerConnect& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCLCMsg_SplitPlayerConnect)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CCLCMsg_SplitPlayerConnect::IsInitialized() const {
  return true;
}

void CCLCMsg_SplitPlayerConnect::Swap(CCLCMsg_SplitPlayerConnect* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CCLCMsg_SplitPlayerConnect::InternalSwap(CCLCMsg_SplitPlayerConnect* other) {
  using std::swap;
  playername_.Swap(&other->playername_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CCLCMsg_SplitPlayerConnect::GetMetadata() const {
  protobuf_mcdota_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mcdota_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CDOTAClientMsg_EventCNY2015Cmd::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CDOTAClientMsg_EventCNY2015Cmd::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CDOTAClientMsg_EventCNY2015Cmd::CDOTAClientMsg_EventCNY2015Cmd()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_mcdota_2eproto::scc_info_CDOTAClientMsg_EventCNY2015Cmd.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CDOTAClientMsg_EventCNY2015Cmd)
}
CDOTAClientMsg_EventCNY2015Cmd::CDOTAClientMsg_EventCNY2015Cmd(const CDOTAClientMsg_EventCNY2015Cmd& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_data()) {
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  // @@protoc_insertion_point(copy_constructor:CDOTAClientMsg_EventCNY2015Cmd)
}

void CDOTAClientMsg_EventCNY2015Cmd::SharedCtor() {
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CDOTAClientMsg_EventCNY2015Cmd::~CDOTAClientMsg_EventCNY2015Cmd() {
  // @@protoc_insertion_point(destructor:CDOTAClientMsg_EventCNY2015Cmd)
  SharedDtor();
}

void CDOTAClientMsg_EventCNY2015Cmd::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CDOTAClientMsg_EventCNY2015Cmd::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CDOTAClientMsg_EventCNY2015Cmd::descriptor() {
  ::protobuf_mcdota_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mcdota_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CDOTAClientMsg_EventCNY2015Cmd& CDOTAClientMsg_EventCNY2015Cmd::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_mcdota_2eproto::scc_info_CDOTAClientMsg_EventCNY2015Cmd.base);
  return *internal_default_instance();
}


void CDOTAClientMsg_EventCNY2015Cmd::Clear() {
// @@protoc_insertion_point(message_clear_start:CDOTAClientMsg_EventCNY2015Cmd)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    data_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CDOTAClientMsg_EventCNY2015Cmd::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CDOTAClientMsg_EventCNY2015Cmd)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes data = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CDOTAClientMsg_EventCNY2015Cmd)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CDOTAClientMsg_EventCNY2015Cmd)
  return false;
#undef DO_
}

void CDOTAClientMsg_EventCNY2015Cmd::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CDOTAClientMsg_EventCNY2015Cmd)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes data = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CDOTAClientMsg_EventCNY2015Cmd)
}

::google::protobuf::uint8* CDOTAClientMsg_EventCNY2015Cmd::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CDOTAClientMsg_EventCNY2015Cmd)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes data = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDOTAClientMsg_EventCNY2015Cmd)
  return target;
}

size_t CDOTAClientMsg_EventCNY2015Cmd::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CDOTAClientMsg_EventCNY2015Cmd)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional bytes data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->data());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CDOTAClientMsg_EventCNY2015Cmd::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CDOTAClientMsg_EventCNY2015Cmd)
  GOOGLE_DCHECK_NE(&from, this);
  const CDOTAClientMsg_EventCNY2015Cmd* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CDOTAClientMsg_EventCNY2015Cmd>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CDOTAClientMsg_EventCNY2015Cmd)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CDOTAClientMsg_EventCNY2015Cmd)
    MergeFrom(*source);
  }
}

void CDOTAClientMsg_EventCNY2015Cmd::MergeFrom(const CDOTAClientMsg_EventCNY2015Cmd& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CDOTAClientMsg_EventCNY2015Cmd)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_data()) {
    set_has_data();
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
}

void CDOTAClientMsg_EventCNY2015Cmd::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CDOTAClientMsg_EventCNY2015Cmd)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CDOTAClientMsg_EventCNY2015Cmd::CopyFrom(const CDOTAClientMsg_EventCNY2015Cmd& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CDOTAClientMsg_EventCNY2015Cmd)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CDOTAClientMsg_EventCNY2015Cmd::IsInitialized() const {
  return true;
}

void CDOTAClientMsg_EventCNY2015Cmd::Swap(CDOTAClientMsg_EventCNY2015Cmd* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CDOTAClientMsg_EventCNY2015Cmd::InternalSwap(CDOTAClientMsg_EventCNY2015Cmd* other) {
  using std::swap;
  data_.Swap(&other->data_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CDOTAClientMsg_EventCNY2015Cmd::GetMetadata() const {
  protobuf_mcdota_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mcdota_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CDOTAClientMsg_RankWager::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CDOTAClientMsg_RankWager::kAnnounceWagerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CDOTAClientMsg_RankWager::CDOTAClientMsg_RankWager()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_mcdota_2eproto::scc_info_CDOTAClientMsg_RankWager.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CDOTAClientMsg_RankWager)
}
CDOTAClientMsg_RankWager::CDOTAClientMsg_RankWager(const CDOTAClientMsg_RankWager& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  announce_wager_ = from.announce_wager_;
  // @@protoc_insertion_point(copy_constructor:CDOTAClientMsg_RankWager)
}

void CDOTAClientMsg_RankWager::SharedCtor() {
  announce_wager_ = false;
}

CDOTAClientMsg_RankWager::~CDOTAClientMsg_RankWager() {
  // @@protoc_insertion_point(destructor:CDOTAClientMsg_RankWager)
  SharedDtor();
}

void CDOTAClientMsg_RankWager::SharedDtor() {
}

void CDOTAClientMsg_RankWager::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CDOTAClientMsg_RankWager::descriptor() {
  ::protobuf_mcdota_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mcdota_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CDOTAClientMsg_RankWager& CDOTAClientMsg_RankWager::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_mcdota_2eproto::scc_info_CDOTAClientMsg_RankWager.base);
  return *internal_default_instance();
}


void CDOTAClientMsg_RankWager::Clear() {
// @@protoc_insertion_point(message_clear_start:CDOTAClientMsg_RankWager)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  announce_wager_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CDOTAClientMsg_RankWager::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CDOTAClientMsg_RankWager)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool announce_wager = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_announce_wager();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &announce_wager_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CDOTAClientMsg_RankWager)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CDOTAClientMsg_RankWager)
  return false;
#undef DO_
}

void CDOTAClientMsg_RankWager::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CDOTAClientMsg_RankWager)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool announce_wager = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->announce_wager(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CDOTAClientMsg_RankWager)
}

::google::protobuf::uint8* CDOTAClientMsg_RankWager::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CDOTAClientMsg_RankWager)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool announce_wager = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->announce_wager(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDOTAClientMsg_RankWager)
  return target;
}

size_t CDOTAClientMsg_RankWager::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CDOTAClientMsg_RankWager)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional bool announce_wager = 1;
  if (has_announce_wager()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CDOTAClientMsg_RankWager::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CDOTAClientMsg_RankWager)
  GOOGLE_DCHECK_NE(&from, this);
  const CDOTAClientMsg_RankWager* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CDOTAClientMsg_RankWager>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CDOTAClientMsg_RankWager)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CDOTAClientMsg_RankWager)
    MergeFrom(*source);
  }
}

void CDOTAClientMsg_RankWager::MergeFrom(const CDOTAClientMsg_RankWager& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CDOTAClientMsg_RankWager)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_announce_wager()) {
    set_announce_wager(from.announce_wager());
  }
}

void CDOTAClientMsg_RankWager::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CDOTAClientMsg_RankWager)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CDOTAClientMsg_RankWager::CopyFrom(const CDOTAClientMsg_RankWager& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CDOTAClientMsg_RankWager)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CDOTAClientMsg_RankWager::IsInitialized() const {
  return true;
}

void CDOTAClientMsg_RankWager::Swap(CDOTAClientMsg_RankWager* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CDOTAClientMsg_RankWager::InternalSwap(CDOTAClientMsg_RankWager* other) {
  using std::swap;
  swap(announce_wager_, other->announce_wager_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CDOTAClientMsg_RankWager::GetMetadata() const {
  protobuf_mcdota_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mcdota_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CDOTAClientMsg_EventPointsTip::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CDOTAClientMsg_EventPointsTip::kRecipientPlayerIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CDOTAClientMsg_EventPointsTip::CDOTAClientMsg_EventPointsTip()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_mcdota_2eproto::scc_info_CDOTAClientMsg_EventPointsTip.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CDOTAClientMsg_EventPointsTip)
}
CDOTAClientMsg_EventPointsTip::CDOTAClientMsg_EventPointsTip(const CDOTAClientMsg_EventPointsTip& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  recipient_player_id_ = from.recipient_player_id_;
  // @@protoc_insertion_point(copy_constructor:CDOTAClientMsg_EventPointsTip)
}

void CDOTAClientMsg_EventPointsTip::SharedCtor() {
  recipient_player_id_ = 0u;
}

CDOTAClientMsg_EventPointsTip::~CDOTAClientMsg_EventPointsTip() {
  // @@protoc_insertion_point(destructor:CDOTAClientMsg_EventPointsTip)
  SharedDtor();
}

void CDOTAClientMsg_EventPointsTip::SharedDtor() {
}

void CDOTAClientMsg_EventPointsTip::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CDOTAClientMsg_EventPointsTip::descriptor() {
  ::protobuf_mcdota_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mcdota_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CDOTAClientMsg_EventPointsTip& CDOTAClientMsg_EventPointsTip::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_mcdota_2eproto::scc_info_CDOTAClientMsg_EventPointsTip.base);
  return *internal_default_instance();
}


void CDOTAClientMsg_EventPointsTip::Clear() {
// @@protoc_insertion_point(message_clear_start:CDOTAClientMsg_EventPointsTip)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  recipient_player_id_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CDOTAClientMsg_EventPointsTip::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CDOTAClientMsg_EventPointsTip)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 recipient_player_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_recipient_player_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &recipient_player_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CDOTAClientMsg_EventPointsTip)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CDOTAClientMsg_EventPointsTip)
  return false;
#undef DO_
}

void CDOTAClientMsg_EventPointsTip::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CDOTAClientMsg_EventPointsTip)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 recipient_player_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->recipient_player_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CDOTAClientMsg_EventPointsTip)
}

::google::protobuf::uint8* CDOTAClientMsg_EventPointsTip::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CDOTAClientMsg_EventPointsTip)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 recipient_player_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->recipient_player_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDOTAClientMsg_EventPointsTip)
  return target;
}

size_t CDOTAClientMsg_EventPointsTip::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CDOTAClientMsg_EventPointsTip)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional uint32 recipient_player_id = 1;
  if (has_recipient_player_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->recipient_player_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CDOTAClientMsg_EventPointsTip::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CDOTAClientMsg_EventPointsTip)
  GOOGLE_DCHECK_NE(&from, this);
  const CDOTAClientMsg_EventPointsTip* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CDOTAClientMsg_EventPointsTip>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CDOTAClientMsg_EventPointsTip)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CDOTAClientMsg_EventPointsTip)
    MergeFrom(*source);
  }
}

void CDOTAClientMsg_EventPointsTip::MergeFrom(const CDOTAClientMsg_EventPointsTip& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CDOTAClientMsg_EventPointsTip)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_recipient_player_id()) {
    set_recipient_player_id(from.recipient_player_id());
  }
}

void CDOTAClientMsg_EventPointsTip::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CDOTAClientMsg_EventPointsTip)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CDOTAClientMsg_EventPointsTip::CopyFrom(const CDOTAClientMsg_EventPointsTip& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CDOTAClientMsg_EventPointsTip)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CDOTAClientMsg_EventPointsTip::IsInitialized() const {
  return true;
}

void CDOTAClientMsg_EventPointsTip::Swap(CDOTAClientMsg_EventPointsTip* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CDOTAClientMsg_EventPointsTip::InternalSwap(CDOTAClientMsg_EventPointsTip* other) {
  using std::swap;
  swap(recipient_player_id_, other->recipient_player_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CDOTAClientMsg_EventPointsTip::GetMetadata() const {
  protobuf_mcdota_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mcdota_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CDOTAClientMsg_CoinWager::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CDOTAClientMsg_CoinWager::kWagerAmountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CDOTAClientMsg_CoinWager::CDOTAClientMsg_CoinWager()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_mcdota_2eproto::scc_info_CDOTAClientMsg_CoinWager.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CDOTAClientMsg_CoinWager)
}
CDOTAClientMsg_CoinWager::CDOTAClientMsg_CoinWager(const CDOTAClientMsg_CoinWager& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  wager_amount_ = from.wager_amount_;
  // @@protoc_insertion_point(copy_constructor:CDOTAClientMsg_CoinWager)
}

void CDOTAClientMsg_CoinWager::SharedCtor() {
  wager_amount_ = 0u;
}

CDOTAClientMsg_CoinWager::~CDOTAClientMsg_CoinWager() {
  // @@protoc_insertion_point(destructor:CDOTAClientMsg_CoinWager)
  SharedDtor();
}

void CDOTAClientMsg_CoinWager::SharedDtor() {
}

void CDOTAClientMsg_CoinWager::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CDOTAClientMsg_CoinWager::descriptor() {
  ::protobuf_mcdota_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mcdota_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CDOTAClientMsg_CoinWager& CDOTAClientMsg_CoinWager::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_mcdota_2eproto::scc_info_CDOTAClientMsg_CoinWager.base);
  return *internal_default_instance();
}


void CDOTAClientMsg_CoinWager::Clear() {
// @@protoc_insertion_point(message_clear_start:CDOTAClientMsg_CoinWager)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  wager_amount_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CDOTAClientMsg_CoinWager::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CDOTAClientMsg_CoinWager)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 wager_amount = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_wager_amount();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &wager_amount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CDOTAClientMsg_CoinWager)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CDOTAClientMsg_CoinWager)
  return false;
#undef DO_
}

void CDOTAClientMsg_CoinWager::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CDOTAClientMsg_CoinWager)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 wager_amount = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->wager_amount(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CDOTAClientMsg_CoinWager)
}

::google::protobuf::uint8* CDOTAClientMsg_CoinWager::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CDOTAClientMsg_CoinWager)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 wager_amount = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->wager_amount(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDOTAClientMsg_CoinWager)
  return target;
}

size_t CDOTAClientMsg_CoinWager::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CDOTAClientMsg_CoinWager)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional uint32 wager_amount = 1;
  if (has_wager_amount()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->wager_amount());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CDOTAClientMsg_CoinWager::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CDOTAClientMsg_CoinWager)
  GOOGLE_DCHECK_NE(&from, this);
  const CDOTAClientMsg_CoinWager* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CDOTAClientMsg_CoinWager>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CDOTAClientMsg_CoinWager)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CDOTAClientMsg_CoinWager)
    MergeFrom(*source);
  }
}

void CDOTAClientMsg_CoinWager::MergeFrom(const CDOTAClientMsg_CoinWager& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CDOTAClientMsg_CoinWager)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_wager_amount()) {
    set_wager_amount(from.wager_amount());
  }
}

void CDOTAClientMsg_CoinWager::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CDOTAClientMsg_CoinWager)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CDOTAClientMsg_CoinWager::CopyFrom(const CDOTAClientMsg_CoinWager& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CDOTAClientMsg_CoinWager)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CDOTAClientMsg_CoinWager::IsInitialized() const {
  return true;
}

void CDOTAClientMsg_CoinWager::Swap(CDOTAClientMsg_CoinWager* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CDOTAClientMsg_CoinWager::InternalSwap(CDOTAClientMsg_CoinWager* other) {
  using std::swap;
  swap(wager_amount_, other->wager_amount_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CDOTAClientMsg_CoinWager::GetMetadata() const {
  protobuf_mcdota_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mcdota_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsg_CVars_CVar::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsg_CVars_CVar::kNameFieldNumber;
const int CMsg_CVars_CVar::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsg_CVars_CVar::CMsg_CVars_CVar()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_mcdota_2eproto::scc_info_CMsg_CVars_CVar.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsg_CVars.CVar)
}
CMsg_CVars_CVar::CMsg_CVars_CVar(const CMsg_CVars_CVar& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_value()) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  // @@protoc_insertion_point(copy_constructor:CMsg_CVars.CVar)
}

void CMsg_CVars_CVar::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CMsg_CVars_CVar::~CMsg_CVars_CVar() {
  // @@protoc_insertion_point(destructor:CMsg_CVars.CVar)
  SharedDtor();
}

void CMsg_CVars_CVar::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsg_CVars_CVar::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsg_CVars_CVar::descriptor() {
  ::protobuf_mcdota_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mcdota_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsg_CVars_CVar& CMsg_CVars_CVar::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_mcdota_2eproto::scc_info_CMsg_CVars_CVar.base);
  return *internal_default_instance();
}


void CMsg_CVars_CVar::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsg_CVars.CVar)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      value_.ClearNonDefaultToEmptyNoArena();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsg_CVars_CVar::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsg_CVars.CVar)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsg_CVars.CVar.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->value().data(), static_cast<int>(this->value().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsg_CVars.CVar.value");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsg_CVars.CVar)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsg_CVars.CVar)
  return false;
#undef DO_
}

void CMsg_CVars_CVar::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsg_CVars.CVar)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsg_CVars.CVar.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional string value = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsg_CVars.CVar.value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsg_CVars.CVar)
}

::google::protobuf::uint8* CMsg_CVars_CVar::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsg_CVars.CVar)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsg_CVars.CVar.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional string value = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsg_CVars.CVar.value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsg_CVars.CVar)
  return target;
}

size_t CMsg_CVars_CVar::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsg_CVars.CVar)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional string value = 2;
    if (has_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->value());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsg_CVars_CVar::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsg_CVars.CVar)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsg_CVars_CVar* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsg_CVars_CVar>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsg_CVars.CVar)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsg_CVars.CVar)
    MergeFrom(*source);
  }
}

void CMsg_CVars_CVar::MergeFrom(const CMsg_CVars_CVar& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsg_CVars.CVar)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_value();
      value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
    }
  }
}

void CMsg_CVars_CVar::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsg_CVars.CVar)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsg_CVars_CVar::CopyFrom(const CMsg_CVars_CVar& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsg_CVars.CVar)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsg_CVars_CVar::IsInitialized() const {
  return true;
}

void CMsg_CVars_CVar::Swap(CMsg_CVars_CVar* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsg_CVars_CVar::InternalSwap(CMsg_CVars_CVar* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  value_.Swap(&other->value_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsg_CVars_CVar::GetMetadata() const {
  protobuf_mcdota_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mcdota_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsg_CVars::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsg_CVars::kCvarsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsg_CVars::CMsg_CVars()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_mcdota_2eproto::scc_info_CMsg_CVars.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsg_CVars)
}
CMsg_CVars::CMsg_CVars(const CMsg_CVars& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      cvars_(from.cvars_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CMsg_CVars)
}

void CMsg_CVars::SharedCtor() {
}

CMsg_CVars::~CMsg_CVars() {
  // @@protoc_insertion_point(destructor:CMsg_CVars)
  SharedDtor();
}

void CMsg_CVars::SharedDtor() {
}

void CMsg_CVars::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CMsg_CVars::descriptor() {
  ::protobuf_mcdota_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mcdota_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsg_CVars& CMsg_CVars::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_mcdota_2eproto::scc_info_CMsg_CVars.base);
  return *internal_default_instance();
}


void CMsg_CVars::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsg_CVars)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cvars_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsg_CVars::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsg_CVars)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .CMsg_CVars.CVar cvars = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_cvars()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsg_CVars)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsg_CVars)
  return false;
#undef DO_
}

void CMsg_CVars::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsg_CVars)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CMsg_CVars.CVar cvars = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->cvars_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->cvars(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsg_CVars)
}

::google::protobuf::uint8* CMsg_CVars::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsg_CVars)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CMsg_CVars.CVar cvars = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->cvars_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->cvars(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsg_CVars)
  return target;
}

size_t CMsg_CVars::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsg_CVars)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .CMsg_CVars.CVar cvars = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->cvars_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->cvars(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsg_CVars::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsg_CVars)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsg_CVars* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsg_CVars>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsg_CVars)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsg_CVars)
    MergeFrom(*source);
  }
}

void CMsg_CVars::MergeFrom(const CMsg_CVars& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsg_CVars)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cvars_.MergeFrom(from.cvars_);
}

void CMsg_CVars::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsg_CVars)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsg_CVars::CopyFrom(const CMsg_CVars& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsg_CVars)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsg_CVars::IsInitialized() const {
  return true;
}

void CMsg_CVars::Swap(CMsg_CVars* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsg_CVars::InternalSwap(CMsg_CVars* other) {
  using std::swap;
  CastToBase(&cvars_)->InternalSwap(CastToBase(&other->cvars_));
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CMsg_CVars::GetMetadata() const {
  protobuf_mcdota_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mcdota_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CNETMsg_SetConVar::InitAsDefaultInstance() {
  ::_CNETMsg_SetConVar_default_instance_._instance.get_mutable()->convars_ = const_cast< ::CMsg_CVars*>(
      ::CMsg_CVars::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CNETMsg_SetConVar::kConvarsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CNETMsg_SetConVar::CNETMsg_SetConVar()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_mcdota_2eproto::scc_info_CNETMsg_SetConVar.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CNETMsg_SetConVar)
}
CNETMsg_SetConVar::CNETMsg_SetConVar(const CNETMsg_SetConVar& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_convars()) {
    convars_ = new ::CMsg_CVars(*from.convars_);
  } else {
    convars_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:CNETMsg_SetConVar)
}

void CNETMsg_SetConVar::SharedCtor() {
  convars_ = NULL;
}

CNETMsg_SetConVar::~CNETMsg_SetConVar() {
  // @@protoc_insertion_point(destructor:CNETMsg_SetConVar)
  SharedDtor();
}

void CNETMsg_SetConVar::SharedDtor() {
  if (this != internal_default_instance()) delete convars_;
}

void CNETMsg_SetConVar::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CNETMsg_SetConVar::descriptor() {
  ::protobuf_mcdota_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mcdota_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CNETMsg_SetConVar& CNETMsg_SetConVar::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_mcdota_2eproto::scc_info_CNETMsg_SetConVar.base);
  return *internal_default_instance();
}


void CNETMsg_SetConVar::Clear() {
// @@protoc_insertion_point(message_clear_start:CNETMsg_SetConVar)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(convars_ != NULL);
    convars_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CNETMsg_SetConVar::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CNETMsg_SetConVar)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .CMsg_CVars convars = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_convars()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CNETMsg_SetConVar)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CNETMsg_SetConVar)
  return false;
#undef DO_
}

void CNETMsg_SetConVar::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CNETMsg_SetConVar)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .CMsg_CVars convars = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_convars(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CNETMsg_SetConVar)
}

::google::protobuf::uint8* CNETMsg_SetConVar::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CNETMsg_SetConVar)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .CMsg_CVars convars = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_convars(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CNETMsg_SetConVar)
  return target;
}

size_t CNETMsg_SetConVar::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CNETMsg_SetConVar)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional .CMsg_CVars convars = 1;
  if (has_convars()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *convars_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CNETMsg_SetConVar::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CNETMsg_SetConVar)
  GOOGLE_DCHECK_NE(&from, this);
  const CNETMsg_SetConVar* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CNETMsg_SetConVar>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CNETMsg_SetConVar)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CNETMsg_SetConVar)
    MergeFrom(*source);
  }
}

void CNETMsg_SetConVar::MergeFrom(const CNETMsg_SetConVar& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CNETMsg_SetConVar)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_convars()) {
    mutable_convars()->::CMsg_CVars::MergeFrom(from.convars());
  }
}

void CNETMsg_SetConVar::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CNETMsg_SetConVar)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CNETMsg_SetConVar::CopyFrom(const CNETMsg_SetConVar& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CNETMsg_SetConVar)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CNETMsg_SetConVar::IsInitialized() const {
  return true;
}

void CNETMsg_SetConVar::Swap(CNETMsg_SetConVar* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CNETMsg_SetConVar::InternalSwap(CNETMsg_SetConVar* other) {
  using std::swap;
  swap(convars_, other->convars_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CNETMsg_SetConVar::GetMetadata() const {
  protobuf_mcdota_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mcdota_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CNETMsg_StringCmd::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CNETMsg_StringCmd::kCommandFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CNETMsg_StringCmd::CNETMsg_StringCmd()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_mcdota_2eproto::scc_info_CNETMsg_StringCmd.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CNETMsg_StringCmd)
}
CNETMsg_StringCmd::CNETMsg_StringCmd(const CNETMsg_StringCmd& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  command_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_command()) {
    command_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.command_);
  }
  // @@protoc_insertion_point(copy_constructor:CNETMsg_StringCmd)
}

void CNETMsg_StringCmd::SharedCtor() {
  command_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CNETMsg_StringCmd::~CNETMsg_StringCmd() {
  // @@protoc_insertion_point(destructor:CNETMsg_StringCmd)
  SharedDtor();
}

void CNETMsg_StringCmd::SharedDtor() {
  command_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CNETMsg_StringCmd::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CNETMsg_StringCmd::descriptor() {
  ::protobuf_mcdota_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mcdota_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CNETMsg_StringCmd& CNETMsg_StringCmd::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_mcdota_2eproto::scc_info_CNETMsg_StringCmd.base);
  return *internal_default_instance();
}


void CNETMsg_StringCmd::Clear() {
// @@protoc_insertion_point(message_clear_start:CNETMsg_StringCmd)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    command_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CNETMsg_StringCmd::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CNETMsg_StringCmd)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string command = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_command()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->command().data(), static_cast<int>(this->command().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CNETMsg_StringCmd.command");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CNETMsg_StringCmd)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CNETMsg_StringCmd)
  return false;
#undef DO_
}

void CNETMsg_StringCmd::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CNETMsg_StringCmd)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string command = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->command().data(), static_cast<int>(this->command().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CNETMsg_StringCmd.command");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->command(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CNETMsg_StringCmd)
}

::google::protobuf::uint8* CNETMsg_StringCmd::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CNETMsg_StringCmd)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string command = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->command().data(), static_cast<int>(this->command().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CNETMsg_StringCmd.command");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->command(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CNETMsg_StringCmd)
  return target;
}

size_t CNETMsg_StringCmd::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CNETMsg_StringCmd)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional string command = 1;
  if (has_command()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->command());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CNETMsg_StringCmd::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CNETMsg_StringCmd)
  GOOGLE_DCHECK_NE(&from, this);
  const CNETMsg_StringCmd* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CNETMsg_StringCmd>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CNETMsg_StringCmd)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CNETMsg_StringCmd)
    MergeFrom(*source);
  }
}

void CNETMsg_StringCmd::MergeFrom(const CNETMsg_StringCmd& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CNETMsg_StringCmd)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_command()) {
    set_has_command();
    command_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.command_);
  }
}

void CNETMsg_StringCmd::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CNETMsg_StringCmd)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CNETMsg_StringCmd::CopyFrom(const CNETMsg_StringCmd& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CNETMsg_StringCmd)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CNETMsg_StringCmd::IsInitialized() const {
  return true;
}

void CNETMsg_StringCmd::Swap(CNETMsg_StringCmd* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CNETMsg_StringCmd::InternalSwap(CNETMsg_StringCmd* other) {
  using std::swap;
  command_.Swap(&other->command_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CNETMsg_StringCmd::GetMetadata() const {
  protobuf_mcdota_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mcdota_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CDOTAMsg_CoachHUDPing::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CDOTAMsg_CoachHUDPing::kXFieldNumber;
const int CDOTAMsg_CoachHUDPing::kYFieldNumber;
const int CDOTAMsg_CoachHUDPing::kTgtpathFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CDOTAMsg_CoachHUDPing::CDOTAMsg_CoachHUDPing()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_mcdota_2eproto::scc_info_CDOTAMsg_CoachHUDPing.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CDOTAMsg_CoachHUDPing)
}
CDOTAMsg_CoachHUDPing::CDOTAMsg_CoachHUDPing(const CDOTAMsg_CoachHUDPing& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  tgtpath_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_tgtpath()) {
    tgtpath_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tgtpath_);
  }
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&y_) -
    reinterpret_cast<char*>(&x_)) + sizeof(y_));
  // @@protoc_insertion_point(copy_constructor:CDOTAMsg_CoachHUDPing)
}

void CDOTAMsg_CoachHUDPing::SharedCtor() {
  tgtpath_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&y_) -
      reinterpret_cast<char*>(&x_)) + sizeof(y_));
}

CDOTAMsg_CoachHUDPing::~CDOTAMsg_CoachHUDPing() {
  // @@protoc_insertion_point(destructor:CDOTAMsg_CoachHUDPing)
  SharedDtor();
}

void CDOTAMsg_CoachHUDPing::SharedDtor() {
  tgtpath_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CDOTAMsg_CoachHUDPing::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CDOTAMsg_CoachHUDPing::descriptor() {
  ::protobuf_mcdota_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mcdota_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CDOTAMsg_CoachHUDPing& CDOTAMsg_CoachHUDPing::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_mcdota_2eproto::scc_info_CDOTAMsg_CoachHUDPing.base);
  return *internal_default_instance();
}


void CDOTAMsg_CoachHUDPing::Clear() {
// @@protoc_insertion_point(message_clear_start:CDOTAMsg_CoachHUDPing)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    tgtpath_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 6u) {
    ::memset(&x_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&y_) -
        reinterpret_cast<char*>(&x_)) + sizeof(y_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CDOTAMsg_CoachHUDPing::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CDOTAMsg_CoachHUDPing)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 x = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_x();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 y = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_y();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string tgtpath = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tgtpath()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->tgtpath().data(), static_cast<int>(this->tgtpath().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CDOTAMsg_CoachHUDPing.tgtpath");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CDOTAMsg_CoachHUDPing)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CDOTAMsg_CoachHUDPing)
  return false;
#undef DO_
}

void CDOTAMsg_CoachHUDPing::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CDOTAMsg_CoachHUDPing)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 x = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->x(), output);
  }

  // optional uint32 y = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->y(), output);
  }

  // optional string tgtpath = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->tgtpath().data(), static_cast<int>(this->tgtpath().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CDOTAMsg_CoachHUDPing.tgtpath");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->tgtpath(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CDOTAMsg_CoachHUDPing)
}

::google::protobuf::uint8* CDOTAMsg_CoachHUDPing::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CDOTAMsg_CoachHUDPing)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 x = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->x(), target);
  }

  // optional uint32 y = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->y(), target);
  }

  // optional string tgtpath = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->tgtpath().data(), static_cast<int>(this->tgtpath().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CDOTAMsg_CoachHUDPing.tgtpath");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->tgtpath(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDOTAMsg_CoachHUDPing)
  return target;
}

size_t CDOTAMsg_CoachHUDPing::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CDOTAMsg_CoachHUDPing)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string tgtpath = 3;
    if (has_tgtpath()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->tgtpath());
    }

    // optional uint32 x = 1;
    if (has_x()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->x());
    }

    // optional uint32 y = 2;
    if (has_y()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->y());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CDOTAMsg_CoachHUDPing::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CDOTAMsg_CoachHUDPing)
  GOOGLE_DCHECK_NE(&from, this);
  const CDOTAMsg_CoachHUDPing* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CDOTAMsg_CoachHUDPing>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CDOTAMsg_CoachHUDPing)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CDOTAMsg_CoachHUDPing)
    MergeFrom(*source);
  }
}

void CDOTAMsg_CoachHUDPing::MergeFrom(const CDOTAMsg_CoachHUDPing& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CDOTAMsg_CoachHUDPing)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_tgtpath();
      tgtpath_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tgtpath_);
    }
    if (cached_has_bits & 0x00000002u) {
      x_ = from.x_;
    }
    if (cached_has_bits & 0x00000004u) {
      y_ = from.y_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CDOTAMsg_CoachHUDPing::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CDOTAMsg_CoachHUDPing)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CDOTAMsg_CoachHUDPing::CopyFrom(const CDOTAMsg_CoachHUDPing& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CDOTAMsg_CoachHUDPing)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CDOTAMsg_CoachHUDPing::IsInitialized() const {
  return true;
}

void CDOTAMsg_CoachHUDPing::Swap(CDOTAMsg_CoachHUDPing* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CDOTAMsg_CoachHUDPing::InternalSwap(CDOTAMsg_CoachHUDPing* other) {
  using std::swap;
  tgtpath_.Swap(&other->tgtpath_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(x_, other->x_);
  swap(y_, other->y_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CDOTAMsg_CoachHUDPing::GetMetadata() const {
  protobuf_mcdota_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mcdota_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CDOTAUserMsg_CoachHUDPing::InitAsDefaultInstance() {
  ::_CDOTAUserMsg_CoachHUDPing_default_instance_._instance.get_mutable()->hud_ping_ = const_cast< ::CDOTAMsg_CoachHUDPing*>(
      ::CDOTAMsg_CoachHUDPing::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CDOTAUserMsg_CoachHUDPing::kPlayerIdFieldNumber;
const int CDOTAUserMsg_CoachHUDPing::kHudPingFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CDOTAUserMsg_CoachHUDPing::CDOTAUserMsg_CoachHUDPing()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_mcdota_2eproto::scc_info_CDOTAUserMsg_CoachHUDPing.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CDOTAUserMsg_CoachHUDPing)
}
CDOTAUserMsg_CoachHUDPing::CDOTAUserMsg_CoachHUDPing(const CDOTAUserMsg_CoachHUDPing& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_hud_ping()) {
    hud_ping_ = new ::CDOTAMsg_CoachHUDPing(*from.hud_ping_);
  } else {
    hud_ping_ = NULL;
  }
  player_id_ = from.player_id_;
  // @@protoc_insertion_point(copy_constructor:CDOTAUserMsg_CoachHUDPing)
}

void CDOTAUserMsg_CoachHUDPing::SharedCtor() {
  ::memset(&hud_ping_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&player_id_) -
      reinterpret_cast<char*>(&hud_ping_)) + sizeof(player_id_));
}

CDOTAUserMsg_CoachHUDPing::~CDOTAUserMsg_CoachHUDPing() {
  // @@protoc_insertion_point(destructor:CDOTAUserMsg_CoachHUDPing)
  SharedDtor();
}

void CDOTAUserMsg_CoachHUDPing::SharedDtor() {
  if (this != internal_default_instance()) delete hud_ping_;
}

void CDOTAUserMsg_CoachHUDPing::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CDOTAUserMsg_CoachHUDPing::descriptor() {
  ::protobuf_mcdota_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mcdota_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CDOTAUserMsg_CoachHUDPing& CDOTAUserMsg_CoachHUDPing::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_mcdota_2eproto::scc_info_CDOTAUserMsg_CoachHUDPing.base);
  return *internal_default_instance();
}


void CDOTAUserMsg_CoachHUDPing::Clear() {
// @@protoc_insertion_point(message_clear_start:CDOTAUserMsg_CoachHUDPing)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(hud_ping_ != NULL);
    hud_ping_->Clear();
  }
  player_id_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CDOTAUserMsg_CoachHUDPing::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CDOTAUserMsg_CoachHUDPing)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 player_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_player_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &player_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CDOTAMsg_CoachHUDPing hud_ping = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_hud_ping()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CDOTAUserMsg_CoachHUDPing)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CDOTAUserMsg_CoachHUDPing)
  return false;
#undef DO_
}

void CDOTAUserMsg_CoachHUDPing::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CDOTAUserMsg_CoachHUDPing)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 player_id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->player_id(), output);
  }

  // optional .CDOTAMsg_CoachHUDPing hud_ping = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_hud_ping(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CDOTAUserMsg_CoachHUDPing)
}

::google::protobuf::uint8* CDOTAUserMsg_CoachHUDPing::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CDOTAUserMsg_CoachHUDPing)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 player_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->player_id(), target);
  }

  // optional .CDOTAMsg_CoachHUDPing hud_ping = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_hud_ping(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDOTAUserMsg_CoachHUDPing)
  return target;
}

size_t CDOTAUserMsg_CoachHUDPing::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CDOTAUserMsg_CoachHUDPing)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional .CDOTAMsg_CoachHUDPing hud_ping = 2;
    if (has_hud_ping()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *hud_ping_);
    }

    // optional uint32 player_id = 1;
    if (has_player_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->player_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CDOTAUserMsg_CoachHUDPing::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CDOTAUserMsg_CoachHUDPing)
  GOOGLE_DCHECK_NE(&from, this);
  const CDOTAUserMsg_CoachHUDPing* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CDOTAUserMsg_CoachHUDPing>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CDOTAUserMsg_CoachHUDPing)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CDOTAUserMsg_CoachHUDPing)
    MergeFrom(*source);
  }
}

void CDOTAUserMsg_CoachHUDPing::MergeFrom(const CDOTAUserMsg_CoachHUDPing& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CDOTAUserMsg_CoachHUDPing)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_hud_ping()->::CDOTAMsg_CoachHUDPing::MergeFrom(from.hud_ping());
    }
    if (cached_has_bits & 0x00000002u) {
      player_id_ = from.player_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CDOTAUserMsg_CoachHUDPing::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CDOTAUserMsg_CoachHUDPing)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CDOTAUserMsg_CoachHUDPing::CopyFrom(const CDOTAUserMsg_CoachHUDPing& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CDOTAUserMsg_CoachHUDPing)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CDOTAUserMsg_CoachHUDPing::IsInitialized() const {
  return true;
}

void CDOTAUserMsg_CoachHUDPing::Swap(CDOTAUserMsg_CoachHUDPing* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CDOTAUserMsg_CoachHUDPing::InternalSwap(CDOTAUserMsg_CoachHUDPing* other) {
  using std::swap;
  swap(hud_ping_, other->hud_ping_);
  swap(player_id_, other->player_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CDOTAUserMsg_CoachHUDPing::GetMetadata() const {
  protobuf_mcdota_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mcdota_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CDOTAClientMsg_GuideSelectOption::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CDOTAClientMsg_GuideSelectOption::kOptionFieldNumber;
const int CDOTAClientMsg_GuideSelectOption::kForceRecalculateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CDOTAClientMsg_GuideSelectOption::CDOTAClientMsg_GuideSelectOption()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_mcdota_2eproto::scc_info_CDOTAClientMsg_GuideSelectOption.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CDOTAClientMsg_GuideSelectOption)
}
CDOTAClientMsg_GuideSelectOption::CDOTAClientMsg_GuideSelectOption(const CDOTAClientMsg_GuideSelectOption& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&option_, &from.option_,
    static_cast<size_t>(reinterpret_cast<char*>(&force_recalculate_) -
    reinterpret_cast<char*>(&option_)) + sizeof(force_recalculate_));
  // @@protoc_insertion_point(copy_constructor:CDOTAClientMsg_GuideSelectOption)
}

void CDOTAClientMsg_GuideSelectOption::SharedCtor() {
  ::memset(&option_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&force_recalculate_) -
      reinterpret_cast<char*>(&option_)) + sizeof(force_recalculate_));
}

CDOTAClientMsg_GuideSelectOption::~CDOTAClientMsg_GuideSelectOption() {
  // @@protoc_insertion_point(destructor:CDOTAClientMsg_GuideSelectOption)
  SharedDtor();
}

void CDOTAClientMsg_GuideSelectOption::SharedDtor() {
}

void CDOTAClientMsg_GuideSelectOption::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CDOTAClientMsg_GuideSelectOption::descriptor() {
  ::protobuf_mcdota_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mcdota_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CDOTAClientMsg_GuideSelectOption& CDOTAClientMsg_GuideSelectOption::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_mcdota_2eproto::scc_info_CDOTAClientMsg_GuideSelectOption.base);
  return *internal_default_instance();
}


void CDOTAClientMsg_GuideSelectOption::Clear() {
// @@protoc_insertion_point(message_clear_start:CDOTAClientMsg_GuideSelectOption)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&option_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&force_recalculate_) -
        reinterpret_cast<char*>(&option_)) + sizeof(force_recalculate_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CDOTAClientMsg_GuideSelectOption::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CDOTAClientMsg_GuideSelectOption)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 option = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_option();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &option_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool force_recalculate = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_force_recalculate();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &force_recalculate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CDOTAClientMsg_GuideSelectOption)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CDOTAClientMsg_GuideSelectOption)
  return false;
#undef DO_
}

void CDOTAClientMsg_GuideSelectOption::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CDOTAClientMsg_GuideSelectOption)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 option = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->option(), output);
  }

  // optional bool force_recalculate = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->force_recalculate(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CDOTAClientMsg_GuideSelectOption)
}

::google::protobuf::uint8* CDOTAClientMsg_GuideSelectOption::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CDOTAClientMsg_GuideSelectOption)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 option = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->option(), target);
  }

  // optional bool force_recalculate = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->force_recalculate(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDOTAClientMsg_GuideSelectOption)
  return target;
}

size_t CDOTAClientMsg_GuideSelectOption::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CDOTAClientMsg_GuideSelectOption)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional uint32 option = 1;
    if (has_option()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->option());
    }

    // optional bool force_recalculate = 2;
    if (has_force_recalculate()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CDOTAClientMsg_GuideSelectOption::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CDOTAClientMsg_GuideSelectOption)
  GOOGLE_DCHECK_NE(&from, this);
  const CDOTAClientMsg_GuideSelectOption* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CDOTAClientMsg_GuideSelectOption>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CDOTAClientMsg_GuideSelectOption)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CDOTAClientMsg_GuideSelectOption)
    MergeFrom(*source);
  }
}

void CDOTAClientMsg_GuideSelectOption::MergeFrom(const CDOTAClientMsg_GuideSelectOption& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CDOTAClientMsg_GuideSelectOption)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      option_ = from.option_;
    }
    if (cached_has_bits & 0x00000002u) {
      force_recalculate_ = from.force_recalculate_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CDOTAClientMsg_GuideSelectOption::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CDOTAClientMsg_GuideSelectOption)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CDOTAClientMsg_GuideSelectOption::CopyFrom(const CDOTAClientMsg_GuideSelectOption& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CDOTAClientMsg_GuideSelectOption)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CDOTAClientMsg_GuideSelectOption::IsInitialized() const {
  return true;
}

void CDOTAClientMsg_GuideSelectOption::Swap(CDOTAClientMsg_GuideSelectOption* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CDOTAClientMsg_GuideSelectOption::InternalSwap(CDOTAClientMsg_GuideSelectOption* other) {
  using std::swap;
  swap(option_, other->option_);
  swap(force_recalculate_, other->force_recalculate_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CDOTAClientMsg_GuideSelectOption::GetMetadata() const {
  protobuf_mcdota_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mcdota_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CDOTAClientMsg_GuideSelected::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CDOTAClientMsg_GuideSelected::kGuideWorkshopIdFieldNumber;
const int CDOTAClientMsg_GuideSelected::kIsPlusGuideFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CDOTAClientMsg_GuideSelected::CDOTAClientMsg_GuideSelected()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_mcdota_2eproto::scc_info_CDOTAClientMsg_GuideSelected.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CDOTAClientMsg_GuideSelected)
}
CDOTAClientMsg_GuideSelected::CDOTAClientMsg_GuideSelected(const CDOTAClientMsg_GuideSelected& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&guide_workshop_id_, &from.guide_workshop_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_plus_guide_) -
    reinterpret_cast<char*>(&guide_workshop_id_)) + sizeof(is_plus_guide_));
  // @@protoc_insertion_point(copy_constructor:CDOTAClientMsg_GuideSelected)
}

void CDOTAClientMsg_GuideSelected::SharedCtor() {
  ::memset(&guide_workshop_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_plus_guide_) -
      reinterpret_cast<char*>(&guide_workshop_id_)) + sizeof(is_plus_guide_));
}

CDOTAClientMsg_GuideSelected::~CDOTAClientMsg_GuideSelected() {
  // @@protoc_insertion_point(destructor:CDOTAClientMsg_GuideSelected)
  SharedDtor();
}

void CDOTAClientMsg_GuideSelected::SharedDtor() {
}

void CDOTAClientMsg_GuideSelected::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CDOTAClientMsg_GuideSelected::descriptor() {
  ::protobuf_mcdota_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mcdota_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CDOTAClientMsg_GuideSelected& CDOTAClientMsg_GuideSelected::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_mcdota_2eproto::scc_info_CDOTAClientMsg_GuideSelected.base);
  return *internal_default_instance();
}


void CDOTAClientMsg_GuideSelected::Clear() {
// @@protoc_insertion_point(message_clear_start:CDOTAClientMsg_GuideSelected)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&guide_workshop_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&is_plus_guide_) -
        reinterpret_cast<char*>(&guide_workshop_id_)) + sizeof(is_plus_guide_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CDOTAClientMsg_GuideSelected::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CDOTAClientMsg_GuideSelected)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 guide_workshop_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_guide_workshop_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &guide_workshop_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_plus_guide = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_is_plus_guide();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_plus_guide_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CDOTAClientMsg_GuideSelected)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CDOTAClientMsg_GuideSelected)
  return false;
#undef DO_
}

void CDOTAClientMsg_GuideSelected::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CDOTAClientMsg_GuideSelected)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 guide_workshop_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->guide_workshop_id(), output);
  }

  // optional bool is_plus_guide = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->is_plus_guide(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CDOTAClientMsg_GuideSelected)
}

::google::protobuf::uint8* CDOTAClientMsg_GuideSelected::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CDOTAClientMsg_GuideSelected)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 guide_workshop_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->guide_workshop_id(), target);
  }

  // optional bool is_plus_guide = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->is_plus_guide(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDOTAClientMsg_GuideSelected)
  return target;
}

size_t CDOTAClientMsg_GuideSelected::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CDOTAClientMsg_GuideSelected)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional uint64 guide_workshop_id = 1;
    if (has_guide_workshop_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->guide_workshop_id());
    }

    // optional bool is_plus_guide = 2;
    if (has_is_plus_guide()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CDOTAClientMsg_GuideSelected::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CDOTAClientMsg_GuideSelected)
  GOOGLE_DCHECK_NE(&from, this);
  const CDOTAClientMsg_GuideSelected* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CDOTAClientMsg_GuideSelected>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CDOTAClientMsg_GuideSelected)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CDOTAClientMsg_GuideSelected)
    MergeFrom(*source);
  }
}

void CDOTAClientMsg_GuideSelected::MergeFrom(const CDOTAClientMsg_GuideSelected& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CDOTAClientMsg_GuideSelected)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      guide_workshop_id_ = from.guide_workshop_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      is_plus_guide_ = from.is_plus_guide_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CDOTAClientMsg_GuideSelected::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CDOTAClientMsg_GuideSelected)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CDOTAClientMsg_GuideSelected::CopyFrom(const CDOTAClientMsg_GuideSelected& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CDOTAClientMsg_GuideSelected)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CDOTAClientMsg_GuideSelected::IsInitialized() const {
  return true;
}

void CDOTAClientMsg_GuideSelected::Swap(CDOTAClientMsg_GuideSelected* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CDOTAClientMsg_GuideSelected::InternalSwap(CDOTAClientMsg_GuideSelected* other) {
  using std::swap;
  swap(guide_workshop_id_, other->guide_workshop_id_);
  swap(is_plus_guide_, other->is_plus_guide_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CDOTAClientMsg_GuideSelected::GetMetadata() const {
  protobuf_mcdota_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mcdota_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CCLCMsg_CmdKeyValues::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CCLCMsg_CmdKeyValues::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CCLCMsg_CmdKeyValues::CCLCMsg_CmdKeyValues()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_mcdota_2eproto::scc_info_CCLCMsg_CmdKeyValues.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CCLCMsg_CmdKeyValues)
}
CCLCMsg_CmdKeyValues::CCLCMsg_CmdKeyValues(const CCLCMsg_CmdKeyValues& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_data()) {
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  // @@protoc_insertion_point(copy_constructor:CCLCMsg_CmdKeyValues)
}

void CCLCMsg_CmdKeyValues::SharedCtor() {
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CCLCMsg_CmdKeyValues::~CCLCMsg_CmdKeyValues() {
  // @@protoc_insertion_point(destructor:CCLCMsg_CmdKeyValues)
  SharedDtor();
}

void CCLCMsg_CmdKeyValues::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CCLCMsg_CmdKeyValues::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CCLCMsg_CmdKeyValues::descriptor() {
  ::protobuf_mcdota_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mcdota_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CCLCMsg_CmdKeyValues& CCLCMsg_CmdKeyValues::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_mcdota_2eproto::scc_info_CCLCMsg_CmdKeyValues.base);
  return *internal_default_instance();
}


void CCLCMsg_CmdKeyValues::Clear() {
// @@protoc_insertion_point(message_clear_start:CCLCMsg_CmdKeyValues)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    data_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CCLCMsg_CmdKeyValues::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CCLCMsg_CmdKeyValues)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes data = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CCLCMsg_CmdKeyValues)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CCLCMsg_CmdKeyValues)
  return false;
#undef DO_
}

void CCLCMsg_CmdKeyValues::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CCLCMsg_CmdKeyValues)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes data = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CCLCMsg_CmdKeyValues)
}

::google::protobuf::uint8* CCLCMsg_CmdKeyValues::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CCLCMsg_CmdKeyValues)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes data = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCLCMsg_CmdKeyValues)
  return target;
}

size_t CCLCMsg_CmdKeyValues::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCLCMsg_CmdKeyValues)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional bytes data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->data());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CCLCMsg_CmdKeyValues::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CCLCMsg_CmdKeyValues)
  GOOGLE_DCHECK_NE(&from, this);
  const CCLCMsg_CmdKeyValues* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CCLCMsg_CmdKeyValues>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CCLCMsg_CmdKeyValues)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CCLCMsg_CmdKeyValues)
    MergeFrom(*source);
  }
}

void CCLCMsg_CmdKeyValues::MergeFrom(const CCLCMsg_CmdKeyValues& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CCLCMsg_CmdKeyValues)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_data()) {
    set_has_data();
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
}

void CCLCMsg_CmdKeyValues::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CCLCMsg_CmdKeyValues)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CCLCMsg_CmdKeyValues::CopyFrom(const CCLCMsg_CmdKeyValues& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCLCMsg_CmdKeyValues)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CCLCMsg_CmdKeyValues::IsInitialized() const {
  return true;
}

void CCLCMsg_CmdKeyValues::Swap(CCLCMsg_CmdKeyValues* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CCLCMsg_CmdKeyValues::InternalSwap(CCLCMsg_CmdKeyValues* other) {
  using std::swap;
  data_.Swap(&other->data_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CCLCMsg_CmdKeyValues::GetMetadata() const {
  protobuf_mcdota_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mcdota_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CCLCMsg_FileCRCCheck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CCLCMsg_FileCRCCheck::kCodePathFieldNumber;
const int CCLCMsg_FileCRCCheck::kPathFieldNumber;
const int CCLCMsg_FileCRCCheck::kCodeFilenameFieldNumber;
const int CCLCMsg_FileCRCCheck::kFilenameFieldNumber;
const int CCLCMsg_FileCRCCheck::kCrcFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CCLCMsg_FileCRCCheck::CCLCMsg_FileCRCCheck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_mcdota_2eproto::scc_info_CCLCMsg_FileCRCCheck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CCLCMsg_FileCRCCheck)
}
CCLCMsg_FileCRCCheck::CCLCMsg_FileCRCCheck(const CCLCMsg_FileCRCCheck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_path()) {
    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
  filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_filename()) {
    filename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filename_);
  }
  ::memcpy(&code_path_, &from.code_path_,
    static_cast<size_t>(reinterpret_cast<char*>(&crc_) -
    reinterpret_cast<char*>(&code_path_)) + sizeof(crc_));
  // @@protoc_insertion_point(copy_constructor:CCLCMsg_FileCRCCheck)
}

void CCLCMsg_FileCRCCheck::SharedCtor() {
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&code_path_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&crc_) -
      reinterpret_cast<char*>(&code_path_)) + sizeof(crc_));
}

CCLCMsg_FileCRCCheck::~CCLCMsg_FileCRCCheck() {
  // @@protoc_insertion_point(destructor:CCLCMsg_FileCRCCheck)
  SharedDtor();
}

void CCLCMsg_FileCRCCheck::SharedDtor() {
  path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CCLCMsg_FileCRCCheck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CCLCMsg_FileCRCCheck::descriptor() {
  ::protobuf_mcdota_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mcdota_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CCLCMsg_FileCRCCheck& CCLCMsg_FileCRCCheck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_mcdota_2eproto::scc_info_CCLCMsg_FileCRCCheck.base);
  return *internal_default_instance();
}


void CCLCMsg_FileCRCCheck::Clear() {
// @@protoc_insertion_point(message_clear_start:CCLCMsg_FileCRCCheck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      path_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      filename_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 28u) {
    ::memset(&code_path_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&crc_) -
        reinterpret_cast<char*>(&code_path_)) + sizeof(crc_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CCLCMsg_FileCRCCheck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CCLCMsg_FileCRCCheck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 code_path = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_code_path();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &code_path_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string path = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_path()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->path().data(), static_cast<int>(this->path().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CCLCMsg_FileCRCCheck.path");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 code_filename = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_code_filename();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &code_filename_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string filename = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filename()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->filename().data(), static_cast<int>(this->filename().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CCLCMsg_FileCRCCheck.filename");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed32 crc = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {
          set_has_crc();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &crc_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CCLCMsg_FileCRCCheck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CCLCMsg_FileCRCCheck)
  return false;
#undef DO_
}

void CCLCMsg_FileCRCCheck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CCLCMsg_FileCRCCheck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 code_path = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->code_path(), output);
  }

  // optional string path = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CCLCMsg_FileCRCCheck.path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->path(), output);
  }

  // optional int32 code_filename = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->code_filename(), output);
  }

  // optional string filename = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->filename().data(), static_cast<int>(this->filename().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CCLCMsg_FileCRCCheck.filename");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->filename(), output);
  }

  // optional fixed32 crc = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(5, this->crc(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CCLCMsg_FileCRCCheck)
}

::google::protobuf::uint8* CCLCMsg_FileCRCCheck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CCLCMsg_FileCRCCheck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 code_path = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->code_path(), target);
  }

  // optional string path = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CCLCMsg_FileCRCCheck.path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->path(), target);
  }

  // optional int32 code_filename = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->code_filename(), target);
  }

  // optional string filename = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->filename().data(), static_cast<int>(this->filename().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CCLCMsg_FileCRCCheck.filename");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->filename(), target);
  }

  // optional fixed32 crc = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(5, this->crc(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCLCMsg_FileCRCCheck)
  return target;
}

size_t CCLCMsg_FileCRCCheck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCLCMsg_FileCRCCheck)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional string path = 2;
    if (has_path()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->path());
    }

    // optional string filename = 4;
    if (has_filename()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->filename());
    }

    // optional int32 code_path = 1;
    if (has_code_path()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->code_path());
    }

    // optional int32 code_filename = 3;
    if (has_code_filename()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->code_filename());
    }

    // optional fixed32 crc = 5;
    if (has_crc()) {
      total_size += 1 + 4;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CCLCMsg_FileCRCCheck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CCLCMsg_FileCRCCheck)
  GOOGLE_DCHECK_NE(&from, this);
  const CCLCMsg_FileCRCCheck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CCLCMsg_FileCRCCheck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CCLCMsg_FileCRCCheck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CCLCMsg_FileCRCCheck)
    MergeFrom(*source);
  }
}

void CCLCMsg_FileCRCCheck::MergeFrom(const CCLCMsg_FileCRCCheck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CCLCMsg_FileCRCCheck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_path();
      path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_filename();
      filename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filename_);
    }
    if (cached_has_bits & 0x00000004u) {
      code_path_ = from.code_path_;
    }
    if (cached_has_bits & 0x00000008u) {
      code_filename_ = from.code_filename_;
    }
    if (cached_has_bits & 0x00000010u) {
      crc_ = from.crc_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CCLCMsg_FileCRCCheck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CCLCMsg_FileCRCCheck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CCLCMsg_FileCRCCheck::CopyFrom(const CCLCMsg_FileCRCCheck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCLCMsg_FileCRCCheck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CCLCMsg_FileCRCCheck::IsInitialized() const {
  return true;
}

void CCLCMsg_FileCRCCheck::Swap(CCLCMsg_FileCRCCheck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CCLCMsg_FileCRCCheck::InternalSwap(CCLCMsg_FileCRCCheck* other) {
  using std::swap;
  path_.Swap(&other->path_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  filename_.Swap(&other->filename_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(code_path_, other->code_path_);
  swap(code_filename_, other->code_filename_);
  swap(crc_, other->crc_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CCLCMsg_FileCRCCheck::GetMetadata() const {
  protobuf_mcdota_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mcdota_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CCLCMsg_ClientMessage::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CCLCMsg_ClientMessage::kMsgTypeFieldNumber;
const int CCLCMsg_ClientMessage::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CCLCMsg_ClientMessage::CCLCMsg_ClientMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_mcdota_2eproto::scc_info_CCLCMsg_ClientMessage.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CCLCMsg_ClientMessage)
}
CCLCMsg_ClientMessage::CCLCMsg_ClientMessage(const CCLCMsg_ClientMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_data()) {
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  msg_type_ = from.msg_type_;
  // @@protoc_insertion_point(copy_constructor:CCLCMsg_ClientMessage)
}

void CCLCMsg_ClientMessage::SharedCtor() {
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_type_ = 0;
}

CCLCMsg_ClientMessage::~CCLCMsg_ClientMessage() {
  // @@protoc_insertion_point(destructor:CCLCMsg_ClientMessage)
  SharedDtor();
}

void CCLCMsg_ClientMessage::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CCLCMsg_ClientMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CCLCMsg_ClientMessage::descriptor() {
  ::protobuf_mcdota_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mcdota_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CCLCMsg_ClientMessage& CCLCMsg_ClientMessage::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_mcdota_2eproto::scc_info_CCLCMsg_ClientMessage.base);
  return *internal_default_instance();
}


void CCLCMsg_ClientMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:CCLCMsg_ClientMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    data_.ClearNonDefaultToEmptyNoArena();
  }
  msg_type_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CCLCMsg_ClientMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CCLCMsg_ClientMessage)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 msg_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_msg_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &msg_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes data = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CCLCMsg_ClientMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CCLCMsg_ClientMessage)
  return false;
#undef DO_
}

void CCLCMsg_ClientMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CCLCMsg_ClientMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 msg_type = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->msg_type(), output);
  }

  // optional bytes data = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CCLCMsg_ClientMessage)
}

::google::protobuf::uint8* CCLCMsg_ClientMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CCLCMsg_ClientMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 msg_type = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->msg_type(), target);
  }

  // optional bytes data = 2;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCLCMsg_ClientMessage)
  return target;
}

size_t CCLCMsg_ClientMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCLCMsg_ClientMessage)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional bytes data = 2;
    if (has_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->data());
    }

    // optional int32 msg_type = 1;
    if (has_msg_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->msg_type());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CCLCMsg_ClientMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CCLCMsg_ClientMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const CCLCMsg_ClientMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CCLCMsg_ClientMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CCLCMsg_ClientMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CCLCMsg_ClientMessage)
    MergeFrom(*source);
  }
}

void CCLCMsg_ClientMessage::MergeFrom(const CCLCMsg_ClientMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CCLCMsg_ClientMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
    if (cached_has_bits & 0x00000002u) {
      msg_type_ = from.msg_type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CCLCMsg_ClientMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CCLCMsg_ClientMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CCLCMsg_ClientMessage::CopyFrom(const CCLCMsg_ClientMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCLCMsg_ClientMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CCLCMsg_ClientMessage::IsInitialized() const {
  return true;
}

void CCLCMsg_ClientMessage::Swap(CCLCMsg_ClientMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CCLCMsg_ClientMessage::InternalSwap(CCLCMsg_ClientMessage* other) {
  using std::swap;
  data_.Swap(&other->data_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(msg_type_, other->msg_type_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CCLCMsg_ClientMessage::GetMetadata() const {
  protobuf_mcdota_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mcdota_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CDOTAClientMsg_TipAlert* Arena::CreateMaybeMessage< ::CDOTAClientMsg_TipAlert >(Arena* arena) {
  return Arena::CreateInternal< ::CDOTAClientMsg_TipAlert >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CCLCMsg_SplitPlayerConnect* Arena::CreateMaybeMessage< ::CCLCMsg_SplitPlayerConnect >(Arena* arena) {
  return Arena::CreateInternal< ::CCLCMsg_SplitPlayerConnect >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CDOTAClientMsg_EventCNY2015Cmd* Arena::CreateMaybeMessage< ::CDOTAClientMsg_EventCNY2015Cmd >(Arena* arena) {
  return Arena::CreateInternal< ::CDOTAClientMsg_EventCNY2015Cmd >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CDOTAClientMsg_RankWager* Arena::CreateMaybeMessage< ::CDOTAClientMsg_RankWager >(Arena* arena) {
  return Arena::CreateInternal< ::CDOTAClientMsg_RankWager >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CDOTAClientMsg_EventPointsTip* Arena::CreateMaybeMessage< ::CDOTAClientMsg_EventPointsTip >(Arena* arena) {
  return Arena::CreateInternal< ::CDOTAClientMsg_EventPointsTip >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CDOTAClientMsg_CoinWager* Arena::CreateMaybeMessage< ::CDOTAClientMsg_CoinWager >(Arena* arena) {
  return Arena::CreateInternal< ::CDOTAClientMsg_CoinWager >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsg_CVars_CVar* Arena::CreateMaybeMessage< ::CMsg_CVars_CVar >(Arena* arena) {
  return Arena::CreateInternal< ::CMsg_CVars_CVar >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CMsg_CVars* Arena::CreateMaybeMessage< ::CMsg_CVars >(Arena* arena) {
  return Arena::CreateInternal< ::CMsg_CVars >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CNETMsg_SetConVar* Arena::CreateMaybeMessage< ::CNETMsg_SetConVar >(Arena* arena) {
  return Arena::CreateInternal< ::CNETMsg_SetConVar >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CNETMsg_StringCmd* Arena::CreateMaybeMessage< ::CNETMsg_StringCmd >(Arena* arena) {
  return Arena::CreateInternal< ::CNETMsg_StringCmd >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CDOTAMsg_CoachHUDPing* Arena::CreateMaybeMessage< ::CDOTAMsg_CoachHUDPing >(Arena* arena) {
  return Arena::CreateInternal< ::CDOTAMsg_CoachHUDPing >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CDOTAUserMsg_CoachHUDPing* Arena::CreateMaybeMessage< ::CDOTAUserMsg_CoachHUDPing >(Arena* arena) {
  return Arena::CreateInternal< ::CDOTAUserMsg_CoachHUDPing >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CDOTAClientMsg_GuideSelectOption* Arena::CreateMaybeMessage< ::CDOTAClientMsg_GuideSelectOption >(Arena* arena) {
  return Arena::CreateInternal< ::CDOTAClientMsg_GuideSelectOption >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CDOTAClientMsg_GuideSelected* Arena::CreateMaybeMessage< ::CDOTAClientMsg_GuideSelected >(Arena* arena) {
  return Arena::CreateInternal< ::CDOTAClientMsg_GuideSelected >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CCLCMsg_CmdKeyValues* Arena::CreateMaybeMessage< ::CCLCMsg_CmdKeyValues >(Arena* arena) {
  return Arena::CreateInternal< ::CCLCMsg_CmdKeyValues >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CCLCMsg_FileCRCCheck* Arena::CreateMaybeMessage< ::CCLCMsg_FileCRCCheck >(Arena* arena) {
  return Arena::CreateInternal< ::CCLCMsg_FileCRCCheck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CCLCMsg_ClientMessage* Arena::CreateMaybeMessage< ::CCLCMsg_ClientMessage >(Arena* arena) {
  return Arena::CreateInternal< ::CCLCMsg_ClientMessage >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
