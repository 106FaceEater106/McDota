// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mcdota.proto

#ifndef PROTOBUF_INCLUDED_mcdota_2eproto
#define PROTOBUF_INCLUDED_mcdota_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_mcdota_2eproto 

namespace protobuf_mcdota_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[22];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_mcdota_2eproto
class CCLCMsg_ClientMessage;
class CCLCMsg_ClientMessageDefaultTypeInternal;
extern CCLCMsg_ClientMessageDefaultTypeInternal _CCLCMsg_ClientMessage_default_instance_;
class CCLCMsg_CmdKeyValues;
class CCLCMsg_CmdKeyValuesDefaultTypeInternal;
extern CCLCMsg_CmdKeyValuesDefaultTypeInternal _CCLCMsg_CmdKeyValues_default_instance_;
class CCLCMsg_FileCRCCheck;
class CCLCMsg_FileCRCCheckDefaultTypeInternal;
extern CCLCMsg_FileCRCCheckDefaultTypeInternal _CCLCMsg_FileCRCCheck_default_instance_;
class CCLCMsg_SplitPlayerConnect;
class CCLCMsg_SplitPlayerConnectDefaultTypeInternal;
extern CCLCMsg_SplitPlayerConnectDefaultTypeInternal _CCLCMsg_SplitPlayerConnect_default_instance_;
class CDOTAClientMsg_CoinWager;
class CDOTAClientMsg_CoinWagerDefaultTypeInternal;
extern CDOTAClientMsg_CoinWagerDefaultTypeInternal _CDOTAClientMsg_CoinWager_default_instance_;
class CDOTAClientMsg_EventCNY2015Cmd;
class CDOTAClientMsg_EventCNY2015CmdDefaultTypeInternal;
extern CDOTAClientMsg_EventCNY2015CmdDefaultTypeInternal _CDOTAClientMsg_EventCNY2015Cmd_default_instance_;
class CDOTAClientMsg_EventPointsTip;
class CDOTAClientMsg_EventPointsTipDefaultTypeInternal;
extern CDOTAClientMsg_EventPointsTipDefaultTypeInternal _CDOTAClientMsg_EventPointsTip_default_instance_;
class CDOTAClientMsg_GuideSelectOption;
class CDOTAClientMsg_GuideSelectOptionDefaultTypeInternal;
extern CDOTAClientMsg_GuideSelectOptionDefaultTypeInternal _CDOTAClientMsg_GuideSelectOption_default_instance_;
class CDOTAClientMsg_GuideSelected;
class CDOTAClientMsg_GuideSelectedDefaultTypeInternal;
extern CDOTAClientMsg_GuideSelectedDefaultTypeInternal _CDOTAClientMsg_GuideSelected_default_instance_;
class CDOTAClientMsg_KillcamDamageTaken;
class CDOTAClientMsg_KillcamDamageTakenDefaultTypeInternal;
extern CDOTAClientMsg_KillcamDamageTakenDefaultTypeInternal _CDOTAClientMsg_KillcamDamageTaken_default_instance_;
class CDOTAClientMsg_RankWager;
class CDOTAClientMsg_RankWagerDefaultTypeInternal;
extern CDOTAClientMsg_RankWagerDefaultTypeInternal _CDOTAClientMsg_RankWager_default_instance_;
class CDOTAClientMsg_SwapAccept;
class CDOTAClientMsg_SwapAcceptDefaultTypeInternal;
extern CDOTAClientMsg_SwapAcceptDefaultTypeInternal _CDOTAClientMsg_SwapAccept_default_instance_;
class CDOTAClientMsg_SwapRequest;
class CDOTAClientMsg_SwapRequestDefaultTypeInternal;
extern CDOTAClientMsg_SwapRequestDefaultTypeInternal _CDOTAClientMsg_SwapRequest_default_instance_;
class CDOTAClientMsg_TipAlert;
class CDOTAClientMsg_TipAlertDefaultTypeInternal;
extern CDOTAClientMsg_TipAlertDefaultTypeInternal _CDOTAClientMsg_TipAlert_default_instance_;
class CDOTAMsg_CoachHUDPing;
class CDOTAMsg_CoachHUDPingDefaultTypeInternal;
extern CDOTAMsg_CoachHUDPingDefaultTypeInternal _CDOTAMsg_CoachHUDPing_default_instance_;
class CDOTAUserMsg_CoachHUDPing;
class CDOTAUserMsg_CoachHUDPingDefaultTypeInternal;
extern CDOTAUserMsg_CoachHUDPingDefaultTypeInternal _CDOTAUserMsg_CoachHUDPing_default_instance_;
class CMsgSteamDatagramRelayAuthTicket;
class CMsgSteamDatagramRelayAuthTicketDefaultTypeInternal;
extern CMsgSteamDatagramRelayAuthTicketDefaultTypeInternal _CMsgSteamDatagramRelayAuthTicket_default_instance_;
class CMsgSteamDatagramRelayAuthTicket_ExtraField;
class CMsgSteamDatagramRelayAuthTicket_ExtraFieldDefaultTypeInternal;
extern CMsgSteamDatagramRelayAuthTicket_ExtraFieldDefaultTypeInternal _CMsgSteamDatagramRelayAuthTicket_ExtraField_default_instance_;
class CMsg_CVars;
class CMsg_CVarsDefaultTypeInternal;
extern CMsg_CVarsDefaultTypeInternal _CMsg_CVars_default_instance_;
class CMsg_CVars_CVar;
class CMsg_CVars_CVarDefaultTypeInternal;
extern CMsg_CVars_CVarDefaultTypeInternal _CMsg_CVars_CVar_default_instance_;
class CNETMsg_SetConVar;
class CNETMsg_SetConVarDefaultTypeInternal;
extern CNETMsg_SetConVarDefaultTypeInternal _CNETMsg_SetConVar_default_instance_;
class CNETMsg_StringCmd;
class CNETMsg_StringCmdDefaultTypeInternal;
extern CNETMsg_StringCmdDefaultTypeInternal _CNETMsg_StringCmd_default_instance_;
namespace google {
namespace protobuf {
template<> ::CCLCMsg_ClientMessage* Arena::CreateMaybeMessage<::CCLCMsg_ClientMessage>(Arena*);
template<> ::CCLCMsg_CmdKeyValues* Arena::CreateMaybeMessage<::CCLCMsg_CmdKeyValues>(Arena*);
template<> ::CCLCMsg_FileCRCCheck* Arena::CreateMaybeMessage<::CCLCMsg_FileCRCCheck>(Arena*);
template<> ::CCLCMsg_SplitPlayerConnect* Arena::CreateMaybeMessage<::CCLCMsg_SplitPlayerConnect>(Arena*);
template<> ::CDOTAClientMsg_CoinWager* Arena::CreateMaybeMessage<::CDOTAClientMsg_CoinWager>(Arena*);
template<> ::CDOTAClientMsg_EventCNY2015Cmd* Arena::CreateMaybeMessage<::CDOTAClientMsg_EventCNY2015Cmd>(Arena*);
template<> ::CDOTAClientMsg_EventPointsTip* Arena::CreateMaybeMessage<::CDOTAClientMsg_EventPointsTip>(Arena*);
template<> ::CDOTAClientMsg_GuideSelectOption* Arena::CreateMaybeMessage<::CDOTAClientMsg_GuideSelectOption>(Arena*);
template<> ::CDOTAClientMsg_GuideSelected* Arena::CreateMaybeMessage<::CDOTAClientMsg_GuideSelected>(Arena*);
template<> ::CDOTAClientMsg_KillcamDamageTaken* Arena::CreateMaybeMessage<::CDOTAClientMsg_KillcamDamageTaken>(Arena*);
template<> ::CDOTAClientMsg_RankWager* Arena::CreateMaybeMessage<::CDOTAClientMsg_RankWager>(Arena*);
template<> ::CDOTAClientMsg_SwapAccept* Arena::CreateMaybeMessage<::CDOTAClientMsg_SwapAccept>(Arena*);
template<> ::CDOTAClientMsg_SwapRequest* Arena::CreateMaybeMessage<::CDOTAClientMsg_SwapRequest>(Arena*);
template<> ::CDOTAClientMsg_TipAlert* Arena::CreateMaybeMessage<::CDOTAClientMsg_TipAlert>(Arena*);
template<> ::CDOTAMsg_CoachHUDPing* Arena::CreateMaybeMessage<::CDOTAMsg_CoachHUDPing>(Arena*);
template<> ::CDOTAUserMsg_CoachHUDPing* Arena::CreateMaybeMessage<::CDOTAUserMsg_CoachHUDPing>(Arena*);
template<> ::CMsgSteamDatagramRelayAuthTicket* Arena::CreateMaybeMessage<::CMsgSteamDatagramRelayAuthTicket>(Arena*);
template<> ::CMsgSteamDatagramRelayAuthTicket_ExtraField* Arena::CreateMaybeMessage<::CMsgSteamDatagramRelayAuthTicket_ExtraField>(Arena*);
template<> ::CMsg_CVars* Arena::CreateMaybeMessage<::CMsg_CVars>(Arena*);
template<> ::CMsg_CVars_CVar* Arena::CreateMaybeMessage<::CMsg_CVars_CVar>(Arena*);
template<> ::CNETMsg_SetConVar* Arena::CreateMaybeMessage<::CNETMsg_SetConVar>(Arena*);
template<> ::CNETMsg_StringCmd* Arena::CreateMaybeMessage<::CNETMsg_StringCmd>(Arena*);
}  // namespace protobuf
}  // namespace google

// ===================================================================

class CDOTAClientMsg_TipAlert : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CDOTAClientMsg_TipAlert) */ {
 public:
  CDOTAClientMsg_TipAlert();
  virtual ~CDOTAClientMsg_TipAlert();

  CDOTAClientMsg_TipAlert(const CDOTAClientMsg_TipAlert& from);

  inline CDOTAClientMsg_TipAlert& operator=(const CDOTAClientMsg_TipAlert& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CDOTAClientMsg_TipAlert(CDOTAClientMsg_TipAlert&& from) noexcept
    : CDOTAClientMsg_TipAlert() {
    *this = ::std::move(from);
  }

  inline CDOTAClientMsg_TipAlert& operator=(CDOTAClientMsg_TipAlert&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDOTAClientMsg_TipAlert& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CDOTAClientMsg_TipAlert* internal_default_instance() {
    return reinterpret_cast<const CDOTAClientMsg_TipAlert*>(
               &_CDOTAClientMsg_TipAlert_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(CDOTAClientMsg_TipAlert* other);
  friend void swap(CDOTAClientMsg_TipAlert& a, CDOTAClientMsg_TipAlert& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CDOTAClientMsg_TipAlert* New() const final {
    return CreateMaybeMessage<CDOTAClientMsg_TipAlert>(NULL);
  }

  CDOTAClientMsg_TipAlert* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CDOTAClientMsg_TipAlert>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CDOTAClientMsg_TipAlert& from);
  void MergeFrom(const CDOTAClientMsg_TipAlert& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTAClientMsg_TipAlert* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string tip_text = 1;
  bool has_tip_text() const;
  void clear_tip_text();
  static const int kTipTextFieldNumber = 1;
  const ::std::string& tip_text() const;
  void set_tip_text(const ::std::string& value);
  #if LANG_CXX11
  void set_tip_text(::std::string&& value);
  #endif
  void set_tip_text(const char* value);
  void set_tip_text(const char* value, size_t size);
  ::std::string* mutable_tip_text();
  ::std::string* release_tip_text();
  void set_allocated_tip_text(::std::string* tip_text);

  // @@protoc_insertion_point(class_scope:CDOTAClientMsg_TipAlert)
 private:
  void set_has_tip_text();
  void clear_has_tip_text();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr tip_text_;
  friend struct ::protobuf_mcdota_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CCLCMsg_SplitPlayerConnect : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CCLCMsg_SplitPlayerConnect) */ {
 public:
  CCLCMsg_SplitPlayerConnect();
  virtual ~CCLCMsg_SplitPlayerConnect();

  CCLCMsg_SplitPlayerConnect(const CCLCMsg_SplitPlayerConnect& from);

  inline CCLCMsg_SplitPlayerConnect& operator=(const CCLCMsg_SplitPlayerConnect& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CCLCMsg_SplitPlayerConnect(CCLCMsg_SplitPlayerConnect&& from) noexcept
    : CCLCMsg_SplitPlayerConnect() {
    *this = ::std::move(from);
  }

  inline CCLCMsg_SplitPlayerConnect& operator=(CCLCMsg_SplitPlayerConnect&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CCLCMsg_SplitPlayerConnect& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CCLCMsg_SplitPlayerConnect* internal_default_instance() {
    return reinterpret_cast<const CCLCMsg_SplitPlayerConnect*>(
               &_CCLCMsg_SplitPlayerConnect_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(CCLCMsg_SplitPlayerConnect* other);
  friend void swap(CCLCMsg_SplitPlayerConnect& a, CCLCMsg_SplitPlayerConnect& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CCLCMsg_SplitPlayerConnect* New() const final {
    return CreateMaybeMessage<CCLCMsg_SplitPlayerConnect>(NULL);
  }

  CCLCMsg_SplitPlayerConnect* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CCLCMsg_SplitPlayerConnect>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CCLCMsg_SplitPlayerConnect& from);
  void MergeFrom(const CCLCMsg_SplitPlayerConnect& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCLCMsg_SplitPlayerConnect* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string playername = 1;
  bool has_playername() const;
  void clear_playername();
  static const int kPlayernameFieldNumber = 1;
  const ::std::string& playername() const;
  void set_playername(const ::std::string& value);
  #if LANG_CXX11
  void set_playername(::std::string&& value);
  #endif
  void set_playername(const char* value);
  void set_playername(const char* value, size_t size);
  ::std::string* mutable_playername();
  ::std::string* release_playername();
  void set_allocated_playername(::std::string* playername);

  // @@protoc_insertion_point(class_scope:CCLCMsg_SplitPlayerConnect)
 private:
  void set_has_playername();
  void clear_has_playername();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr playername_;
  friend struct ::protobuf_mcdota_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CDOTAClientMsg_KillcamDamageTaken : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CDOTAClientMsg_KillcamDamageTaken) */ {
 public:
  CDOTAClientMsg_KillcamDamageTaken();
  virtual ~CDOTAClientMsg_KillcamDamageTaken();

  CDOTAClientMsg_KillcamDamageTaken(const CDOTAClientMsg_KillcamDamageTaken& from);

  inline CDOTAClientMsg_KillcamDamageTaken& operator=(const CDOTAClientMsg_KillcamDamageTaken& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CDOTAClientMsg_KillcamDamageTaken(CDOTAClientMsg_KillcamDamageTaken&& from) noexcept
    : CDOTAClientMsg_KillcamDamageTaken() {
    *this = ::std::move(from);
  }

  inline CDOTAClientMsg_KillcamDamageTaken& operator=(CDOTAClientMsg_KillcamDamageTaken&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDOTAClientMsg_KillcamDamageTaken& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CDOTAClientMsg_KillcamDamageTaken* internal_default_instance() {
    return reinterpret_cast<const CDOTAClientMsg_KillcamDamageTaken*>(
               &_CDOTAClientMsg_KillcamDamageTaken_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(CDOTAClientMsg_KillcamDamageTaken* other);
  friend void swap(CDOTAClientMsg_KillcamDamageTaken& a, CDOTAClientMsg_KillcamDamageTaken& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CDOTAClientMsg_KillcamDamageTaken* New() const final {
    return CreateMaybeMessage<CDOTAClientMsg_KillcamDamageTaken>(NULL);
  }

  CDOTAClientMsg_KillcamDamageTaken* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CDOTAClientMsg_KillcamDamageTaken>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CDOTAClientMsg_KillcamDamageTaken& from);
  void MergeFrom(const CDOTAClientMsg_KillcamDamageTaken& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTAClientMsg_KillcamDamageTaken* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string hero_name = 5;
  bool has_hero_name() const;
  void clear_hero_name();
  static const int kHeroNameFieldNumber = 5;
  const ::std::string& hero_name() const;
  void set_hero_name(const ::std::string& value);
  #if LANG_CXX11
  void set_hero_name(::std::string&& value);
  #endif
  void set_hero_name(const char* value);
  void set_hero_name(const char* value, size_t size);
  ::std::string* mutable_hero_name();
  ::std::string* release_hero_name();
  void set_allocated_hero_name(::std::string* hero_name);

  // optional string damage_color = 6;
  bool has_damage_color() const;
  void clear_damage_color();
  static const int kDamageColorFieldNumber = 6;
  const ::std::string& damage_color() const;
  void set_damage_color(const ::std::string& value);
  #if LANG_CXX11
  void set_damage_color(::std::string&& value);
  #endif
  void set_damage_color(const char* value);
  void set_damage_color(const char* value, size_t size);
  ::std::string* mutable_damage_color();
  ::std::string* release_damage_color();
  void set_allocated_damage_color(::std::string* damage_color);

  // optional uint32 target_entindex = 1;
  bool has_target_entindex() const;
  void clear_target_entindex();
  static const int kTargetEntindexFieldNumber = 1;
  ::google::protobuf::uint32 target_entindex() const;
  void set_target_entindex(::google::protobuf::uint32 value);

  // optional uint32 damage_taken = 2;
  bool has_damage_taken() const;
  void clear_damage_taken();
  static const int kDamageTakenFieldNumber = 2;
  ::google::protobuf::uint32 damage_taken() const;
  void set_damage_taken(::google::protobuf::uint32 value);

  // optional uint32 item_type = 3;
  bool has_item_type() const;
  void clear_item_type();
  static const int kItemTypeFieldNumber = 3;
  ::google::protobuf::uint32 item_type() const;
  void set_item_type(::google::protobuf::uint32 value);

  // optional uint32 item_ability_id = 4;
  bool has_item_ability_id() const;
  void clear_item_ability_id();
  static const int kItemAbilityIdFieldNumber = 4;
  ::google::protobuf::uint32 item_ability_id() const;
  void set_item_ability_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CDOTAClientMsg_KillcamDamageTaken)
 private:
  void set_has_target_entindex();
  void clear_has_target_entindex();
  void set_has_damage_taken();
  void clear_has_damage_taken();
  void set_has_item_type();
  void clear_has_item_type();
  void set_has_item_ability_id();
  void clear_has_item_ability_id();
  void set_has_hero_name();
  void clear_has_hero_name();
  void set_has_damage_color();
  void clear_has_damage_color();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr hero_name_;
  ::google::protobuf::internal::ArenaStringPtr damage_color_;
  ::google::protobuf::uint32 target_entindex_;
  ::google::protobuf::uint32 damage_taken_;
  ::google::protobuf::uint32 item_type_;
  ::google::protobuf::uint32 item_ability_id_;
  friend struct ::protobuf_mcdota_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CDOTAClientMsg_EventCNY2015Cmd : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CDOTAClientMsg_EventCNY2015Cmd) */ {
 public:
  CDOTAClientMsg_EventCNY2015Cmd();
  virtual ~CDOTAClientMsg_EventCNY2015Cmd();

  CDOTAClientMsg_EventCNY2015Cmd(const CDOTAClientMsg_EventCNY2015Cmd& from);

  inline CDOTAClientMsg_EventCNY2015Cmd& operator=(const CDOTAClientMsg_EventCNY2015Cmd& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CDOTAClientMsg_EventCNY2015Cmd(CDOTAClientMsg_EventCNY2015Cmd&& from) noexcept
    : CDOTAClientMsg_EventCNY2015Cmd() {
    *this = ::std::move(from);
  }

  inline CDOTAClientMsg_EventCNY2015Cmd& operator=(CDOTAClientMsg_EventCNY2015Cmd&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDOTAClientMsg_EventCNY2015Cmd& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CDOTAClientMsg_EventCNY2015Cmd* internal_default_instance() {
    return reinterpret_cast<const CDOTAClientMsg_EventCNY2015Cmd*>(
               &_CDOTAClientMsg_EventCNY2015Cmd_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(CDOTAClientMsg_EventCNY2015Cmd* other);
  friend void swap(CDOTAClientMsg_EventCNY2015Cmd& a, CDOTAClientMsg_EventCNY2015Cmd& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CDOTAClientMsg_EventCNY2015Cmd* New() const final {
    return CreateMaybeMessage<CDOTAClientMsg_EventCNY2015Cmd>(NULL);
  }

  CDOTAClientMsg_EventCNY2015Cmd* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CDOTAClientMsg_EventCNY2015Cmd>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CDOTAClientMsg_EventCNY2015Cmd& from);
  void MergeFrom(const CDOTAClientMsg_EventCNY2015Cmd& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTAClientMsg_EventCNY2015Cmd* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes data = 1;
  bool has_data() const;
  void clear_data();
  static const int kDataFieldNumber = 1;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  #if LANG_CXX11
  void set_data(::std::string&& value);
  #endif
  void set_data(const char* value);
  void set_data(const void* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);

  // @@protoc_insertion_point(class_scope:CDOTAClientMsg_EventCNY2015Cmd)
 private:
  void set_has_data();
  void clear_has_data();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  friend struct ::protobuf_mcdota_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CDOTAClientMsg_RankWager : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CDOTAClientMsg_RankWager) */ {
 public:
  CDOTAClientMsg_RankWager();
  virtual ~CDOTAClientMsg_RankWager();

  CDOTAClientMsg_RankWager(const CDOTAClientMsg_RankWager& from);

  inline CDOTAClientMsg_RankWager& operator=(const CDOTAClientMsg_RankWager& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CDOTAClientMsg_RankWager(CDOTAClientMsg_RankWager&& from) noexcept
    : CDOTAClientMsg_RankWager() {
    *this = ::std::move(from);
  }

  inline CDOTAClientMsg_RankWager& operator=(CDOTAClientMsg_RankWager&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDOTAClientMsg_RankWager& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CDOTAClientMsg_RankWager* internal_default_instance() {
    return reinterpret_cast<const CDOTAClientMsg_RankWager*>(
               &_CDOTAClientMsg_RankWager_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(CDOTAClientMsg_RankWager* other);
  friend void swap(CDOTAClientMsg_RankWager& a, CDOTAClientMsg_RankWager& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CDOTAClientMsg_RankWager* New() const final {
    return CreateMaybeMessage<CDOTAClientMsg_RankWager>(NULL);
  }

  CDOTAClientMsg_RankWager* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CDOTAClientMsg_RankWager>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CDOTAClientMsg_RankWager& from);
  void MergeFrom(const CDOTAClientMsg_RankWager& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTAClientMsg_RankWager* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool announce_wager = 1;
  bool has_announce_wager() const;
  void clear_announce_wager();
  static const int kAnnounceWagerFieldNumber = 1;
  bool announce_wager() const;
  void set_announce_wager(bool value);

  // @@protoc_insertion_point(class_scope:CDOTAClientMsg_RankWager)
 private:
  void set_has_announce_wager();
  void clear_has_announce_wager();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  bool announce_wager_;
  friend struct ::protobuf_mcdota_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CDOTAClientMsg_EventPointsTip : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CDOTAClientMsg_EventPointsTip) */ {
 public:
  CDOTAClientMsg_EventPointsTip();
  virtual ~CDOTAClientMsg_EventPointsTip();

  CDOTAClientMsg_EventPointsTip(const CDOTAClientMsg_EventPointsTip& from);

  inline CDOTAClientMsg_EventPointsTip& operator=(const CDOTAClientMsg_EventPointsTip& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CDOTAClientMsg_EventPointsTip(CDOTAClientMsg_EventPointsTip&& from) noexcept
    : CDOTAClientMsg_EventPointsTip() {
    *this = ::std::move(from);
  }

  inline CDOTAClientMsg_EventPointsTip& operator=(CDOTAClientMsg_EventPointsTip&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDOTAClientMsg_EventPointsTip& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CDOTAClientMsg_EventPointsTip* internal_default_instance() {
    return reinterpret_cast<const CDOTAClientMsg_EventPointsTip*>(
               &_CDOTAClientMsg_EventPointsTip_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(CDOTAClientMsg_EventPointsTip* other);
  friend void swap(CDOTAClientMsg_EventPointsTip& a, CDOTAClientMsg_EventPointsTip& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CDOTAClientMsg_EventPointsTip* New() const final {
    return CreateMaybeMessage<CDOTAClientMsg_EventPointsTip>(NULL);
  }

  CDOTAClientMsg_EventPointsTip* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CDOTAClientMsg_EventPointsTip>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CDOTAClientMsg_EventPointsTip& from);
  void MergeFrom(const CDOTAClientMsg_EventPointsTip& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTAClientMsg_EventPointsTip* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 recipient_player_id = 1;
  bool has_recipient_player_id() const;
  void clear_recipient_player_id();
  static const int kRecipientPlayerIdFieldNumber = 1;
  ::google::protobuf::uint32 recipient_player_id() const;
  void set_recipient_player_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CDOTAClientMsg_EventPointsTip)
 private:
  void set_has_recipient_player_id();
  void clear_has_recipient_player_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 recipient_player_id_;
  friend struct ::protobuf_mcdota_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CDOTAClientMsg_CoinWager : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CDOTAClientMsg_CoinWager) */ {
 public:
  CDOTAClientMsg_CoinWager();
  virtual ~CDOTAClientMsg_CoinWager();

  CDOTAClientMsg_CoinWager(const CDOTAClientMsg_CoinWager& from);

  inline CDOTAClientMsg_CoinWager& operator=(const CDOTAClientMsg_CoinWager& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CDOTAClientMsg_CoinWager(CDOTAClientMsg_CoinWager&& from) noexcept
    : CDOTAClientMsg_CoinWager() {
    *this = ::std::move(from);
  }

  inline CDOTAClientMsg_CoinWager& operator=(CDOTAClientMsg_CoinWager&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDOTAClientMsg_CoinWager& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CDOTAClientMsg_CoinWager* internal_default_instance() {
    return reinterpret_cast<const CDOTAClientMsg_CoinWager*>(
               &_CDOTAClientMsg_CoinWager_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(CDOTAClientMsg_CoinWager* other);
  friend void swap(CDOTAClientMsg_CoinWager& a, CDOTAClientMsg_CoinWager& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CDOTAClientMsg_CoinWager* New() const final {
    return CreateMaybeMessage<CDOTAClientMsg_CoinWager>(NULL);
  }

  CDOTAClientMsg_CoinWager* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CDOTAClientMsg_CoinWager>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CDOTAClientMsg_CoinWager& from);
  void MergeFrom(const CDOTAClientMsg_CoinWager& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTAClientMsg_CoinWager* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 wager_amount = 1;
  bool has_wager_amount() const;
  void clear_wager_amount();
  static const int kWagerAmountFieldNumber = 1;
  ::google::protobuf::uint32 wager_amount() const;
  void set_wager_amount(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CDOTAClientMsg_CoinWager)
 private:
  void set_has_wager_amount();
  void clear_has_wager_amount();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 wager_amount_;
  friend struct ::protobuf_mcdota_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsg_CVars_CVar : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsg_CVars.CVar) */ {
 public:
  CMsg_CVars_CVar();
  virtual ~CMsg_CVars_CVar();

  CMsg_CVars_CVar(const CMsg_CVars_CVar& from);

  inline CMsg_CVars_CVar& operator=(const CMsg_CVars_CVar& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsg_CVars_CVar(CMsg_CVars_CVar&& from) noexcept
    : CMsg_CVars_CVar() {
    *this = ::std::move(from);
  }

  inline CMsg_CVars_CVar& operator=(CMsg_CVars_CVar&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsg_CVars_CVar& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsg_CVars_CVar* internal_default_instance() {
    return reinterpret_cast<const CMsg_CVars_CVar*>(
               &_CMsg_CVars_CVar_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(CMsg_CVars_CVar* other);
  friend void swap(CMsg_CVars_CVar& a, CMsg_CVars_CVar& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsg_CVars_CVar* New() const final {
    return CreateMaybeMessage<CMsg_CVars_CVar>(NULL);
  }

  CMsg_CVars_CVar* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsg_CVars_CVar>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsg_CVars_CVar& from);
  void MergeFrom(const CMsg_CVars_CVar& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsg_CVars_CVar* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional string value = 2;
  bool has_value() const;
  void clear_value();
  static const int kValueFieldNumber = 2;
  const ::std::string& value() const;
  void set_value(const ::std::string& value);
  #if LANG_CXX11
  void set_value(::std::string&& value);
  #endif
  void set_value(const char* value);
  void set_value(const char* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void set_allocated_value(::std::string* value);

  // @@protoc_insertion_point(class_scope:CMsg_CVars.CVar)
 private:
  void set_has_name();
  void clear_has_name();
  void set_has_value();
  void clear_has_value();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  friend struct ::protobuf_mcdota_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsg_CVars : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsg_CVars) */ {
 public:
  CMsg_CVars();
  virtual ~CMsg_CVars();

  CMsg_CVars(const CMsg_CVars& from);

  inline CMsg_CVars& operator=(const CMsg_CVars& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsg_CVars(CMsg_CVars&& from) noexcept
    : CMsg_CVars() {
    *this = ::std::move(from);
  }

  inline CMsg_CVars& operator=(CMsg_CVars&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsg_CVars& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsg_CVars* internal_default_instance() {
    return reinterpret_cast<const CMsg_CVars*>(
               &_CMsg_CVars_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void Swap(CMsg_CVars* other);
  friend void swap(CMsg_CVars& a, CMsg_CVars& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsg_CVars* New() const final {
    return CreateMaybeMessage<CMsg_CVars>(NULL);
  }

  CMsg_CVars* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsg_CVars>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsg_CVars& from);
  void MergeFrom(const CMsg_CVars& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsg_CVars* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsg_CVars_CVar CVar;

  // accessors -------------------------------------------------------

  // repeated .CMsg_CVars.CVar cvars = 1;
  int cvars_size() const;
  void clear_cvars();
  static const int kCvarsFieldNumber = 1;
  ::CMsg_CVars_CVar* mutable_cvars(int index);
  ::google::protobuf::RepeatedPtrField< ::CMsg_CVars_CVar >*
      mutable_cvars();
  const ::CMsg_CVars_CVar& cvars(int index) const;
  ::CMsg_CVars_CVar* add_cvars();
  const ::google::protobuf::RepeatedPtrField< ::CMsg_CVars_CVar >&
      cvars() const;

  // @@protoc_insertion_point(class_scope:CMsg_CVars)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CMsg_CVars_CVar > cvars_;
  friend struct ::protobuf_mcdota_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CNETMsg_SetConVar : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CNETMsg_SetConVar) */ {
 public:
  CNETMsg_SetConVar();
  virtual ~CNETMsg_SetConVar();

  CNETMsg_SetConVar(const CNETMsg_SetConVar& from);

  inline CNETMsg_SetConVar& operator=(const CNETMsg_SetConVar& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CNETMsg_SetConVar(CNETMsg_SetConVar&& from) noexcept
    : CNETMsg_SetConVar() {
    *this = ::std::move(from);
  }

  inline CNETMsg_SetConVar& operator=(CNETMsg_SetConVar&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CNETMsg_SetConVar& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CNETMsg_SetConVar* internal_default_instance() {
    return reinterpret_cast<const CNETMsg_SetConVar*>(
               &_CNETMsg_SetConVar_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  void Swap(CNETMsg_SetConVar* other);
  friend void swap(CNETMsg_SetConVar& a, CNETMsg_SetConVar& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CNETMsg_SetConVar* New() const final {
    return CreateMaybeMessage<CNETMsg_SetConVar>(NULL);
  }

  CNETMsg_SetConVar* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CNETMsg_SetConVar>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CNETMsg_SetConVar& from);
  void MergeFrom(const CNETMsg_SetConVar& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CNETMsg_SetConVar* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .CMsg_CVars convars = 1;
  bool has_convars() const;
  void clear_convars();
  static const int kConvarsFieldNumber = 1;
  private:
  const ::CMsg_CVars& _internal_convars() const;
  public:
  const ::CMsg_CVars& convars() const;
  ::CMsg_CVars* release_convars();
  ::CMsg_CVars* mutable_convars();
  void set_allocated_convars(::CMsg_CVars* convars);

  // @@protoc_insertion_point(class_scope:CNETMsg_SetConVar)
 private:
  void set_has_convars();
  void clear_has_convars();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::CMsg_CVars* convars_;
  friend struct ::protobuf_mcdota_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CNETMsg_StringCmd : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CNETMsg_StringCmd) */ {
 public:
  CNETMsg_StringCmd();
  virtual ~CNETMsg_StringCmd();

  CNETMsg_StringCmd(const CNETMsg_StringCmd& from);

  inline CNETMsg_StringCmd& operator=(const CNETMsg_StringCmd& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CNETMsg_StringCmd(CNETMsg_StringCmd&& from) noexcept
    : CNETMsg_StringCmd() {
    *this = ::std::move(from);
  }

  inline CNETMsg_StringCmd& operator=(CNETMsg_StringCmd&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CNETMsg_StringCmd& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CNETMsg_StringCmd* internal_default_instance() {
    return reinterpret_cast<const CNETMsg_StringCmd*>(
               &_CNETMsg_StringCmd_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  void Swap(CNETMsg_StringCmd* other);
  friend void swap(CNETMsg_StringCmd& a, CNETMsg_StringCmd& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CNETMsg_StringCmd* New() const final {
    return CreateMaybeMessage<CNETMsg_StringCmd>(NULL);
  }

  CNETMsg_StringCmd* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CNETMsg_StringCmd>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CNETMsg_StringCmd& from);
  void MergeFrom(const CNETMsg_StringCmd& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CNETMsg_StringCmd* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string command = 1;
  bool has_command() const;
  void clear_command();
  static const int kCommandFieldNumber = 1;
  const ::std::string& command() const;
  void set_command(const ::std::string& value);
  #if LANG_CXX11
  void set_command(::std::string&& value);
  #endif
  void set_command(const char* value);
  void set_command(const char* value, size_t size);
  ::std::string* mutable_command();
  ::std::string* release_command();
  void set_allocated_command(::std::string* command);

  // @@protoc_insertion_point(class_scope:CNETMsg_StringCmd)
 private:
  void set_has_command();
  void clear_has_command();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr command_;
  friend struct ::protobuf_mcdota_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CDOTAClientMsg_SwapRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CDOTAClientMsg_SwapRequest) */ {
 public:
  CDOTAClientMsg_SwapRequest();
  virtual ~CDOTAClientMsg_SwapRequest();

  CDOTAClientMsg_SwapRequest(const CDOTAClientMsg_SwapRequest& from);

  inline CDOTAClientMsg_SwapRequest& operator=(const CDOTAClientMsg_SwapRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CDOTAClientMsg_SwapRequest(CDOTAClientMsg_SwapRequest&& from) noexcept
    : CDOTAClientMsg_SwapRequest() {
    *this = ::std::move(from);
  }

  inline CDOTAClientMsg_SwapRequest& operator=(CDOTAClientMsg_SwapRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDOTAClientMsg_SwapRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CDOTAClientMsg_SwapRequest* internal_default_instance() {
    return reinterpret_cast<const CDOTAClientMsg_SwapRequest*>(
               &_CDOTAClientMsg_SwapRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  void Swap(CDOTAClientMsg_SwapRequest* other);
  friend void swap(CDOTAClientMsg_SwapRequest& a, CDOTAClientMsg_SwapRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CDOTAClientMsg_SwapRequest* New() const final {
    return CreateMaybeMessage<CDOTAClientMsg_SwapRequest>(NULL);
  }

  CDOTAClientMsg_SwapRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CDOTAClientMsg_SwapRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CDOTAClientMsg_SwapRequest& from);
  void MergeFrom(const CDOTAClientMsg_SwapRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTAClientMsg_SwapRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 player_id = 1;
  bool has_player_id() const;
  void clear_player_id();
  static const int kPlayerIdFieldNumber = 1;
  ::google::protobuf::uint32 player_id() const;
  void set_player_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CDOTAClientMsg_SwapRequest)
 private:
  void set_has_player_id();
  void clear_has_player_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 player_id_;
  friend struct ::protobuf_mcdota_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CDOTAClientMsg_SwapAccept : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CDOTAClientMsg_SwapAccept) */ {
 public:
  CDOTAClientMsg_SwapAccept();
  virtual ~CDOTAClientMsg_SwapAccept();

  CDOTAClientMsg_SwapAccept(const CDOTAClientMsg_SwapAccept& from);

  inline CDOTAClientMsg_SwapAccept& operator=(const CDOTAClientMsg_SwapAccept& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CDOTAClientMsg_SwapAccept(CDOTAClientMsg_SwapAccept&& from) noexcept
    : CDOTAClientMsg_SwapAccept() {
    *this = ::std::move(from);
  }

  inline CDOTAClientMsg_SwapAccept& operator=(CDOTAClientMsg_SwapAccept&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDOTAClientMsg_SwapAccept& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CDOTAClientMsg_SwapAccept* internal_default_instance() {
    return reinterpret_cast<const CDOTAClientMsg_SwapAccept*>(
               &_CDOTAClientMsg_SwapAccept_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  void Swap(CDOTAClientMsg_SwapAccept* other);
  friend void swap(CDOTAClientMsg_SwapAccept& a, CDOTAClientMsg_SwapAccept& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CDOTAClientMsg_SwapAccept* New() const final {
    return CreateMaybeMessage<CDOTAClientMsg_SwapAccept>(NULL);
  }

  CDOTAClientMsg_SwapAccept* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CDOTAClientMsg_SwapAccept>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CDOTAClientMsg_SwapAccept& from);
  void MergeFrom(const CDOTAClientMsg_SwapAccept& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTAClientMsg_SwapAccept* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 player_id = 1;
  bool has_player_id() const;
  void clear_player_id();
  static const int kPlayerIdFieldNumber = 1;
  ::google::protobuf::uint32 player_id() const;
  void set_player_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CDOTAClientMsg_SwapAccept)
 private:
  void set_has_player_id();
  void clear_has_player_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 player_id_;
  friend struct ::protobuf_mcdota_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CDOTAMsg_CoachHUDPing : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CDOTAMsg_CoachHUDPing) */ {
 public:
  CDOTAMsg_CoachHUDPing();
  virtual ~CDOTAMsg_CoachHUDPing();

  CDOTAMsg_CoachHUDPing(const CDOTAMsg_CoachHUDPing& from);

  inline CDOTAMsg_CoachHUDPing& operator=(const CDOTAMsg_CoachHUDPing& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CDOTAMsg_CoachHUDPing(CDOTAMsg_CoachHUDPing&& from) noexcept
    : CDOTAMsg_CoachHUDPing() {
    *this = ::std::move(from);
  }

  inline CDOTAMsg_CoachHUDPing& operator=(CDOTAMsg_CoachHUDPing&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDOTAMsg_CoachHUDPing& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CDOTAMsg_CoachHUDPing* internal_default_instance() {
    return reinterpret_cast<const CDOTAMsg_CoachHUDPing*>(
               &_CDOTAMsg_CoachHUDPing_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  void Swap(CDOTAMsg_CoachHUDPing* other);
  friend void swap(CDOTAMsg_CoachHUDPing& a, CDOTAMsg_CoachHUDPing& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CDOTAMsg_CoachHUDPing* New() const final {
    return CreateMaybeMessage<CDOTAMsg_CoachHUDPing>(NULL);
  }

  CDOTAMsg_CoachHUDPing* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CDOTAMsg_CoachHUDPing>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CDOTAMsg_CoachHUDPing& from);
  void MergeFrom(const CDOTAMsg_CoachHUDPing& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTAMsg_CoachHUDPing* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string tgtpath = 3;
  bool has_tgtpath() const;
  void clear_tgtpath();
  static const int kTgtpathFieldNumber = 3;
  const ::std::string& tgtpath() const;
  void set_tgtpath(const ::std::string& value);
  #if LANG_CXX11
  void set_tgtpath(::std::string&& value);
  #endif
  void set_tgtpath(const char* value);
  void set_tgtpath(const char* value, size_t size);
  ::std::string* mutable_tgtpath();
  ::std::string* release_tgtpath();
  void set_allocated_tgtpath(::std::string* tgtpath);

  // optional uint32 x = 1;
  bool has_x() const;
  void clear_x();
  static const int kXFieldNumber = 1;
  ::google::protobuf::uint32 x() const;
  void set_x(::google::protobuf::uint32 value);

  // optional uint32 y = 2;
  bool has_y() const;
  void clear_y();
  static const int kYFieldNumber = 2;
  ::google::protobuf::uint32 y() const;
  void set_y(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CDOTAMsg_CoachHUDPing)
 private:
  void set_has_x();
  void clear_has_x();
  void set_has_y();
  void clear_has_y();
  void set_has_tgtpath();
  void clear_has_tgtpath();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr tgtpath_;
  ::google::protobuf::uint32 x_;
  ::google::protobuf::uint32 y_;
  friend struct ::protobuf_mcdota_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_CoachHUDPing : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CDOTAUserMsg_CoachHUDPing) */ {
 public:
  CDOTAUserMsg_CoachHUDPing();
  virtual ~CDOTAUserMsg_CoachHUDPing();

  CDOTAUserMsg_CoachHUDPing(const CDOTAUserMsg_CoachHUDPing& from);

  inline CDOTAUserMsg_CoachHUDPing& operator=(const CDOTAUserMsg_CoachHUDPing& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CDOTAUserMsg_CoachHUDPing(CDOTAUserMsg_CoachHUDPing&& from) noexcept
    : CDOTAUserMsg_CoachHUDPing() {
    *this = ::std::move(from);
  }

  inline CDOTAUserMsg_CoachHUDPing& operator=(CDOTAUserMsg_CoachHUDPing&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDOTAUserMsg_CoachHUDPing& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CDOTAUserMsg_CoachHUDPing* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_CoachHUDPing*>(
               &_CDOTAUserMsg_CoachHUDPing_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  void Swap(CDOTAUserMsg_CoachHUDPing* other);
  friend void swap(CDOTAUserMsg_CoachHUDPing& a, CDOTAUserMsg_CoachHUDPing& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_CoachHUDPing* New() const final {
    return CreateMaybeMessage<CDOTAUserMsg_CoachHUDPing>(NULL);
  }

  CDOTAUserMsg_CoachHUDPing* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CDOTAUserMsg_CoachHUDPing>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CDOTAUserMsg_CoachHUDPing& from);
  void MergeFrom(const CDOTAUserMsg_CoachHUDPing& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTAUserMsg_CoachHUDPing* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .CDOTAMsg_CoachHUDPing hud_ping = 2;
  bool has_hud_ping() const;
  void clear_hud_ping();
  static const int kHudPingFieldNumber = 2;
  private:
  const ::CDOTAMsg_CoachHUDPing& _internal_hud_ping() const;
  public:
  const ::CDOTAMsg_CoachHUDPing& hud_ping() const;
  ::CDOTAMsg_CoachHUDPing* release_hud_ping();
  ::CDOTAMsg_CoachHUDPing* mutable_hud_ping();
  void set_allocated_hud_ping(::CDOTAMsg_CoachHUDPing* hud_ping);

  // optional uint32 player_id = 1;
  bool has_player_id() const;
  void clear_player_id();
  static const int kPlayerIdFieldNumber = 1;
  ::google::protobuf::uint32 player_id() const;
  void set_player_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CDOTAUserMsg_CoachHUDPing)
 private:
  void set_has_player_id();
  void clear_has_player_id();
  void set_has_hud_ping();
  void clear_has_hud_ping();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::CDOTAMsg_CoachHUDPing* hud_ping_;
  ::google::protobuf::uint32 player_id_;
  friend struct ::protobuf_mcdota_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CDOTAClientMsg_GuideSelectOption : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CDOTAClientMsg_GuideSelectOption) */ {
 public:
  CDOTAClientMsg_GuideSelectOption();
  virtual ~CDOTAClientMsg_GuideSelectOption();

  CDOTAClientMsg_GuideSelectOption(const CDOTAClientMsg_GuideSelectOption& from);

  inline CDOTAClientMsg_GuideSelectOption& operator=(const CDOTAClientMsg_GuideSelectOption& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CDOTAClientMsg_GuideSelectOption(CDOTAClientMsg_GuideSelectOption&& from) noexcept
    : CDOTAClientMsg_GuideSelectOption() {
    *this = ::std::move(from);
  }

  inline CDOTAClientMsg_GuideSelectOption& operator=(CDOTAClientMsg_GuideSelectOption&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDOTAClientMsg_GuideSelectOption& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CDOTAClientMsg_GuideSelectOption* internal_default_instance() {
    return reinterpret_cast<const CDOTAClientMsg_GuideSelectOption*>(
               &_CDOTAClientMsg_GuideSelectOption_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  void Swap(CDOTAClientMsg_GuideSelectOption* other);
  friend void swap(CDOTAClientMsg_GuideSelectOption& a, CDOTAClientMsg_GuideSelectOption& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CDOTAClientMsg_GuideSelectOption* New() const final {
    return CreateMaybeMessage<CDOTAClientMsg_GuideSelectOption>(NULL);
  }

  CDOTAClientMsg_GuideSelectOption* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CDOTAClientMsg_GuideSelectOption>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CDOTAClientMsg_GuideSelectOption& from);
  void MergeFrom(const CDOTAClientMsg_GuideSelectOption& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTAClientMsg_GuideSelectOption* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 option = 1;
  bool has_option() const;
  void clear_option();
  static const int kOptionFieldNumber = 1;
  ::google::protobuf::uint32 option() const;
  void set_option(::google::protobuf::uint32 value);

  // optional bool force_recalculate = 2;
  bool has_force_recalculate() const;
  void clear_force_recalculate();
  static const int kForceRecalculateFieldNumber = 2;
  bool force_recalculate() const;
  void set_force_recalculate(bool value);

  // @@protoc_insertion_point(class_scope:CDOTAClientMsg_GuideSelectOption)
 private:
  void set_has_option();
  void clear_has_option();
  void set_has_force_recalculate();
  void clear_has_force_recalculate();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 option_;
  bool force_recalculate_;
  friend struct ::protobuf_mcdota_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CDOTAClientMsg_GuideSelected : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CDOTAClientMsg_GuideSelected) */ {
 public:
  CDOTAClientMsg_GuideSelected();
  virtual ~CDOTAClientMsg_GuideSelected();

  CDOTAClientMsg_GuideSelected(const CDOTAClientMsg_GuideSelected& from);

  inline CDOTAClientMsg_GuideSelected& operator=(const CDOTAClientMsg_GuideSelected& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CDOTAClientMsg_GuideSelected(CDOTAClientMsg_GuideSelected&& from) noexcept
    : CDOTAClientMsg_GuideSelected() {
    *this = ::std::move(from);
  }

  inline CDOTAClientMsg_GuideSelected& operator=(CDOTAClientMsg_GuideSelected&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDOTAClientMsg_GuideSelected& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CDOTAClientMsg_GuideSelected* internal_default_instance() {
    return reinterpret_cast<const CDOTAClientMsg_GuideSelected*>(
               &_CDOTAClientMsg_GuideSelected_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  void Swap(CDOTAClientMsg_GuideSelected* other);
  friend void swap(CDOTAClientMsg_GuideSelected& a, CDOTAClientMsg_GuideSelected& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CDOTAClientMsg_GuideSelected* New() const final {
    return CreateMaybeMessage<CDOTAClientMsg_GuideSelected>(NULL);
  }

  CDOTAClientMsg_GuideSelected* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CDOTAClientMsg_GuideSelected>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CDOTAClientMsg_GuideSelected& from);
  void MergeFrom(const CDOTAClientMsg_GuideSelected& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTAClientMsg_GuideSelected* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 guide_workshop_id = 1;
  bool has_guide_workshop_id() const;
  void clear_guide_workshop_id();
  static const int kGuideWorkshopIdFieldNumber = 1;
  ::google::protobuf::uint64 guide_workshop_id() const;
  void set_guide_workshop_id(::google::protobuf::uint64 value);

  // optional bool is_plus_guide = 2;
  bool has_is_plus_guide() const;
  void clear_is_plus_guide();
  static const int kIsPlusGuideFieldNumber = 2;
  bool is_plus_guide() const;
  void set_is_plus_guide(bool value);

  // @@protoc_insertion_point(class_scope:CDOTAClientMsg_GuideSelected)
 private:
  void set_has_guide_workshop_id();
  void clear_has_guide_workshop_id();
  void set_has_is_plus_guide();
  void clear_has_is_plus_guide();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint64 guide_workshop_id_;
  bool is_plus_guide_;
  friend struct ::protobuf_mcdota_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CCLCMsg_CmdKeyValues : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CCLCMsg_CmdKeyValues) */ {
 public:
  CCLCMsg_CmdKeyValues();
  virtual ~CCLCMsg_CmdKeyValues();

  CCLCMsg_CmdKeyValues(const CCLCMsg_CmdKeyValues& from);

  inline CCLCMsg_CmdKeyValues& operator=(const CCLCMsg_CmdKeyValues& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CCLCMsg_CmdKeyValues(CCLCMsg_CmdKeyValues&& from) noexcept
    : CCLCMsg_CmdKeyValues() {
    *this = ::std::move(from);
  }

  inline CCLCMsg_CmdKeyValues& operator=(CCLCMsg_CmdKeyValues&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CCLCMsg_CmdKeyValues& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CCLCMsg_CmdKeyValues* internal_default_instance() {
    return reinterpret_cast<const CCLCMsg_CmdKeyValues*>(
               &_CCLCMsg_CmdKeyValues_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  void Swap(CCLCMsg_CmdKeyValues* other);
  friend void swap(CCLCMsg_CmdKeyValues& a, CCLCMsg_CmdKeyValues& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CCLCMsg_CmdKeyValues* New() const final {
    return CreateMaybeMessage<CCLCMsg_CmdKeyValues>(NULL);
  }

  CCLCMsg_CmdKeyValues* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CCLCMsg_CmdKeyValues>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CCLCMsg_CmdKeyValues& from);
  void MergeFrom(const CCLCMsg_CmdKeyValues& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCLCMsg_CmdKeyValues* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes data = 1;
  bool has_data() const;
  void clear_data();
  static const int kDataFieldNumber = 1;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  #if LANG_CXX11
  void set_data(::std::string&& value);
  #endif
  void set_data(const char* value);
  void set_data(const void* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);

  // @@protoc_insertion_point(class_scope:CCLCMsg_CmdKeyValues)
 private:
  void set_has_data();
  void clear_has_data();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  friend struct ::protobuf_mcdota_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CCLCMsg_FileCRCCheck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CCLCMsg_FileCRCCheck) */ {
 public:
  CCLCMsg_FileCRCCheck();
  virtual ~CCLCMsg_FileCRCCheck();

  CCLCMsg_FileCRCCheck(const CCLCMsg_FileCRCCheck& from);

  inline CCLCMsg_FileCRCCheck& operator=(const CCLCMsg_FileCRCCheck& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CCLCMsg_FileCRCCheck(CCLCMsg_FileCRCCheck&& from) noexcept
    : CCLCMsg_FileCRCCheck() {
    *this = ::std::move(from);
  }

  inline CCLCMsg_FileCRCCheck& operator=(CCLCMsg_FileCRCCheck&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CCLCMsg_FileCRCCheck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CCLCMsg_FileCRCCheck* internal_default_instance() {
    return reinterpret_cast<const CCLCMsg_FileCRCCheck*>(
               &_CCLCMsg_FileCRCCheck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  void Swap(CCLCMsg_FileCRCCheck* other);
  friend void swap(CCLCMsg_FileCRCCheck& a, CCLCMsg_FileCRCCheck& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CCLCMsg_FileCRCCheck* New() const final {
    return CreateMaybeMessage<CCLCMsg_FileCRCCheck>(NULL);
  }

  CCLCMsg_FileCRCCheck* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CCLCMsg_FileCRCCheck>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CCLCMsg_FileCRCCheck& from);
  void MergeFrom(const CCLCMsg_FileCRCCheck& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCLCMsg_FileCRCCheck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string path = 2;
  bool has_path() const;
  void clear_path();
  static const int kPathFieldNumber = 2;
  const ::std::string& path() const;
  void set_path(const ::std::string& value);
  #if LANG_CXX11
  void set_path(::std::string&& value);
  #endif
  void set_path(const char* value);
  void set_path(const char* value, size_t size);
  ::std::string* mutable_path();
  ::std::string* release_path();
  void set_allocated_path(::std::string* path);

  // optional string filename = 4;
  bool has_filename() const;
  void clear_filename();
  static const int kFilenameFieldNumber = 4;
  const ::std::string& filename() const;
  void set_filename(const ::std::string& value);
  #if LANG_CXX11
  void set_filename(::std::string&& value);
  #endif
  void set_filename(const char* value);
  void set_filename(const char* value, size_t size);
  ::std::string* mutable_filename();
  ::std::string* release_filename();
  void set_allocated_filename(::std::string* filename);

  // optional int32 code_path = 1;
  bool has_code_path() const;
  void clear_code_path();
  static const int kCodePathFieldNumber = 1;
  ::google::protobuf::int32 code_path() const;
  void set_code_path(::google::protobuf::int32 value);

  // optional int32 code_filename = 3;
  bool has_code_filename() const;
  void clear_code_filename();
  static const int kCodeFilenameFieldNumber = 3;
  ::google::protobuf::int32 code_filename() const;
  void set_code_filename(::google::protobuf::int32 value);

  // optional fixed32 crc = 5;
  bool has_crc() const;
  void clear_crc();
  static const int kCrcFieldNumber = 5;
  ::google::protobuf::uint32 crc() const;
  void set_crc(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CCLCMsg_FileCRCCheck)
 private:
  void set_has_code_path();
  void clear_has_code_path();
  void set_has_path();
  void clear_has_path();
  void set_has_code_filename();
  void clear_has_code_filename();
  void set_has_filename();
  void clear_has_filename();
  void set_has_crc();
  void clear_has_crc();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr path_;
  ::google::protobuf::internal::ArenaStringPtr filename_;
  ::google::protobuf::int32 code_path_;
  ::google::protobuf::int32 code_filename_;
  ::google::protobuf::uint32 crc_;
  friend struct ::protobuf_mcdota_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CCLCMsg_ClientMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CCLCMsg_ClientMessage) */ {
 public:
  CCLCMsg_ClientMessage();
  virtual ~CCLCMsg_ClientMessage();

  CCLCMsg_ClientMessage(const CCLCMsg_ClientMessage& from);

  inline CCLCMsg_ClientMessage& operator=(const CCLCMsg_ClientMessage& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CCLCMsg_ClientMessage(CCLCMsg_ClientMessage&& from) noexcept
    : CCLCMsg_ClientMessage() {
    *this = ::std::move(from);
  }

  inline CCLCMsg_ClientMessage& operator=(CCLCMsg_ClientMessage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CCLCMsg_ClientMessage& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CCLCMsg_ClientMessage* internal_default_instance() {
    return reinterpret_cast<const CCLCMsg_ClientMessage*>(
               &_CCLCMsg_ClientMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  void Swap(CCLCMsg_ClientMessage* other);
  friend void swap(CCLCMsg_ClientMessage& a, CCLCMsg_ClientMessage& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CCLCMsg_ClientMessage* New() const final {
    return CreateMaybeMessage<CCLCMsg_ClientMessage>(NULL);
  }

  CCLCMsg_ClientMessage* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CCLCMsg_ClientMessage>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CCLCMsg_ClientMessage& from);
  void MergeFrom(const CCLCMsg_ClientMessage& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCLCMsg_ClientMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes data = 2;
  bool has_data() const;
  void clear_data();
  static const int kDataFieldNumber = 2;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  #if LANG_CXX11
  void set_data(::std::string&& value);
  #endif
  void set_data(const char* value);
  void set_data(const void* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);

  // optional int32 msg_type = 1;
  bool has_msg_type() const;
  void clear_msg_type();
  static const int kMsgTypeFieldNumber = 1;
  ::google::protobuf::int32 msg_type() const;
  void set_msg_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CCLCMsg_ClientMessage)
 private:
  void set_has_msg_type();
  void clear_has_msg_type();
  void set_has_data();
  void clear_has_data();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  ::google::protobuf::int32 msg_type_;
  friend struct ::protobuf_mcdota_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgSteamDatagramRelayAuthTicket_ExtraField : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgSteamDatagramRelayAuthTicket.ExtraField) */ {
 public:
  CMsgSteamDatagramRelayAuthTicket_ExtraField();
  virtual ~CMsgSteamDatagramRelayAuthTicket_ExtraField();

  CMsgSteamDatagramRelayAuthTicket_ExtraField(const CMsgSteamDatagramRelayAuthTicket_ExtraField& from);

  inline CMsgSteamDatagramRelayAuthTicket_ExtraField& operator=(const CMsgSteamDatagramRelayAuthTicket_ExtraField& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgSteamDatagramRelayAuthTicket_ExtraField(CMsgSteamDatagramRelayAuthTicket_ExtraField&& from) noexcept
    : CMsgSteamDatagramRelayAuthTicket_ExtraField() {
    *this = ::std::move(from);
  }

  inline CMsgSteamDatagramRelayAuthTicket_ExtraField& operator=(CMsgSteamDatagramRelayAuthTicket_ExtraField&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgSteamDatagramRelayAuthTicket_ExtraField& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgSteamDatagramRelayAuthTicket_ExtraField* internal_default_instance() {
    return reinterpret_cast<const CMsgSteamDatagramRelayAuthTicket_ExtraField*>(
               &_CMsgSteamDatagramRelayAuthTicket_ExtraField_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    20;

  void Swap(CMsgSteamDatagramRelayAuthTicket_ExtraField* other);
  friend void swap(CMsgSteamDatagramRelayAuthTicket_ExtraField& a, CMsgSteamDatagramRelayAuthTicket_ExtraField& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgSteamDatagramRelayAuthTicket_ExtraField* New() const final {
    return CreateMaybeMessage<CMsgSteamDatagramRelayAuthTicket_ExtraField>(NULL);
  }

  CMsgSteamDatagramRelayAuthTicket_ExtraField* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgSteamDatagramRelayAuthTicket_ExtraField>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgSteamDatagramRelayAuthTicket_ExtraField& from);
  void MergeFrom(const CMsgSteamDatagramRelayAuthTicket_ExtraField& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgSteamDatagramRelayAuthTicket_ExtraField* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional string string_value = 2;
  bool has_string_value() const;
  void clear_string_value();
  static const int kStringValueFieldNumber = 2;
  const ::std::string& string_value() const;
  void set_string_value(const ::std::string& value);
  #if LANG_CXX11
  void set_string_value(::std::string&& value);
  #endif
  void set_string_value(const char* value);
  void set_string_value(const char* value, size_t size);
  ::std::string* mutable_string_value();
  ::std::string* release_string_value();
  void set_allocated_string_value(::std::string* string_value);

  // optional sint64 int64_value = 3;
  bool has_int64_value() const;
  void clear_int64_value();
  static const int kInt64ValueFieldNumber = 3;
  ::google::protobuf::int64 int64_value() const;
  void set_int64_value(::google::protobuf::int64 value);

  // optional fixed64 fixed64_value = 5;
  bool has_fixed64_value() const;
  void clear_fixed64_value();
  static const int kFixed64ValueFieldNumber = 5;
  ::google::protobuf::uint64 fixed64_value() const;
  void set_fixed64_value(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CMsgSteamDatagramRelayAuthTicket.ExtraField)
 private:
  void set_has_name();
  void clear_has_name();
  void set_has_string_value();
  void clear_has_string_value();
  void set_has_int64_value();
  void clear_has_int64_value();
  void set_has_fixed64_value();
  void clear_has_fixed64_value();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr string_value_;
  ::google::protobuf::int64 int64_value_;
  ::google::protobuf::uint64 fixed64_value_;
  friend struct ::protobuf_mcdota_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgSteamDatagramRelayAuthTicket : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgSteamDatagramRelayAuthTicket) */ {
 public:
  CMsgSteamDatagramRelayAuthTicket();
  virtual ~CMsgSteamDatagramRelayAuthTicket();

  CMsgSteamDatagramRelayAuthTicket(const CMsgSteamDatagramRelayAuthTicket& from);

  inline CMsgSteamDatagramRelayAuthTicket& operator=(const CMsgSteamDatagramRelayAuthTicket& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgSteamDatagramRelayAuthTicket(CMsgSteamDatagramRelayAuthTicket&& from) noexcept
    : CMsgSteamDatagramRelayAuthTicket() {
    *this = ::std::move(from);
  }

  inline CMsgSteamDatagramRelayAuthTicket& operator=(CMsgSteamDatagramRelayAuthTicket&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgSteamDatagramRelayAuthTicket& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgSteamDatagramRelayAuthTicket* internal_default_instance() {
    return reinterpret_cast<const CMsgSteamDatagramRelayAuthTicket*>(
               &_CMsgSteamDatagramRelayAuthTicket_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    21;

  void Swap(CMsgSteamDatagramRelayAuthTicket* other);
  friend void swap(CMsgSteamDatagramRelayAuthTicket& a, CMsgSteamDatagramRelayAuthTicket& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgSteamDatagramRelayAuthTicket* New() const final {
    return CreateMaybeMessage<CMsgSteamDatagramRelayAuthTicket>(NULL);
  }

  CMsgSteamDatagramRelayAuthTicket* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgSteamDatagramRelayAuthTicket>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgSteamDatagramRelayAuthTicket& from);
  void MergeFrom(const CMsgSteamDatagramRelayAuthTicket& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgSteamDatagramRelayAuthTicket* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CMsgSteamDatagramRelayAuthTicket_ExtraField ExtraField;

  // accessors -------------------------------------------------------

  // repeated .CMsgSteamDatagramRelayAuthTicket.ExtraField extra_fields = 8;
  int extra_fields_size() const;
  void clear_extra_fields();
  static const int kExtraFieldsFieldNumber = 8;
  ::CMsgSteamDatagramRelayAuthTicket_ExtraField* mutable_extra_fields(int index);
  ::google::protobuf::RepeatedPtrField< ::CMsgSteamDatagramRelayAuthTicket_ExtraField >*
      mutable_extra_fields();
  const ::CMsgSteamDatagramRelayAuthTicket_ExtraField& extra_fields(int index) const;
  ::CMsgSteamDatagramRelayAuthTicket_ExtraField* add_extra_fields();
  const ::google::protobuf::RepeatedPtrField< ::CMsgSteamDatagramRelayAuthTicket_ExtraField >&
      extra_fields() const;

  // optional bytes gameserver_address = 11;
  bool has_gameserver_address() const;
  void clear_gameserver_address();
  static const int kGameserverAddressFieldNumber = 11;
  const ::std::string& gameserver_address() const;
  void set_gameserver_address(const ::std::string& value);
  #if LANG_CXX11
  void set_gameserver_address(::std::string&& value);
  #endif
  void set_gameserver_address(const char* value);
  void set_gameserver_address(const void* value, size_t size);
  ::std::string* mutable_gameserver_address();
  ::std::string* release_gameserver_address();
  void set_allocated_gameserver_address(::std::string* gameserver_address);

  // optional bytes legacy_authorized_client_identity_binary = 12;
  bool has_legacy_authorized_client_identity_binary() const;
  void clear_legacy_authorized_client_identity_binary();
  static const int kLegacyAuthorizedClientIdentityBinaryFieldNumber = 12;
  const ::std::string& legacy_authorized_client_identity_binary() const;
  void set_legacy_authorized_client_identity_binary(const ::std::string& value);
  #if LANG_CXX11
  void set_legacy_authorized_client_identity_binary(::std::string&& value);
  #endif
  void set_legacy_authorized_client_identity_binary(const char* value);
  void set_legacy_authorized_client_identity_binary(const void* value, size_t size);
  ::std::string* mutable_legacy_authorized_client_identity_binary();
  ::std::string* release_legacy_authorized_client_identity_binary();
  void set_allocated_legacy_authorized_client_identity_binary(::std::string* legacy_authorized_client_identity_binary);

  // optional bytes legacy_gameserver_identity_binary = 13;
  bool has_legacy_gameserver_identity_binary() const;
  void clear_legacy_gameserver_identity_binary();
  static const int kLegacyGameserverIdentityBinaryFieldNumber = 13;
  const ::std::string& legacy_gameserver_identity_binary() const;
  void set_legacy_gameserver_identity_binary(const ::std::string& value);
  #if LANG_CXX11
  void set_legacy_gameserver_identity_binary(::std::string&& value);
  #endif
  void set_legacy_gameserver_identity_binary(const char* value);
  void set_legacy_gameserver_identity_binary(const void* value, size_t size);
  ::std::string* mutable_legacy_gameserver_identity_binary();
  ::std::string* release_legacy_gameserver_identity_binary();
  void set_allocated_legacy_gameserver_identity_binary(::std::string* legacy_gameserver_identity_binary);

  // optional string authorized_client_identity_string = 14;
  bool has_authorized_client_identity_string() const;
  void clear_authorized_client_identity_string();
  static const int kAuthorizedClientIdentityStringFieldNumber = 14;
  const ::std::string& authorized_client_identity_string() const;
  void set_authorized_client_identity_string(const ::std::string& value);
  #if LANG_CXX11
  void set_authorized_client_identity_string(::std::string&& value);
  #endif
  void set_authorized_client_identity_string(const char* value);
  void set_authorized_client_identity_string(const char* value, size_t size);
  ::std::string* mutable_authorized_client_identity_string();
  ::std::string* release_authorized_client_identity_string();
  void set_allocated_authorized_client_identity_string(::std::string* authorized_client_identity_string);

  // optional string gameserver_identity_string = 15;
  bool has_gameserver_identity_string() const;
  void clear_gameserver_identity_string();
  static const int kGameserverIdentityStringFieldNumber = 15;
  const ::std::string& gameserver_identity_string() const;
  void set_gameserver_identity_string(const ::std::string& value);
  #if LANG_CXX11
  void set_gameserver_identity_string(::std::string&& value);
  #endif
  void set_gameserver_identity_string(const char* value);
  void set_gameserver_identity_string(const char* value, size_t size);
  ::std::string* mutable_gameserver_identity_string();
  ::std::string* release_gameserver_identity_string();
  void set_allocated_gameserver_identity_string(::std::string* gameserver_identity_string);

  // optional fixed64 legacy_authorized_steam_id = 2;
  bool has_legacy_authorized_steam_id() const;
  void clear_legacy_authorized_steam_id();
  static const int kLegacyAuthorizedSteamIdFieldNumber = 2;
  ::google::protobuf::uint64 legacy_authorized_steam_id() const;
  void set_legacy_authorized_steam_id(::google::protobuf::uint64 value);

  // optional fixed32 time_expiry = 1;
  bool has_time_expiry() const;
  void clear_time_expiry();
  static const int kTimeExpiryFieldNumber = 1;
  ::google::protobuf::uint32 time_expiry() const;
  void set_time_expiry(::google::protobuf::uint32 value);

  // optional fixed32 authorized_public_ip = 3;
  bool has_authorized_public_ip() const;
  void clear_authorized_public_ip();
  static const int kAuthorizedPublicIpFieldNumber = 3;
  ::google::protobuf::uint32 authorized_public_ip() const;
  void set_authorized_public_ip(::google::protobuf::uint32 value);

  // optional fixed64 legacy_gameserver_steam_id = 4;
  bool has_legacy_gameserver_steam_id() const;
  void clear_legacy_gameserver_steam_id();
  static const int kLegacyGameserverSteamIdFieldNumber = 4;
  ::google::protobuf::uint64 legacy_gameserver_steam_id() const;
  void set_legacy_gameserver_steam_id(::google::protobuf::uint64 value);

  // optional fixed64 legacy_gameserver_net_id = 5;
  bool has_legacy_gameserver_net_id() const;
  void clear_legacy_gameserver_net_id();
  static const int kLegacyGameserverNetIdFieldNumber = 5;
  ::google::protobuf::uint64 legacy_gameserver_net_id() const;
  void set_legacy_gameserver_net_id(::google::protobuf::uint64 value);

  // optional uint32 app_id = 7;
  bool has_app_id() const;
  void clear_app_id();
  static const int kAppIdFieldNumber = 7;
  ::google::protobuf::uint32 app_id() const;
  void set_app_id(::google::protobuf::uint32 value);

  // optional fixed32 legacy_gameserver_pop_id = 9;
  bool has_legacy_gameserver_pop_id() const;
  void clear_legacy_gameserver_pop_id();
  static const int kLegacyGameserverPopIdFieldNumber = 9;
  ::google::protobuf::uint32 legacy_gameserver_pop_id() const;
  void set_legacy_gameserver_pop_id(::google::protobuf::uint32 value);

  // optional uint32 virtual_port = 10;
  bool has_virtual_port() const;
  void clear_virtual_port();
  static const int kVirtualPortFieldNumber = 10;
  ::google::protobuf::uint32 virtual_port() const;
  void set_virtual_port(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgSteamDatagramRelayAuthTicket)
 private:
  void set_has_time_expiry();
  void clear_has_time_expiry();
  void set_has_authorized_client_identity_string();
  void clear_has_authorized_client_identity_string();
  void set_has_gameserver_identity_string();
  void clear_has_gameserver_identity_string();
  void set_has_authorized_public_ip();
  void clear_has_authorized_public_ip();
  void set_has_gameserver_address();
  void clear_has_gameserver_address();
  void set_has_app_id();
  void clear_has_app_id();
  void set_has_virtual_port();
  void clear_has_virtual_port();
  void set_has_legacy_authorized_steam_id();
  void clear_has_legacy_authorized_steam_id();
  void set_has_legacy_gameserver_steam_id();
  void clear_has_legacy_gameserver_steam_id();
  void set_has_legacy_gameserver_net_id();
  void clear_has_legacy_gameserver_net_id();
  void set_has_legacy_gameserver_pop_id();
  void clear_has_legacy_gameserver_pop_id();
  void set_has_legacy_authorized_client_identity_binary();
  void clear_has_legacy_authorized_client_identity_binary();
  void set_has_legacy_gameserver_identity_binary();
  void clear_has_legacy_gameserver_identity_binary();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CMsgSteamDatagramRelayAuthTicket_ExtraField > extra_fields_;
  ::google::protobuf::internal::ArenaStringPtr gameserver_address_;
  ::google::protobuf::internal::ArenaStringPtr legacy_authorized_client_identity_binary_;
  ::google::protobuf::internal::ArenaStringPtr legacy_gameserver_identity_binary_;
  ::google::protobuf::internal::ArenaStringPtr authorized_client_identity_string_;
  ::google::protobuf::internal::ArenaStringPtr gameserver_identity_string_;
  ::google::protobuf::uint64 legacy_authorized_steam_id_;
  ::google::protobuf::uint32 time_expiry_;
  ::google::protobuf::uint32 authorized_public_ip_;
  ::google::protobuf::uint64 legacy_gameserver_steam_id_;
  ::google::protobuf::uint64 legacy_gameserver_net_id_;
  ::google::protobuf::uint32 app_id_;
  ::google::protobuf::uint32 legacy_gameserver_pop_id_;
  ::google::protobuf::uint32 virtual_port_;
  friend struct ::protobuf_mcdota_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// CDOTAClientMsg_TipAlert

// optional string tip_text = 1;
inline bool CDOTAClientMsg_TipAlert::has_tip_text() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CDOTAClientMsg_TipAlert::set_has_tip_text() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CDOTAClientMsg_TipAlert::clear_has_tip_text() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CDOTAClientMsg_TipAlert::clear_tip_text() {
  tip_text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_tip_text();
}
inline const ::std::string& CDOTAClientMsg_TipAlert::tip_text() const {
  // @@protoc_insertion_point(field_get:CDOTAClientMsg_TipAlert.tip_text)
  return tip_text_.GetNoArena();
}
inline void CDOTAClientMsg_TipAlert::set_tip_text(const ::std::string& value) {
  set_has_tip_text();
  tip_text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CDOTAClientMsg_TipAlert.tip_text)
}
#if LANG_CXX11
inline void CDOTAClientMsg_TipAlert::set_tip_text(::std::string&& value) {
  set_has_tip_text();
  tip_text_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CDOTAClientMsg_TipAlert.tip_text)
}
#endif
inline void CDOTAClientMsg_TipAlert::set_tip_text(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_tip_text();
  tip_text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CDOTAClientMsg_TipAlert.tip_text)
}
inline void CDOTAClientMsg_TipAlert::set_tip_text(const char* value, size_t size) {
  set_has_tip_text();
  tip_text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CDOTAClientMsg_TipAlert.tip_text)
}
inline ::std::string* CDOTAClientMsg_TipAlert::mutable_tip_text() {
  set_has_tip_text();
  // @@protoc_insertion_point(field_mutable:CDOTAClientMsg_TipAlert.tip_text)
  return tip_text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CDOTAClientMsg_TipAlert::release_tip_text() {
  // @@protoc_insertion_point(field_release:CDOTAClientMsg_TipAlert.tip_text)
  if (!has_tip_text()) {
    return NULL;
  }
  clear_has_tip_text();
  return tip_text_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CDOTAClientMsg_TipAlert::set_allocated_tip_text(::std::string* tip_text) {
  if (tip_text != NULL) {
    set_has_tip_text();
  } else {
    clear_has_tip_text();
  }
  tip_text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tip_text);
  // @@protoc_insertion_point(field_set_allocated:CDOTAClientMsg_TipAlert.tip_text)
}

// -------------------------------------------------------------------

// CCLCMsg_SplitPlayerConnect

// optional string playername = 1;
inline bool CCLCMsg_SplitPlayerConnect::has_playername() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCLCMsg_SplitPlayerConnect::set_has_playername() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CCLCMsg_SplitPlayerConnect::clear_has_playername() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CCLCMsg_SplitPlayerConnect::clear_playername() {
  playername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_playername();
}
inline const ::std::string& CCLCMsg_SplitPlayerConnect::playername() const {
  // @@protoc_insertion_point(field_get:CCLCMsg_SplitPlayerConnect.playername)
  return playername_.GetNoArena();
}
inline void CCLCMsg_SplitPlayerConnect::set_playername(const ::std::string& value) {
  set_has_playername();
  playername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CCLCMsg_SplitPlayerConnect.playername)
}
#if LANG_CXX11
inline void CCLCMsg_SplitPlayerConnect::set_playername(::std::string&& value) {
  set_has_playername();
  playername_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CCLCMsg_SplitPlayerConnect.playername)
}
#endif
inline void CCLCMsg_SplitPlayerConnect::set_playername(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_playername();
  playername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CCLCMsg_SplitPlayerConnect.playername)
}
inline void CCLCMsg_SplitPlayerConnect::set_playername(const char* value, size_t size) {
  set_has_playername();
  playername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CCLCMsg_SplitPlayerConnect.playername)
}
inline ::std::string* CCLCMsg_SplitPlayerConnect::mutable_playername() {
  set_has_playername();
  // @@protoc_insertion_point(field_mutable:CCLCMsg_SplitPlayerConnect.playername)
  return playername_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CCLCMsg_SplitPlayerConnect::release_playername() {
  // @@protoc_insertion_point(field_release:CCLCMsg_SplitPlayerConnect.playername)
  if (!has_playername()) {
    return NULL;
  }
  clear_has_playername();
  return playername_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CCLCMsg_SplitPlayerConnect::set_allocated_playername(::std::string* playername) {
  if (playername != NULL) {
    set_has_playername();
  } else {
    clear_has_playername();
  }
  playername_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), playername);
  // @@protoc_insertion_point(field_set_allocated:CCLCMsg_SplitPlayerConnect.playername)
}

// -------------------------------------------------------------------

// CDOTAClientMsg_KillcamDamageTaken

// optional uint32 target_entindex = 1;
inline bool CDOTAClientMsg_KillcamDamageTaken::has_target_entindex() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CDOTAClientMsg_KillcamDamageTaken::set_has_target_entindex() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CDOTAClientMsg_KillcamDamageTaken::clear_has_target_entindex() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CDOTAClientMsg_KillcamDamageTaken::clear_target_entindex() {
  target_entindex_ = 0u;
  clear_has_target_entindex();
}
inline ::google::protobuf::uint32 CDOTAClientMsg_KillcamDamageTaken::target_entindex() const {
  // @@protoc_insertion_point(field_get:CDOTAClientMsg_KillcamDamageTaken.target_entindex)
  return target_entindex_;
}
inline void CDOTAClientMsg_KillcamDamageTaken::set_target_entindex(::google::protobuf::uint32 value) {
  set_has_target_entindex();
  target_entindex_ = value;
  // @@protoc_insertion_point(field_set:CDOTAClientMsg_KillcamDamageTaken.target_entindex)
}

// optional uint32 damage_taken = 2;
inline bool CDOTAClientMsg_KillcamDamageTaken::has_damage_taken() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CDOTAClientMsg_KillcamDamageTaken::set_has_damage_taken() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CDOTAClientMsg_KillcamDamageTaken::clear_has_damage_taken() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CDOTAClientMsg_KillcamDamageTaken::clear_damage_taken() {
  damage_taken_ = 0u;
  clear_has_damage_taken();
}
inline ::google::protobuf::uint32 CDOTAClientMsg_KillcamDamageTaken::damage_taken() const {
  // @@protoc_insertion_point(field_get:CDOTAClientMsg_KillcamDamageTaken.damage_taken)
  return damage_taken_;
}
inline void CDOTAClientMsg_KillcamDamageTaken::set_damage_taken(::google::protobuf::uint32 value) {
  set_has_damage_taken();
  damage_taken_ = value;
  // @@protoc_insertion_point(field_set:CDOTAClientMsg_KillcamDamageTaken.damage_taken)
}

// optional uint32 item_type = 3;
inline bool CDOTAClientMsg_KillcamDamageTaken::has_item_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CDOTAClientMsg_KillcamDamageTaken::set_has_item_type() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CDOTAClientMsg_KillcamDamageTaken::clear_has_item_type() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CDOTAClientMsg_KillcamDamageTaken::clear_item_type() {
  item_type_ = 0u;
  clear_has_item_type();
}
inline ::google::protobuf::uint32 CDOTAClientMsg_KillcamDamageTaken::item_type() const {
  // @@protoc_insertion_point(field_get:CDOTAClientMsg_KillcamDamageTaken.item_type)
  return item_type_;
}
inline void CDOTAClientMsg_KillcamDamageTaken::set_item_type(::google::protobuf::uint32 value) {
  set_has_item_type();
  item_type_ = value;
  // @@protoc_insertion_point(field_set:CDOTAClientMsg_KillcamDamageTaken.item_type)
}

// optional uint32 item_ability_id = 4;
inline bool CDOTAClientMsg_KillcamDamageTaken::has_item_ability_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CDOTAClientMsg_KillcamDamageTaken::set_has_item_ability_id() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CDOTAClientMsg_KillcamDamageTaken::clear_has_item_ability_id() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CDOTAClientMsg_KillcamDamageTaken::clear_item_ability_id() {
  item_ability_id_ = 0u;
  clear_has_item_ability_id();
}
inline ::google::protobuf::uint32 CDOTAClientMsg_KillcamDamageTaken::item_ability_id() const {
  // @@protoc_insertion_point(field_get:CDOTAClientMsg_KillcamDamageTaken.item_ability_id)
  return item_ability_id_;
}
inline void CDOTAClientMsg_KillcamDamageTaken::set_item_ability_id(::google::protobuf::uint32 value) {
  set_has_item_ability_id();
  item_ability_id_ = value;
  // @@protoc_insertion_point(field_set:CDOTAClientMsg_KillcamDamageTaken.item_ability_id)
}

// optional string hero_name = 5;
inline bool CDOTAClientMsg_KillcamDamageTaken::has_hero_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CDOTAClientMsg_KillcamDamageTaken::set_has_hero_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CDOTAClientMsg_KillcamDamageTaken::clear_has_hero_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CDOTAClientMsg_KillcamDamageTaken::clear_hero_name() {
  hero_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_hero_name();
}
inline const ::std::string& CDOTAClientMsg_KillcamDamageTaken::hero_name() const {
  // @@protoc_insertion_point(field_get:CDOTAClientMsg_KillcamDamageTaken.hero_name)
  return hero_name_.GetNoArena();
}
inline void CDOTAClientMsg_KillcamDamageTaken::set_hero_name(const ::std::string& value) {
  set_has_hero_name();
  hero_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CDOTAClientMsg_KillcamDamageTaken.hero_name)
}
#if LANG_CXX11
inline void CDOTAClientMsg_KillcamDamageTaken::set_hero_name(::std::string&& value) {
  set_has_hero_name();
  hero_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CDOTAClientMsg_KillcamDamageTaken.hero_name)
}
#endif
inline void CDOTAClientMsg_KillcamDamageTaken::set_hero_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_hero_name();
  hero_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CDOTAClientMsg_KillcamDamageTaken.hero_name)
}
inline void CDOTAClientMsg_KillcamDamageTaken::set_hero_name(const char* value, size_t size) {
  set_has_hero_name();
  hero_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CDOTAClientMsg_KillcamDamageTaken.hero_name)
}
inline ::std::string* CDOTAClientMsg_KillcamDamageTaken::mutable_hero_name() {
  set_has_hero_name();
  // @@protoc_insertion_point(field_mutable:CDOTAClientMsg_KillcamDamageTaken.hero_name)
  return hero_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CDOTAClientMsg_KillcamDamageTaken::release_hero_name() {
  // @@protoc_insertion_point(field_release:CDOTAClientMsg_KillcamDamageTaken.hero_name)
  if (!has_hero_name()) {
    return NULL;
  }
  clear_has_hero_name();
  return hero_name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CDOTAClientMsg_KillcamDamageTaken::set_allocated_hero_name(::std::string* hero_name) {
  if (hero_name != NULL) {
    set_has_hero_name();
  } else {
    clear_has_hero_name();
  }
  hero_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), hero_name);
  // @@protoc_insertion_point(field_set_allocated:CDOTAClientMsg_KillcamDamageTaken.hero_name)
}

// optional string damage_color = 6;
inline bool CDOTAClientMsg_KillcamDamageTaken::has_damage_color() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CDOTAClientMsg_KillcamDamageTaken::set_has_damage_color() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CDOTAClientMsg_KillcamDamageTaken::clear_has_damage_color() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CDOTAClientMsg_KillcamDamageTaken::clear_damage_color() {
  damage_color_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_damage_color();
}
inline const ::std::string& CDOTAClientMsg_KillcamDamageTaken::damage_color() const {
  // @@protoc_insertion_point(field_get:CDOTAClientMsg_KillcamDamageTaken.damage_color)
  return damage_color_.GetNoArena();
}
inline void CDOTAClientMsg_KillcamDamageTaken::set_damage_color(const ::std::string& value) {
  set_has_damage_color();
  damage_color_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CDOTAClientMsg_KillcamDamageTaken.damage_color)
}
#if LANG_CXX11
inline void CDOTAClientMsg_KillcamDamageTaken::set_damage_color(::std::string&& value) {
  set_has_damage_color();
  damage_color_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CDOTAClientMsg_KillcamDamageTaken.damage_color)
}
#endif
inline void CDOTAClientMsg_KillcamDamageTaken::set_damage_color(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_damage_color();
  damage_color_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CDOTAClientMsg_KillcamDamageTaken.damage_color)
}
inline void CDOTAClientMsg_KillcamDamageTaken::set_damage_color(const char* value, size_t size) {
  set_has_damage_color();
  damage_color_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CDOTAClientMsg_KillcamDamageTaken.damage_color)
}
inline ::std::string* CDOTAClientMsg_KillcamDamageTaken::mutable_damage_color() {
  set_has_damage_color();
  // @@protoc_insertion_point(field_mutable:CDOTAClientMsg_KillcamDamageTaken.damage_color)
  return damage_color_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CDOTAClientMsg_KillcamDamageTaken::release_damage_color() {
  // @@protoc_insertion_point(field_release:CDOTAClientMsg_KillcamDamageTaken.damage_color)
  if (!has_damage_color()) {
    return NULL;
  }
  clear_has_damage_color();
  return damage_color_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CDOTAClientMsg_KillcamDamageTaken::set_allocated_damage_color(::std::string* damage_color) {
  if (damage_color != NULL) {
    set_has_damage_color();
  } else {
    clear_has_damage_color();
  }
  damage_color_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), damage_color);
  // @@protoc_insertion_point(field_set_allocated:CDOTAClientMsg_KillcamDamageTaken.damage_color)
}

// -------------------------------------------------------------------

// CDOTAClientMsg_EventCNY2015Cmd

// optional bytes data = 1;
inline bool CDOTAClientMsg_EventCNY2015Cmd::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CDOTAClientMsg_EventCNY2015Cmd::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CDOTAClientMsg_EventCNY2015Cmd::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CDOTAClientMsg_EventCNY2015Cmd::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
inline const ::std::string& CDOTAClientMsg_EventCNY2015Cmd::data() const {
  // @@protoc_insertion_point(field_get:CDOTAClientMsg_EventCNY2015Cmd.data)
  return data_.GetNoArena();
}
inline void CDOTAClientMsg_EventCNY2015Cmd::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CDOTAClientMsg_EventCNY2015Cmd.data)
}
#if LANG_CXX11
inline void CDOTAClientMsg_EventCNY2015Cmd::set_data(::std::string&& value) {
  set_has_data();
  data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CDOTAClientMsg_EventCNY2015Cmd.data)
}
#endif
inline void CDOTAClientMsg_EventCNY2015Cmd::set_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CDOTAClientMsg_EventCNY2015Cmd.data)
}
inline void CDOTAClientMsg_EventCNY2015Cmd::set_data(const void* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CDOTAClientMsg_EventCNY2015Cmd.data)
}
inline ::std::string* CDOTAClientMsg_EventCNY2015Cmd::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:CDOTAClientMsg_EventCNY2015Cmd.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CDOTAClientMsg_EventCNY2015Cmd::release_data() {
  // @@protoc_insertion_point(field_release:CDOTAClientMsg_EventCNY2015Cmd.data)
  if (!has_data()) {
    return NULL;
  }
  clear_has_data();
  return data_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CDOTAClientMsg_EventCNY2015Cmd::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:CDOTAClientMsg_EventCNY2015Cmd.data)
}

// -------------------------------------------------------------------

// CDOTAClientMsg_RankWager

// optional bool announce_wager = 1;
inline bool CDOTAClientMsg_RankWager::has_announce_wager() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CDOTAClientMsg_RankWager::set_has_announce_wager() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CDOTAClientMsg_RankWager::clear_has_announce_wager() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CDOTAClientMsg_RankWager::clear_announce_wager() {
  announce_wager_ = false;
  clear_has_announce_wager();
}
inline bool CDOTAClientMsg_RankWager::announce_wager() const {
  // @@protoc_insertion_point(field_get:CDOTAClientMsg_RankWager.announce_wager)
  return announce_wager_;
}
inline void CDOTAClientMsg_RankWager::set_announce_wager(bool value) {
  set_has_announce_wager();
  announce_wager_ = value;
  // @@protoc_insertion_point(field_set:CDOTAClientMsg_RankWager.announce_wager)
}

// -------------------------------------------------------------------

// CDOTAClientMsg_EventPointsTip

// optional uint32 recipient_player_id = 1;
inline bool CDOTAClientMsg_EventPointsTip::has_recipient_player_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CDOTAClientMsg_EventPointsTip::set_has_recipient_player_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CDOTAClientMsg_EventPointsTip::clear_has_recipient_player_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CDOTAClientMsg_EventPointsTip::clear_recipient_player_id() {
  recipient_player_id_ = 0u;
  clear_has_recipient_player_id();
}
inline ::google::protobuf::uint32 CDOTAClientMsg_EventPointsTip::recipient_player_id() const {
  // @@protoc_insertion_point(field_get:CDOTAClientMsg_EventPointsTip.recipient_player_id)
  return recipient_player_id_;
}
inline void CDOTAClientMsg_EventPointsTip::set_recipient_player_id(::google::protobuf::uint32 value) {
  set_has_recipient_player_id();
  recipient_player_id_ = value;
  // @@protoc_insertion_point(field_set:CDOTAClientMsg_EventPointsTip.recipient_player_id)
}

// -------------------------------------------------------------------

// CDOTAClientMsg_CoinWager

// optional uint32 wager_amount = 1;
inline bool CDOTAClientMsg_CoinWager::has_wager_amount() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CDOTAClientMsg_CoinWager::set_has_wager_amount() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CDOTAClientMsg_CoinWager::clear_has_wager_amount() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CDOTAClientMsg_CoinWager::clear_wager_amount() {
  wager_amount_ = 0u;
  clear_has_wager_amount();
}
inline ::google::protobuf::uint32 CDOTAClientMsg_CoinWager::wager_amount() const {
  // @@protoc_insertion_point(field_get:CDOTAClientMsg_CoinWager.wager_amount)
  return wager_amount_;
}
inline void CDOTAClientMsg_CoinWager::set_wager_amount(::google::protobuf::uint32 value) {
  set_has_wager_amount();
  wager_amount_ = value;
  // @@protoc_insertion_point(field_set:CDOTAClientMsg_CoinWager.wager_amount)
}

// -------------------------------------------------------------------

// CMsg_CVars_CVar

// optional string name = 1;
inline bool CMsg_CVars_CVar::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsg_CVars_CVar::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsg_CVars_CVar::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsg_CVars_CVar::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& CMsg_CVars_CVar::name() const {
  // @@protoc_insertion_point(field_get:CMsg_CVars.CVar.name)
  return name_.GetNoArena();
}
inline void CMsg_CVars_CVar::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMsg_CVars.CVar.name)
}
#if LANG_CXX11
inline void CMsg_CVars_CVar::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMsg_CVars.CVar.name)
}
#endif
inline void CMsg_CVars_CVar::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMsg_CVars.CVar.name)
}
inline void CMsg_CVars_CVar::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMsg_CVars.CVar.name)
}
inline ::std::string* CMsg_CVars_CVar::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:CMsg_CVars.CVar.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsg_CVars_CVar::release_name() {
  // @@protoc_insertion_point(field_release:CMsg_CVars.CVar.name)
  if (!has_name()) {
    return NULL;
  }
  clear_has_name();
  return name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsg_CVars_CVar::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:CMsg_CVars.CVar.name)
}

// optional string value = 2;
inline bool CMsg_CVars_CVar::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsg_CVars_CVar::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsg_CVars_CVar::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsg_CVars_CVar::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_value();
}
inline const ::std::string& CMsg_CVars_CVar::value() const {
  // @@protoc_insertion_point(field_get:CMsg_CVars.CVar.value)
  return value_.GetNoArena();
}
inline void CMsg_CVars_CVar::set_value(const ::std::string& value) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMsg_CVars.CVar.value)
}
#if LANG_CXX11
inline void CMsg_CVars_CVar::set_value(::std::string&& value) {
  set_has_value();
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMsg_CVars.CVar.value)
}
#endif
inline void CMsg_CVars_CVar::set_value(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMsg_CVars.CVar.value)
}
inline void CMsg_CVars_CVar::set_value(const char* value, size_t size) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMsg_CVars.CVar.value)
}
inline ::std::string* CMsg_CVars_CVar::mutable_value() {
  set_has_value();
  // @@protoc_insertion_point(field_mutable:CMsg_CVars.CVar.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsg_CVars_CVar::release_value() {
  // @@protoc_insertion_point(field_release:CMsg_CVars.CVar.value)
  if (!has_value()) {
    return NULL;
  }
  clear_has_value();
  return value_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsg_CVars_CVar::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    set_has_value();
  } else {
    clear_has_value();
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:CMsg_CVars.CVar.value)
}

// -------------------------------------------------------------------

// CMsg_CVars

// repeated .CMsg_CVars.CVar cvars = 1;
inline int CMsg_CVars::cvars_size() const {
  return cvars_.size();
}
inline void CMsg_CVars::clear_cvars() {
  cvars_.Clear();
}
inline ::CMsg_CVars_CVar* CMsg_CVars::mutable_cvars(int index) {
  // @@protoc_insertion_point(field_mutable:CMsg_CVars.cvars)
  return cvars_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::CMsg_CVars_CVar >*
CMsg_CVars::mutable_cvars() {
  // @@protoc_insertion_point(field_mutable_list:CMsg_CVars.cvars)
  return &cvars_;
}
inline const ::CMsg_CVars_CVar& CMsg_CVars::cvars(int index) const {
  // @@protoc_insertion_point(field_get:CMsg_CVars.cvars)
  return cvars_.Get(index);
}
inline ::CMsg_CVars_CVar* CMsg_CVars::add_cvars() {
  // @@protoc_insertion_point(field_add:CMsg_CVars.cvars)
  return cvars_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsg_CVars_CVar >&
CMsg_CVars::cvars() const {
  // @@protoc_insertion_point(field_list:CMsg_CVars.cvars)
  return cvars_;
}

// -------------------------------------------------------------------

// CNETMsg_SetConVar

// optional .CMsg_CVars convars = 1;
inline bool CNETMsg_SetConVar::has_convars() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CNETMsg_SetConVar::set_has_convars() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CNETMsg_SetConVar::clear_has_convars() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CNETMsg_SetConVar::clear_convars() {
  if (convars_ != NULL) convars_->Clear();
  clear_has_convars();
}
inline const ::CMsg_CVars& CNETMsg_SetConVar::_internal_convars() const {
  return *convars_;
}
inline const ::CMsg_CVars& CNETMsg_SetConVar::convars() const {
  const ::CMsg_CVars* p = convars_;
  // @@protoc_insertion_point(field_get:CNETMsg_SetConVar.convars)
  return p != NULL ? *p : *reinterpret_cast<const ::CMsg_CVars*>(
      &::_CMsg_CVars_default_instance_);
}
inline ::CMsg_CVars* CNETMsg_SetConVar::release_convars() {
  // @@protoc_insertion_point(field_release:CNETMsg_SetConVar.convars)
  clear_has_convars();
  ::CMsg_CVars* temp = convars_;
  convars_ = NULL;
  return temp;
}
inline ::CMsg_CVars* CNETMsg_SetConVar::mutable_convars() {
  set_has_convars();
  if (convars_ == NULL) {
    auto* p = CreateMaybeMessage<::CMsg_CVars>(GetArenaNoVirtual());
    convars_ = p;
  }
  // @@protoc_insertion_point(field_mutable:CNETMsg_SetConVar.convars)
  return convars_;
}
inline void CNETMsg_SetConVar::set_allocated_convars(::CMsg_CVars* convars) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete convars_;
  }
  if (convars) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      convars = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, convars, submessage_arena);
    }
    set_has_convars();
  } else {
    clear_has_convars();
  }
  convars_ = convars;
  // @@protoc_insertion_point(field_set_allocated:CNETMsg_SetConVar.convars)
}

// -------------------------------------------------------------------

// CNETMsg_StringCmd

// optional string command = 1;
inline bool CNETMsg_StringCmd::has_command() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CNETMsg_StringCmd::set_has_command() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CNETMsg_StringCmd::clear_has_command() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CNETMsg_StringCmd::clear_command() {
  command_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_command();
}
inline const ::std::string& CNETMsg_StringCmd::command() const {
  // @@protoc_insertion_point(field_get:CNETMsg_StringCmd.command)
  return command_.GetNoArena();
}
inline void CNETMsg_StringCmd::set_command(const ::std::string& value) {
  set_has_command();
  command_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CNETMsg_StringCmd.command)
}
#if LANG_CXX11
inline void CNETMsg_StringCmd::set_command(::std::string&& value) {
  set_has_command();
  command_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CNETMsg_StringCmd.command)
}
#endif
inline void CNETMsg_StringCmd::set_command(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_command();
  command_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CNETMsg_StringCmd.command)
}
inline void CNETMsg_StringCmd::set_command(const char* value, size_t size) {
  set_has_command();
  command_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CNETMsg_StringCmd.command)
}
inline ::std::string* CNETMsg_StringCmd::mutable_command() {
  set_has_command();
  // @@protoc_insertion_point(field_mutable:CNETMsg_StringCmd.command)
  return command_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CNETMsg_StringCmd::release_command() {
  // @@protoc_insertion_point(field_release:CNETMsg_StringCmd.command)
  if (!has_command()) {
    return NULL;
  }
  clear_has_command();
  return command_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CNETMsg_StringCmd::set_allocated_command(::std::string* command) {
  if (command != NULL) {
    set_has_command();
  } else {
    clear_has_command();
  }
  command_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), command);
  // @@protoc_insertion_point(field_set_allocated:CNETMsg_StringCmd.command)
}

// -------------------------------------------------------------------

// CDOTAClientMsg_SwapRequest

// optional uint32 player_id = 1;
inline bool CDOTAClientMsg_SwapRequest::has_player_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CDOTAClientMsg_SwapRequest::set_has_player_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CDOTAClientMsg_SwapRequest::clear_has_player_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CDOTAClientMsg_SwapRequest::clear_player_id() {
  player_id_ = 0u;
  clear_has_player_id();
}
inline ::google::protobuf::uint32 CDOTAClientMsg_SwapRequest::player_id() const {
  // @@protoc_insertion_point(field_get:CDOTAClientMsg_SwapRequest.player_id)
  return player_id_;
}
inline void CDOTAClientMsg_SwapRequest::set_player_id(::google::protobuf::uint32 value) {
  set_has_player_id();
  player_id_ = value;
  // @@protoc_insertion_point(field_set:CDOTAClientMsg_SwapRequest.player_id)
}

// -------------------------------------------------------------------

// CDOTAClientMsg_SwapAccept

// optional uint32 player_id = 1;
inline bool CDOTAClientMsg_SwapAccept::has_player_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CDOTAClientMsg_SwapAccept::set_has_player_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CDOTAClientMsg_SwapAccept::clear_has_player_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CDOTAClientMsg_SwapAccept::clear_player_id() {
  player_id_ = 0u;
  clear_has_player_id();
}
inline ::google::protobuf::uint32 CDOTAClientMsg_SwapAccept::player_id() const {
  // @@protoc_insertion_point(field_get:CDOTAClientMsg_SwapAccept.player_id)
  return player_id_;
}
inline void CDOTAClientMsg_SwapAccept::set_player_id(::google::protobuf::uint32 value) {
  set_has_player_id();
  player_id_ = value;
  // @@protoc_insertion_point(field_set:CDOTAClientMsg_SwapAccept.player_id)
}

// -------------------------------------------------------------------

// CDOTAMsg_CoachHUDPing

// optional uint32 x = 1;
inline bool CDOTAMsg_CoachHUDPing::has_x() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CDOTAMsg_CoachHUDPing::set_has_x() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CDOTAMsg_CoachHUDPing::clear_has_x() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CDOTAMsg_CoachHUDPing::clear_x() {
  x_ = 0u;
  clear_has_x();
}
inline ::google::protobuf::uint32 CDOTAMsg_CoachHUDPing::x() const {
  // @@protoc_insertion_point(field_get:CDOTAMsg_CoachHUDPing.x)
  return x_;
}
inline void CDOTAMsg_CoachHUDPing::set_x(::google::protobuf::uint32 value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:CDOTAMsg_CoachHUDPing.x)
}

// optional uint32 y = 2;
inline bool CDOTAMsg_CoachHUDPing::has_y() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CDOTAMsg_CoachHUDPing::set_has_y() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CDOTAMsg_CoachHUDPing::clear_has_y() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CDOTAMsg_CoachHUDPing::clear_y() {
  y_ = 0u;
  clear_has_y();
}
inline ::google::protobuf::uint32 CDOTAMsg_CoachHUDPing::y() const {
  // @@protoc_insertion_point(field_get:CDOTAMsg_CoachHUDPing.y)
  return y_;
}
inline void CDOTAMsg_CoachHUDPing::set_y(::google::protobuf::uint32 value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:CDOTAMsg_CoachHUDPing.y)
}

// optional string tgtpath = 3;
inline bool CDOTAMsg_CoachHUDPing::has_tgtpath() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CDOTAMsg_CoachHUDPing::set_has_tgtpath() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CDOTAMsg_CoachHUDPing::clear_has_tgtpath() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CDOTAMsg_CoachHUDPing::clear_tgtpath() {
  tgtpath_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_tgtpath();
}
inline const ::std::string& CDOTAMsg_CoachHUDPing::tgtpath() const {
  // @@protoc_insertion_point(field_get:CDOTAMsg_CoachHUDPing.tgtpath)
  return tgtpath_.GetNoArena();
}
inline void CDOTAMsg_CoachHUDPing::set_tgtpath(const ::std::string& value) {
  set_has_tgtpath();
  tgtpath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CDOTAMsg_CoachHUDPing.tgtpath)
}
#if LANG_CXX11
inline void CDOTAMsg_CoachHUDPing::set_tgtpath(::std::string&& value) {
  set_has_tgtpath();
  tgtpath_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CDOTAMsg_CoachHUDPing.tgtpath)
}
#endif
inline void CDOTAMsg_CoachHUDPing::set_tgtpath(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_tgtpath();
  tgtpath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CDOTAMsg_CoachHUDPing.tgtpath)
}
inline void CDOTAMsg_CoachHUDPing::set_tgtpath(const char* value, size_t size) {
  set_has_tgtpath();
  tgtpath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CDOTAMsg_CoachHUDPing.tgtpath)
}
inline ::std::string* CDOTAMsg_CoachHUDPing::mutable_tgtpath() {
  set_has_tgtpath();
  // @@protoc_insertion_point(field_mutable:CDOTAMsg_CoachHUDPing.tgtpath)
  return tgtpath_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CDOTAMsg_CoachHUDPing::release_tgtpath() {
  // @@protoc_insertion_point(field_release:CDOTAMsg_CoachHUDPing.tgtpath)
  if (!has_tgtpath()) {
    return NULL;
  }
  clear_has_tgtpath();
  return tgtpath_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CDOTAMsg_CoachHUDPing::set_allocated_tgtpath(::std::string* tgtpath) {
  if (tgtpath != NULL) {
    set_has_tgtpath();
  } else {
    clear_has_tgtpath();
  }
  tgtpath_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tgtpath);
  // @@protoc_insertion_point(field_set_allocated:CDOTAMsg_CoachHUDPing.tgtpath)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_CoachHUDPing

// optional uint32 player_id = 1;
inline bool CDOTAUserMsg_CoachHUDPing::has_player_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CDOTAUserMsg_CoachHUDPing::set_has_player_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CDOTAUserMsg_CoachHUDPing::clear_has_player_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CDOTAUserMsg_CoachHUDPing::clear_player_id() {
  player_id_ = 0u;
  clear_has_player_id();
}
inline ::google::protobuf::uint32 CDOTAUserMsg_CoachHUDPing::player_id() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_CoachHUDPing.player_id)
  return player_id_;
}
inline void CDOTAUserMsg_CoachHUDPing::set_player_id(::google::protobuf::uint32 value) {
  set_has_player_id();
  player_id_ = value;
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_CoachHUDPing.player_id)
}

// optional .CDOTAMsg_CoachHUDPing hud_ping = 2;
inline bool CDOTAUserMsg_CoachHUDPing::has_hud_ping() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CDOTAUserMsg_CoachHUDPing::set_has_hud_ping() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CDOTAUserMsg_CoachHUDPing::clear_has_hud_ping() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CDOTAUserMsg_CoachHUDPing::clear_hud_ping() {
  if (hud_ping_ != NULL) hud_ping_->Clear();
  clear_has_hud_ping();
}
inline const ::CDOTAMsg_CoachHUDPing& CDOTAUserMsg_CoachHUDPing::_internal_hud_ping() const {
  return *hud_ping_;
}
inline const ::CDOTAMsg_CoachHUDPing& CDOTAUserMsg_CoachHUDPing::hud_ping() const {
  const ::CDOTAMsg_CoachHUDPing* p = hud_ping_;
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_CoachHUDPing.hud_ping)
  return p != NULL ? *p : *reinterpret_cast<const ::CDOTAMsg_CoachHUDPing*>(
      &::_CDOTAMsg_CoachHUDPing_default_instance_);
}
inline ::CDOTAMsg_CoachHUDPing* CDOTAUserMsg_CoachHUDPing::release_hud_ping() {
  // @@protoc_insertion_point(field_release:CDOTAUserMsg_CoachHUDPing.hud_ping)
  clear_has_hud_ping();
  ::CDOTAMsg_CoachHUDPing* temp = hud_ping_;
  hud_ping_ = NULL;
  return temp;
}
inline ::CDOTAMsg_CoachHUDPing* CDOTAUserMsg_CoachHUDPing::mutable_hud_ping() {
  set_has_hud_ping();
  if (hud_ping_ == NULL) {
    auto* p = CreateMaybeMessage<::CDOTAMsg_CoachHUDPing>(GetArenaNoVirtual());
    hud_ping_ = p;
  }
  // @@protoc_insertion_point(field_mutable:CDOTAUserMsg_CoachHUDPing.hud_ping)
  return hud_ping_;
}
inline void CDOTAUserMsg_CoachHUDPing::set_allocated_hud_ping(::CDOTAMsg_CoachHUDPing* hud_ping) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete hud_ping_;
  }
  if (hud_ping) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      hud_ping = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, hud_ping, submessage_arena);
    }
    set_has_hud_ping();
  } else {
    clear_has_hud_ping();
  }
  hud_ping_ = hud_ping;
  // @@protoc_insertion_point(field_set_allocated:CDOTAUserMsg_CoachHUDPing.hud_ping)
}

// -------------------------------------------------------------------

// CDOTAClientMsg_GuideSelectOption

// optional uint32 option = 1;
inline bool CDOTAClientMsg_GuideSelectOption::has_option() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CDOTAClientMsg_GuideSelectOption::set_has_option() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CDOTAClientMsg_GuideSelectOption::clear_has_option() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CDOTAClientMsg_GuideSelectOption::clear_option() {
  option_ = 0u;
  clear_has_option();
}
inline ::google::protobuf::uint32 CDOTAClientMsg_GuideSelectOption::option() const {
  // @@protoc_insertion_point(field_get:CDOTAClientMsg_GuideSelectOption.option)
  return option_;
}
inline void CDOTAClientMsg_GuideSelectOption::set_option(::google::protobuf::uint32 value) {
  set_has_option();
  option_ = value;
  // @@protoc_insertion_point(field_set:CDOTAClientMsg_GuideSelectOption.option)
}

// optional bool force_recalculate = 2;
inline bool CDOTAClientMsg_GuideSelectOption::has_force_recalculate() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CDOTAClientMsg_GuideSelectOption::set_has_force_recalculate() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CDOTAClientMsg_GuideSelectOption::clear_has_force_recalculate() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CDOTAClientMsg_GuideSelectOption::clear_force_recalculate() {
  force_recalculate_ = false;
  clear_has_force_recalculate();
}
inline bool CDOTAClientMsg_GuideSelectOption::force_recalculate() const {
  // @@protoc_insertion_point(field_get:CDOTAClientMsg_GuideSelectOption.force_recalculate)
  return force_recalculate_;
}
inline void CDOTAClientMsg_GuideSelectOption::set_force_recalculate(bool value) {
  set_has_force_recalculate();
  force_recalculate_ = value;
  // @@protoc_insertion_point(field_set:CDOTAClientMsg_GuideSelectOption.force_recalculate)
}

// -------------------------------------------------------------------

// CDOTAClientMsg_GuideSelected

// optional uint64 guide_workshop_id = 1;
inline bool CDOTAClientMsg_GuideSelected::has_guide_workshop_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CDOTAClientMsg_GuideSelected::set_has_guide_workshop_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CDOTAClientMsg_GuideSelected::clear_has_guide_workshop_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CDOTAClientMsg_GuideSelected::clear_guide_workshop_id() {
  guide_workshop_id_ = GOOGLE_ULONGLONG(0);
  clear_has_guide_workshop_id();
}
inline ::google::protobuf::uint64 CDOTAClientMsg_GuideSelected::guide_workshop_id() const {
  // @@protoc_insertion_point(field_get:CDOTAClientMsg_GuideSelected.guide_workshop_id)
  return guide_workshop_id_;
}
inline void CDOTAClientMsg_GuideSelected::set_guide_workshop_id(::google::protobuf::uint64 value) {
  set_has_guide_workshop_id();
  guide_workshop_id_ = value;
  // @@protoc_insertion_point(field_set:CDOTAClientMsg_GuideSelected.guide_workshop_id)
}

// optional bool is_plus_guide = 2;
inline bool CDOTAClientMsg_GuideSelected::has_is_plus_guide() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CDOTAClientMsg_GuideSelected::set_has_is_plus_guide() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CDOTAClientMsg_GuideSelected::clear_has_is_plus_guide() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CDOTAClientMsg_GuideSelected::clear_is_plus_guide() {
  is_plus_guide_ = false;
  clear_has_is_plus_guide();
}
inline bool CDOTAClientMsg_GuideSelected::is_plus_guide() const {
  // @@protoc_insertion_point(field_get:CDOTAClientMsg_GuideSelected.is_plus_guide)
  return is_plus_guide_;
}
inline void CDOTAClientMsg_GuideSelected::set_is_plus_guide(bool value) {
  set_has_is_plus_guide();
  is_plus_guide_ = value;
  // @@protoc_insertion_point(field_set:CDOTAClientMsg_GuideSelected.is_plus_guide)
}

// -------------------------------------------------------------------

// CCLCMsg_CmdKeyValues

// optional bytes data = 1;
inline bool CCLCMsg_CmdKeyValues::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCLCMsg_CmdKeyValues::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CCLCMsg_CmdKeyValues::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CCLCMsg_CmdKeyValues::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
inline const ::std::string& CCLCMsg_CmdKeyValues::data() const {
  // @@protoc_insertion_point(field_get:CCLCMsg_CmdKeyValues.data)
  return data_.GetNoArena();
}
inline void CCLCMsg_CmdKeyValues::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CCLCMsg_CmdKeyValues.data)
}
#if LANG_CXX11
inline void CCLCMsg_CmdKeyValues::set_data(::std::string&& value) {
  set_has_data();
  data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CCLCMsg_CmdKeyValues.data)
}
#endif
inline void CCLCMsg_CmdKeyValues::set_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CCLCMsg_CmdKeyValues.data)
}
inline void CCLCMsg_CmdKeyValues::set_data(const void* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CCLCMsg_CmdKeyValues.data)
}
inline ::std::string* CCLCMsg_CmdKeyValues::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:CCLCMsg_CmdKeyValues.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CCLCMsg_CmdKeyValues::release_data() {
  // @@protoc_insertion_point(field_release:CCLCMsg_CmdKeyValues.data)
  if (!has_data()) {
    return NULL;
  }
  clear_has_data();
  return data_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CCLCMsg_CmdKeyValues::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:CCLCMsg_CmdKeyValues.data)
}

// -------------------------------------------------------------------

// CCLCMsg_FileCRCCheck

// optional int32 code_path = 1;
inline bool CCLCMsg_FileCRCCheck::has_code_path() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CCLCMsg_FileCRCCheck::set_has_code_path() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CCLCMsg_FileCRCCheck::clear_has_code_path() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CCLCMsg_FileCRCCheck::clear_code_path() {
  code_path_ = 0;
  clear_has_code_path();
}
inline ::google::protobuf::int32 CCLCMsg_FileCRCCheck::code_path() const {
  // @@protoc_insertion_point(field_get:CCLCMsg_FileCRCCheck.code_path)
  return code_path_;
}
inline void CCLCMsg_FileCRCCheck::set_code_path(::google::protobuf::int32 value) {
  set_has_code_path();
  code_path_ = value;
  // @@protoc_insertion_point(field_set:CCLCMsg_FileCRCCheck.code_path)
}

// optional string path = 2;
inline bool CCLCMsg_FileCRCCheck::has_path() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCLCMsg_FileCRCCheck::set_has_path() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CCLCMsg_FileCRCCheck::clear_has_path() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CCLCMsg_FileCRCCheck::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_path();
}
inline const ::std::string& CCLCMsg_FileCRCCheck::path() const {
  // @@protoc_insertion_point(field_get:CCLCMsg_FileCRCCheck.path)
  return path_.GetNoArena();
}
inline void CCLCMsg_FileCRCCheck::set_path(const ::std::string& value) {
  set_has_path();
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CCLCMsg_FileCRCCheck.path)
}
#if LANG_CXX11
inline void CCLCMsg_FileCRCCheck::set_path(::std::string&& value) {
  set_has_path();
  path_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CCLCMsg_FileCRCCheck.path)
}
#endif
inline void CCLCMsg_FileCRCCheck::set_path(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_path();
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CCLCMsg_FileCRCCheck.path)
}
inline void CCLCMsg_FileCRCCheck::set_path(const char* value, size_t size) {
  set_has_path();
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CCLCMsg_FileCRCCheck.path)
}
inline ::std::string* CCLCMsg_FileCRCCheck::mutable_path() {
  set_has_path();
  // @@protoc_insertion_point(field_mutable:CCLCMsg_FileCRCCheck.path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CCLCMsg_FileCRCCheck::release_path() {
  // @@protoc_insertion_point(field_release:CCLCMsg_FileCRCCheck.path)
  if (!has_path()) {
    return NULL;
  }
  clear_has_path();
  return path_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CCLCMsg_FileCRCCheck::set_allocated_path(::std::string* path) {
  if (path != NULL) {
    set_has_path();
  } else {
    clear_has_path();
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:CCLCMsg_FileCRCCheck.path)
}

// optional int32 code_filename = 3;
inline bool CCLCMsg_FileCRCCheck::has_code_filename() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CCLCMsg_FileCRCCheck::set_has_code_filename() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CCLCMsg_FileCRCCheck::clear_has_code_filename() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CCLCMsg_FileCRCCheck::clear_code_filename() {
  code_filename_ = 0;
  clear_has_code_filename();
}
inline ::google::protobuf::int32 CCLCMsg_FileCRCCheck::code_filename() const {
  // @@protoc_insertion_point(field_get:CCLCMsg_FileCRCCheck.code_filename)
  return code_filename_;
}
inline void CCLCMsg_FileCRCCheck::set_code_filename(::google::protobuf::int32 value) {
  set_has_code_filename();
  code_filename_ = value;
  // @@protoc_insertion_point(field_set:CCLCMsg_FileCRCCheck.code_filename)
}

// optional string filename = 4;
inline bool CCLCMsg_FileCRCCheck::has_filename() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CCLCMsg_FileCRCCheck::set_has_filename() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CCLCMsg_FileCRCCheck::clear_has_filename() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CCLCMsg_FileCRCCheck::clear_filename() {
  filename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_filename();
}
inline const ::std::string& CCLCMsg_FileCRCCheck::filename() const {
  // @@protoc_insertion_point(field_get:CCLCMsg_FileCRCCheck.filename)
  return filename_.GetNoArena();
}
inline void CCLCMsg_FileCRCCheck::set_filename(const ::std::string& value) {
  set_has_filename();
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CCLCMsg_FileCRCCheck.filename)
}
#if LANG_CXX11
inline void CCLCMsg_FileCRCCheck::set_filename(::std::string&& value) {
  set_has_filename();
  filename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CCLCMsg_FileCRCCheck.filename)
}
#endif
inline void CCLCMsg_FileCRCCheck::set_filename(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_filename();
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CCLCMsg_FileCRCCheck.filename)
}
inline void CCLCMsg_FileCRCCheck::set_filename(const char* value, size_t size) {
  set_has_filename();
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CCLCMsg_FileCRCCheck.filename)
}
inline ::std::string* CCLCMsg_FileCRCCheck::mutable_filename() {
  set_has_filename();
  // @@protoc_insertion_point(field_mutable:CCLCMsg_FileCRCCheck.filename)
  return filename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CCLCMsg_FileCRCCheck::release_filename() {
  // @@protoc_insertion_point(field_release:CCLCMsg_FileCRCCheck.filename)
  if (!has_filename()) {
    return NULL;
  }
  clear_has_filename();
  return filename_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CCLCMsg_FileCRCCheck::set_allocated_filename(::std::string* filename) {
  if (filename != NULL) {
    set_has_filename();
  } else {
    clear_has_filename();
  }
  filename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), filename);
  // @@protoc_insertion_point(field_set_allocated:CCLCMsg_FileCRCCheck.filename)
}

// optional fixed32 crc = 5;
inline bool CCLCMsg_FileCRCCheck::has_crc() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CCLCMsg_FileCRCCheck::set_has_crc() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CCLCMsg_FileCRCCheck::clear_has_crc() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CCLCMsg_FileCRCCheck::clear_crc() {
  crc_ = 0u;
  clear_has_crc();
}
inline ::google::protobuf::uint32 CCLCMsg_FileCRCCheck::crc() const {
  // @@protoc_insertion_point(field_get:CCLCMsg_FileCRCCheck.crc)
  return crc_;
}
inline void CCLCMsg_FileCRCCheck::set_crc(::google::protobuf::uint32 value) {
  set_has_crc();
  crc_ = value;
  // @@protoc_insertion_point(field_set:CCLCMsg_FileCRCCheck.crc)
}

// -------------------------------------------------------------------

// CCLCMsg_ClientMessage

// optional int32 msg_type = 1;
inline bool CCLCMsg_ClientMessage::has_msg_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CCLCMsg_ClientMessage::set_has_msg_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CCLCMsg_ClientMessage::clear_has_msg_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CCLCMsg_ClientMessage::clear_msg_type() {
  msg_type_ = 0;
  clear_has_msg_type();
}
inline ::google::protobuf::int32 CCLCMsg_ClientMessage::msg_type() const {
  // @@protoc_insertion_point(field_get:CCLCMsg_ClientMessage.msg_type)
  return msg_type_;
}
inline void CCLCMsg_ClientMessage::set_msg_type(::google::protobuf::int32 value) {
  set_has_msg_type();
  msg_type_ = value;
  // @@protoc_insertion_point(field_set:CCLCMsg_ClientMessage.msg_type)
}

// optional bytes data = 2;
inline bool CCLCMsg_ClientMessage::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCLCMsg_ClientMessage::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CCLCMsg_ClientMessage::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CCLCMsg_ClientMessage::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
inline const ::std::string& CCLCMsg_ClientMessage::data() const {
  // @@protoc_insertion_point(field_get:CCLCMsg_ClientMessage.data)
  return data_.GetNoArena();
}
inline void CCLCMsg_ClientMessage::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CCLCMsg_ClientMessage.data)
}
#if LANG_CXX11
inline void CCLCMsg_ClientMessage::set_data(::std::string&& value) {
  set_has_data();
  data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CCLCMsg_ClientMessage.data)
}
#endif
inline void CCLCMsg_ClientMessage::set_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CCLCMsg_ClientMessage.data)
}
inline void CCLCMsg_ClientMessage::set_data(const void* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CCLCMsg_ClientMessage.data)
}
inline ::std::string* CCLCMsg_ClientMessage::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:CCLCMsg_ClientMessage.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CCLCMsg_ClientMessage::release_data() {
  // @@protoc_insertion_point(field_release:CCLCMsg_ClientMessage.data)
  if (!has_data()) {
    return NULL;
  }
  clear_has_data();
  return data_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CCLCMsg_ClientMessage::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:CCLCMsg_ClientMessage.data)
}

// -------------------------------------------------------------------

// CMsgSteamDatagramRelayAuthTicket_ExtraField

// optional string name = 1;
inline bool CMsgSteamDatagramRelayAuthTicket_ExtraField::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgSteamDatagramRelayAuthTicket_ExtraField::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgSteamDatagramRelayAuthTicket_ExtraField::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgSteamDatagramRelayAuthTicket_ExtraField::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& CMsgSteamDatagramRelayAuthTicket_ExtraField::name() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramRelayAuthTicket.ExtraField.name)
  return name_.GetNoArena();
}
inline void CMsgSteamDatagramRelayAuthTicket_ExtraField::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramRelayAuthTicket.ExtraField.name)
}
#if LANG_CXX11
inline void CMsgSteamDatagramRelayAuthTicket_ExtraField::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMsgSteamDatagramRelayAuthTicket.ExtraField.name)
}
#endif
inline void CMsgSteamDatagramRelayAuthTicket_ExtraField::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMsgSteamDatagramRelayAuthTicket.ExtraField.name)
}
inline void CMsgSteamDatagramRelayAuthTicket_ExtraField::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMsgSteamDatagramRelayAuthTicket.ExtraField.name)
}
inline ::std::string* CMsgSteamDatagramRelayAuthTicket_ExtraField::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:CMsgSteamDatagramRelayAuthTicket.ExtraField.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgSteamDatagramRelayAuthTicket_ExtraField::release_name() {
  // @@protoc_insertion_point(field_release:CMsgSteamDatagramRelayAuthTicket.ExtraField.name)
  if (!has_name()) {
    return NULL;
  }
  clear_has_name();
  return name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgSteamDatagramRelayAuthTicket_ExtraField::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:CMsgSteamDatagramRelayAuthTicket.ExtraField.name)
}

// optional string string_value = 2;
inline bool CMsgSteamDatagramRelayAuthTicket_ExtraField::has_string_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgSteamDatagramRelayAuthTicket_ExtraField::set_has_string_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgSteamDatagramRelayAuthTicket_ExtraField::clear_has_string_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgSteamDatagramRelayAuthTicket_ExtraField::clear_string_value() {
  string_value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_string_value();
}
inline const ::std::string& CMsgSteamDatagramRelayAuthTicket_ExtraField::string_value() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramRelayAuthTicket.ExtraField.string_value)
  return string_value_.GetNoArena();
}
inline void CMsgSteamDatagramRelayAuthTicket_ExtraField::set_string_value(const ::std::string& value) {
  set_has_string_value();
  string_value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramRelayAuthTicket.ExtraField.string_value)
}
#if LANG_CXX11
inline void CMsgSteamDatagramRelayAuthTicket_ExtraField::set_string_value(::std::string&& value) {
  set_has_string_value();
  string_value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMsgSteamDatagramRelayAuthTicket.ExtraField.string_value)
}
#endif
inline void CMsgSteamDatagramRelayAuthTicket_ExtraField::set_string_value(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_string_value();
  string_value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMsgSteamDatagramRelayAuthTicket.ExtraField.string_value)
}
inline void CMsgSteamDatagramRelayAuthTicket_ExtraField::set_string_value(const char* value, size_t size) {
  set_has_string_value();
  string_value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMsgSteamDatagramRelayAuthTicket.ExtraField.string_value)
}
inline ::std::string* CMsgSteamDatagramRelayAuthTicket_ExtraField::mutable_string_value() {
  set_has_string_value();
  // @@protoc_insertion_point(field_mutable:CMsgSteamDatagramRelayAuthTicket.ExtraField.string_value)
  return string_value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgSteamDatagramRelayAuthTicket_ExtraField::release_string_value() {
  // @@protoc_insertion_point(field_release:CMsgSteamDatagramRelayAuthTicket.ExtraField.string_value)
  if (!has_string_value()) {
    return NULL;
  }
  clear_has_string_value();
  return string_value_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgSteamDatagramRelayAuthTicket_ExtraField::set_allocated_string_value(::std::string* string_value) {
  if (string_value != NULL) {
    set_has_string_value();
  } else {
    clear_has_string_value();
  }
  string_value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), string_value);
  // @@protoc_insertion_point(field_set_allocated:CMsgSteamDatagramRelayAuthTicket.ExtraField.string_value)
}

// optional sint64 int64_value = 3;
inline bool CMsgSteamDatagramRelayAuthTicket_ExtraField::has_int64_value() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgSteamDatagramRelayAuthTicket_ExtraField::set_has_int64_value() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgSteamDatagramRelayAuthTicket_ExtraField::clear_has_int64_value() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgSteamDatagramRelayAuthTicket_ExtraField::clear_int64_value() {
  int64_value_ = GOOGLE_LONGLONG(0);
  clear_has_int64_value();
}
inline ::google::protobuf::int64 CMsgSteamDatagramRelayAuthTicket_ExtraField::int64_value() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramRelayAuthTicket.ExtraField.int64_value)
  return int64_value_;
}
inline void CMsgSteamDatagramRelayAuthTicket_ExtraField::set_int64_value(::google::protobuf::int64 value) {
  set_has_int64_value();
  int64_value_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramRelayAuthTicket.ExtraField.int64_value)
}

// optional fixed64 fixed64_value = 5;
inline bool CMsgSteamDatagramRelayAuthTicket_ExtraField::has_fixed64_value() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgSteamDatagramRelayAuthTicket_ExtraField::set_has_fixed64_value() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgSteamDatagramRelayAuthTicket_ExtraField::clear_has_fixed64_value() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgSteamDatagramRelayAuthTicket_ExtraField::clear_fixed64_value() {
  fixed64_value_ = GOOGLE_ULONGLONG(0);
  clear_has_fixed64_value();
}
inline ::google::protobuf::uint64 CMsgSteamDatagramRelayAuthTicket_ExtraField::fixed64_value() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramRelayAuthTicket.ExtraField.fixed64_value)
  return fixed64_value_;
}
inline void CMsgSteamDatagramRelayAuthTicket_ExtraField::set_fixed64_value(::google::protobuf::uint64 value) {
  set_has_fixed64_value();
  fixed64_value_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramRelayAuthTicket.ExtraField.fixed64_value)
}

// -------------------------------------------------------------------

// CMsgSteamDatagramRelayAuthTicket

// optional fixed32 time_expiry = 1;
inline bool CMsgSteamDatagramRelayAuthTicket::has_time_expiry() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgSteamDatagramRelayAuthTicket::set_has_time_expiry() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgSteamDatagramRelayAuthTicket::clear_has_time_expiry() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgSteamDatagramRelayAuthTicket::clear_time_expiry() {
  time_expiry_ = 0u;
  clear_has_time_expiry();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramRelayAuthTicket::time_expiry() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramRelayAuthTicket.time_expiry)
  return time_expiry_;
}
inline void CMsgSteamDatagramRelayAuthTicket::set_time_expiry(::google::protobuf::uint32 value) {
  set_has_time_expiry();
  time_expiry_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramRelayAuthTicket.time_expiry)
}

// optional string authorized_client_identity_string = 14;
inline bool CMsgSteamDatagramRelayAuthTicket::has_authorized_client_identity_string() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgSteamDatagramRelayAuthTicket::set_has_authorized_client_identity_string() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgSteamDatagramRelayAuthTicket::clear_has_authorized_client_identity_string() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgSteamDatagramRelayAuthTicket::clear_authorized_client_identity_string() {
  authorized_client_identity_string_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_authorized_client_identity_string();
}
inline const ::std::string& CMsgSteamDatagramRelayAuthTicket::authorized_client_identity_string() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramRelayAuthTicket.authorized_client_identity_string)
  return authorized_client_identity_string_.GetNoArena();
}
inline void CMsgSteamDatagramRelayAuthTicket::set_authorized_client_identity_string(const ::std::string& value) {
  set_has_authorized_client_identity_string();
  authorized_client_identity_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramRelayAuthTicket.authorized_client_identity_string)
}
#if LANG_CXX11
inline void CMsgSteamDatagramRelayAuthTicket::set_authorized_client_identity_string(::std::string&& value) {
  set_has_authorized_client_identity_string();
  authorized_client_identity_string_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMsgSteamDatagramRelayAuthTicket.authorized_client_identity_string)
}
#endif
inline void CMsgSteamDatagramRelayAuthTicket::set_authorized_client_identity_string(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_authorized_client_identity_string();
  authorized_client_identity_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMsgSteamDatagramRelayAuthTicket.authorized_client_identity_string)
}
inline void CMsgSteamDatagramRelayAuthTicket::set_authorized_client_identity_string(const char* value, size_t size) {
  set_has_authorized_client_identity_string();
  authorized_client_identity_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMsgSteamDatagramRelayAuthTicket.authorized_client_identity_string)
}
inline ::std::string* CMsgSteamDatagramRelayAuthTicket::mutable_authorized_client_identity_string() {
  set_has_authorized_client_identity_string();
  // @@protoc_insertion_point(field_mutable:CMsgSteamDatagramRelayAuthTicket.authorized_client_identity_string)
  return authorized_client_identity_string_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgSteamDatagramRelayAuthTicket::release_authorized_client_identity_string() {
  // @@protoc_insertion_point(field_release:CMsgSteamDatagramRelayAuthTicket.authorized_client_identity_string)
  if (!has_authorized_client_identity_string()) {
    return NULL;
  }
  clear_has_authorized_client_identity_string();
  return authorized_client_identity_string_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgSteamDatagramRelayAuthTicket::set_allocated_authorized_client_identity_string(::std::string* authorized_client_identity_string) {
  if (authorized_client_identity_string != NULL) {
    set_has_authorized_client_identity_string();
  } else {
    clear_has_authorized_client_identity_string();
  }
  authorized_client_identity_string_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), authorized_client_identity_string);
  // @@protoc_insertion_point(field_set_allocated:CMsgSteamDatagramRelayAuthTicket.authorized_client_identity_string)
}

// optional string gameserver_identity_string = 15;
inline bool CMsgSteamDatagramRelayAuthTicket::has_gameserver_identity_string() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgSteamDatagramRelayAuthTicket::set_has_gameserver_identity_string() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgSteamDatagramRelayAuthTicket::clear_has_gameserver_identity_string() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgSteamDatagramRelayAuthTicket::clear_gameserver_identity_string() {
  gameserver_identity_string_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_gameserver_identity_string();
}
inline const ::std::string& CMsgSteamDatagramRelayAuthTicket::gameserver_identity_string() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramRelayAuthTicket.gameserver_identity_string)
  return gameserver_identity_string_.GetNoArena();
}
inline void CMsgSteamDatagramRelayAuthTicket::set_gameserver_identity_string(const ::std::string& value) {
  set_has_gameserver_identity_string();
  gameserver_identity_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramRelayAuthTicket.gameserver_identity_string)
}
#if LANG_CXX11
inline void CMsgSteamDatagramRelayAuthTicket::set_gameserver_identity_string(::std::string&& value) {
  set_has_gameserver_identity_string();
  gameserver_identity_string_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMsgSteamDatagramRelayAuthTicket.gameserver_identity_string)
}
#endif
inline void CMsgSteamDatagramRelayAuthTicket::set_gameserver_identity_string(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_gameserver_identity_string();
  gameserver_identity_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMsgSteamDatagramRelayAuthTicket.gameserver_identity_string)
}
inline void CMsgSteamDatagramRelayAuthTicket::set_gameserver_identity_string(const char* value, size_t size) {
  set_has_gameserver_identity_string();
  gameserver_identity_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMsgSteamDatagramRelayAuthTicket.gameserver_identity_string)
}
inline ::std::string* CMsgSteamDatagramRelayAuthTicket::mutable_gameserver_identity_string() {
  set_has_gameserver_identity_string();
  // @@protoc_insertion_point(field_mutable:CMsgSteamDatagramRelayAuthTicket.gameserver_identity_string)
  return gameserver_identity_string_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgSteamDatagramRelayAuthTicket::release_gameserver_identity_string() {
  // @@protoc_insertion_point(field_release:CMsgSteamDatagramRelayAuthTicket.gameserver_identity_string)
  if (!has_gameserver_identity_string()) {
    return NULL;
  }
  clear_has_gameserver_identity_string();
  return gameserver_identity_string_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgSteamDatagramRelayAuthTicket::set_allocated_gameserver_identity_string(::std::string* gameserver_identity_string) {
  if (gameserver_identity_string != NULL) {
    set_has_gameserver_identity_string();
  } else {
    clear_has_gameserver_identity_string();
  }
  gameserver_identity_string_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), gameserver_identity_string);
  // @@protoc_insertion_point(field_set_allocated:CMsgSteamDatagramRelayAuthTicket.gameserver_identity_string)
}

// optional fixed32 authorized_public_ip = 3;
inline bool CMsgSteamDatagramRelayAuthTicket::has_authorized_public_ip() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMsgSteamDatagramRelayAuthTicket::set_has_authorized_public_ip() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CMsgSteamDatagramRelayAuthTicket::clear_has_authorized_public_ip() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CMsgSteamDatagramRelayAuthTicket::clear_authorized_public_ip() {
  authorized_public_ip_ = 0u;
  clear_has_authorized_public_ip();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramRelayAuthTicket::authorized_public_ip() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramRelayAuthTicket.authorized_public_ip)
  return authorized_public_ip_;
}
inline void CMsgSteamDatagramRelayAuthTicket::set_authorized_public_ip(::google::protobuf::uint32 value) {
  set_has_authorized_public_ip();
  authorized_public_ip_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramRelayAuthTicket.authorized_public_ip)
}

// optional bytes gameserver_address = 11;
inline bool CMsgSteamDatagramRelayAuthTicket::has_gameserver_address() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgSteamDatagramRelayAuthTicket::set_has_gameserver_address() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgSteamDatagramRelayAuthTicket::clear_has_gameserver_address() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgSteamDatagramRelayAuthTicket::clear_gameserver_address() {
  gameserver_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_gameserver_address();
}
inline const ::std::string& CMsgSteamDatagramRelayAuthTicket::gameserver_address() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramRelayAuthTicket.gameserver_address)
  return gameserver_address_.GetNoArena();
}
inline void CMsgSteamDatagramRelayAuthTicket::set_gameserver_address(const ::std::string& value) {
  set_has_gameserver_address();
  gameserver_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramRelayAuthTicket.gameserver_address)
}
#if LANG_CXX11
inline void CMsgSteamDatagramRelayAuthTicket::set_gameserver_address(::std::string&& value) {
  set_has_gameserver_address();
  gameserver_address_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMsgSteamDatagramRelayAuthTicket.gameserver_address)
}
#endif
inline void CMsgSteamDatagramRelayAuthTicket::set_gameserver_address(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_gameserver_address();
  gameserver_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMsgSteamDatagramRelayAuthTicket.gameserver_address)
}
inline void CMsgSteamDatagramRelayAuthTicket::set_gameserver_address(const void* value, size_t size) {
  set_has_gameserver_address();
  gameserver_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMsgSteamDatagramRelayAuthTicket.gameserver_address)
}
inline ::std::string* CMsgSteamDatagramRelayAuthTicket::mutable_gameserver_address() {
  set_has_gameserver_address();
  // @@protoc_insertion_point(field_mutable:CMsgSteamDatagramRelayAuthTicket.gameserver_address)
  return gameserver_address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgSteamDatagramRelayAuthTicket::release_gameserver_address() {
  // @@protoc_insertion_point(field_release:CMsgSteamDatagramRelayAuthTicket.gameserver_address)
  if (!has_gameserver_address()) {
    return NULL;
  }
  clear_has_gameserver_address();
  return gameserver_address_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgSteamDatagramRelayAuthTicket::set_allocated_gameserver_address(::std::string* gameserver_address) {
  if (gameserver_address != NULL) {
    set_has_gameserver_address();
  } else {
    clear_has_gameserver_address();
  }
  gameserver_address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), gameserver_address);
  // @@protoc_insertion_point(field_set_allocated:CMsgSteamDatagramRelayAuthTicket.gameserver_address)
}

// optional uint32 app_id = 7;
inline bool CMsgSteamDatagramRelayAuthTicket::has_app_id() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CMsgSteamDatagramRelayAuthTicket::set_has_app_id() {
  _has_bits_[0] |= 0x00000400u;
}
inline void CMsgSteamDatagramRelayAuthTicket::clear_has_app_id() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void CMsgSteamDatagramRelayAuthTicket::clear_app_id() {
  app_id_ = 0u;
  clear_has_app_id();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramRelayAuthTicket::app_id() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramRelayAuthTicket.app_id)
  return app_id_;
}
inline void CMsgSteamDatagramRelayAuthTicket::set_app_id(::google::protobuf::uint32 value) {
  set_has_app_id();
  app_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramRelayAuthTicket.app_id)
}

// optional uint32 virtual_port = 10;
inline bool CMsgSteamDatagramRelayAuthTicket::has_virtual_port() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void CMsgSteamDatagramRelayAuthTicket::set_has_virtual_port() {
  _has_bits_[0] |= 0x00001000u;
}
inline void CMsgSteamDatagramRelayAuthTicket::clear_has_virtual_port() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void CMsgSteamDatagramRelayAuthTicket::clear_virtual_port() {
  virtual_port_ = 0u;
  clear_has_virtual_port();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramRelayAuthTicket::virtual_port() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramRelayAuthTicket.virtual_port)
  return virtual_port_;
}
inline void CMsgSteamDatagramRelayAuthTicket::set_virtual_port(::google::protobuf::uint32 value) {
  set_has_virtual_port();
  virtual_port_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramRelayAuthTicket.virtual_port)
}

// repeated .CMsgSteamDatagramRelayAuthTicket.ExtraField extra_fields = 8;
inline int CMsgSteamDatagramRelayAuthTicket::extra_fields_size() const {
  return extra_fields_.size();
}
inline void CMsgSteamDatagramRelayAuthTicket::clear_extra_fields() {
  extra_fields_.Clear();
}
inline ::CMsgSteamDatagramRelayAuthTicket_ExtraField* CMsgSteamDatagramRelayAuthTicket::mutable_extra_fields(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgSteamDatagramRelayAuthTicket.extra_fields)
  return extra_fields_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgSteamDatagramRelayAuthTicket_ExtraField >*
CMsgSteamDatagramRelayAuthTicket::mutable_extra_fields() {
  // @@protoc_insertion_point(field_mutable_list:CMsgSteamDatagramRelayAuthTicket.extra_fields)
  return &extra_fields_;
}
inline const ::CMsgSteamDatagramRelayAuthTicket_ExtraField& CMsgSteamDatagramRelayAuthTicket::extra_fields(int index) const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramRelayAuthTicket.extra_fields)
  return extra_fields_.Get(index);
}
inline ::CMsgSteamDatagramRelayAuthTicket_ExtraField* CMsgSteamDatagramRelayAuthTicket::add_extra_fields() {
  // @@protoc_insertion_point(field_add:CMsgSteamDatagramRelayAuthTicket.extra_fields)
  return extra_fields_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgSteamDatagramRelayAuthTicket_ExtraField >&
CMsgSteamDatagramRelayAuthTicket::extra_fields() const {
  // @@protoc_insertion_point(field_list:CMsgSteamDatagramRelayAuthTicket.extra_fields)
  return extra_fields_;
}

// optional fixed64 legacy_authorized_steam_id = 2;
inline bool CMsgSteamDatagramRelayAuthTicket::has_legacy_authorized_steam_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgSteamDatagramRelayAuthTicket::set_has_legacy_authorized_steam_id() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgSteamDatagramRelayAuthTicket::clear_has_legacy_authorized_steam_id() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgSteamDatagramRelayAuthTicket::clear_legacy_authorized_steam_id() {
  legacy_authorized_steam_id_ = GOOGLE_ULONGLONG(0);
  clear_has_legacy_authorized_steam_id();
}
inline ::google::protobuf::uint64 CMsgSteamDatagramRelayAuthTicket::legacy_authorized_steam_id() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramRelayAuthTicket.legacy_authorized_steam_id)
  return legacy_authorized_steam_id_;
}
inline void CMsgSteamDatagramRelayAuthTicket::set_legacy_authorized_steam_id(::google::protobuf::uint64 value) {
  set_has_legacy_authorized_steam_id();
  legacy_authorized_steam_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramRelayAuthTicket.legacy_authorized_steam_id)
}

// optional fixed64 legacy_gameserver_steam_id = 4;
inline bool CMsgSteamDatagramRelayAuthTicket::has_legacy_gameserver_steam_id() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CMsgSteamDatagramRelayAuthTicket::set_has_legacy_gameserver_steam_id() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CMsgSteamDatagramRelayAuthTicket::clear_has_legacy_gameserver_steam_id() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CMsgSteamDatagramRelayAuthTicket::clear_legacy_gameserver_steam_id() {
  legacy_gameserver_steam_id_ = GOOGLE_ULONGLONG(0);
  clear_has_legacy_gameserver_steam_id();
}
inline ::google::protobuf::uint64 CMsgSteamDatagramRelayAuthTicket::legacy_gameserver_steam_id() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramRelayAuthTicket.legacy_gameserver_steam_id)
  return legacy_gameserver_steam_id_;
}
inline void CMsgSteamDatagramRelayAuthTicket::set_legacy_gameserver_steam_id(::google::protobuf::uint64 value) {
  set_has_legacy_gameserver_steam_id();
  legacy_gameserver_steam_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramRelayAuthTicket.legacy_gameserver_steam_id)
}

// optional fixed64 legacy_gameserver_net_id = 5;
inline bool CMsgSteamDatagramRelayAuthTicket::has_legacy_gameserver_net_id() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CMsgSteamDatagramRelayAuthTicket::set_has_legacy_gameserver_net_id() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CMsgSteamDatagramRelayAuthTicket::clear_has_legacy_gameserver_net_id() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CMsgSteamDatagramRelayAuthTicket::clear_legacy_gameserver_net_id() {
  legacy_gameserver_net_id_ = GOOGLE_ULONGLONG(0);
  clear_has_legacy_gameserver_net_id();
}
inline ::google::protobuf::uint64 CMsgSteamDatagramRelayAuthTicket::legacy_gameserver_net_id() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramRelayAuthTicket.legacy_gameserver_net_id)
  return legacy_gameserver_net_id_;
}
inline void CMsgSteamDatagramRelayAuthTicket::set_legacy_gameserver_net_id(::google::protobuf::uint64 value) {
  set_has_legacy_gameserver_net_id();
  legacy_gameserver_net_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramRelayAuthTicket.legacy_gameserver_net_id)
}

// optional fixed32 legacy_gameserver_pop_id = 9;
inline bool CMsgSteamDatagramRelayAuthTicket::has_legacy_gameserver_pop_id() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CMsgSteamDatagramRelayAuthTicket::set_has_legacy_gameserver_pop_id() {
  _has_bits_[0] |= 0x00000800u;
}
inline void CMsgSteamDatagramRelayAuthTicket::clear_has_legacy_gameserver_pop_id() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void CMsgSteamDatagramRelayAuthTicket::clear_legacy_gameserver_pop_id() {
  legacy_gameserver_pop_id_ = 0u;
  clear_has_legacy_gameserver_pop_id();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramRelayAuthTicket::legacy_gameserver_pop_id() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramRelayAuthTicket.legacy_gameserver_pop_id)
  return legacy_gameserver_pop_id_;
}
inline void CMsgSteamDatagramRelayAuthTicket::set_legacy_gameserver_pop_id(::google::protobuf::uint32 value) {
  set_has_legacy_gameserver_pop_id();
  legacy_gameserver_pop_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramRelayAuthTicket.legacy_gameserver_pop_id)
}

// optional bytes legacy_authorized_client_identity_binary = 12;
inline bool CMsgSteamDatagramRelayAuthTicket::has_legacy_authorized_client_identity_binary() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgSteamDatagramRelayAuthTicket::set_has_legacy_authorized_client_identity_binary() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgSteamDatagramRelayAuthTicket::clear_has_legacy_authorized_client_identity_binary() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgSteamDatagramRelayAuthTicket::clear_legacy_authorized_client_identity_binary() {
  legacy_authorized_client_identity_binary_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_legacy_authorized_client_identity_binary();
}
inline const ::std::string& CMsgSteamDatagramRelayAuthTicket::legacy_authorized_client_identity_binary() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramRelayAuthTicket.legacy_authorized_client_identity_binary)
  return legacy_authorized_client_identity_binary_.GetNoArena();
}
inline void CMsgSteamDatagramRelayAuthTicket::set_legacy_authorized_client_identity_binary(const ::std::string& value) {
  set_has_legacy_authorized_client_identity_binary();
  legacy_authorized_client_identity_binary_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramRelayAuthTicket.legacy_authorized_client_identity_binary)
}
#if LANG_CXX11
inline void CMsgSteamDatagramRelayAuthTicket::set_legacy_authorized_client_identity_binary(::std::string&& value) {
  set_has_legacy_authorized_client_identity_binary();
  legacy_authorized_client_identity_binary_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMsgSteamDatagramRelayAuthTicket.legacy_authorized_client_identity_binary)
}
#endif
inline void CMsgSteamDatagramRelayAuthTicket::set_legacy_authorized_client_identity_binary(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_legacy_authorized_client_identity_binary();
  legacy_authorized_client_identity_binary_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMsgSteamDatagramRelayAuthTicket.legacy_authorized_client_identity_binary)
}
inline void CMsgSteamDatagramRelayAuthTicket::set_legacy_authorized_client_identity_binary(const void* value, size_t size) {
  set_has_legacy_authorized_client_identity_binary();
  legacy_authorized_client_identity_binary_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMsgSteamDatagramRelayAuthTicket.legacy_authorized_client_identity_binary)
}
inline ::std::string* CMsgSteamDatagramRelayAuthTicket::mutable_legacy_authorized_client_identity_binary() {
  set_has_legacy_authorized_client_identity_binary();
  // @@protoc_insertion_point(field_mutable:CMsgSteamDatagramRelayAuthTicket.legacy_authorized_client_identity_binary)
  return legacy_authorized_client_identity_binary_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgSteamDatagramRelayAuthTicket::release_legacy_authorized_client_identity_binary() {
  // @@protoc_insertion_point(field_release:CMsgSteamDatagramRelayAuthTicket.legacy_authorized_client_identity_binary)
  if (!has_legacy_authorized_client_identity_binary()) {
    return NULL;
  }
  clear_has_legacy_authorized_client_identity_binary();
  return legacy_authorized_client_identity_binary_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgSteamDatagramRelayAuthTicket::set_allocated_legacy_authorized_client_identity_binary(::std::string* legacy_authorized_client_identity_binary) {
  if (legacy_authorized_client_identity_binary != NULL) {
    set_has_legacy_authorized_client_identity_binary();
  } else {
    clear_has_legacy_authorized_client_identity_binary();
  }
  legacy_authorized_client_identity_binary_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), legacy_authorized_client_identity_binary);
  // @@protoc_insertion_point(field_set_allocated:CMsgSteamDatagramRelayAuthTicket.legacy_authorized_client_identity_binary)
}

// optional bytes legacy_gameserver_identity_binary = 13;
inline bool CMsgSteamDatagramRelayAuthTicket::has_legacy_gameserver_identity_binary() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgSteamDatagramRelayAuthTicket::set_has_legacy_gameserver_identity_binary() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgSteamDatagramRelayAuthTicket::clear_has_legacy_gameserver_identity_binary() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgSteamDatagramRelayAuthTicket::clear_legacy_gameserver_identity_binary() {
  legacy_gameserver_identity_binary_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_legacy_gameserver_identity_binary();
}
inline const ::std::string& CMsgSteamDatagramRelayAuthTicket::legacy_gameserver_identity_binary() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramRelayAuthTicket.legacy_gameserver_identity_binary)
  return legacy_gameserver_identity_binary_.GetNoArena();
}
inline void CMsgSteamDatagramRelayAuthTicket::set_legacy_gameserver_identity_binary(const ::std::string& value) {
  set_has_legacy_gameserver_identity_binary();
  legacy_gameserver_identity_binary_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramRelayAuthTicket.legacy_gameserver_identity_binary)
}
#if LANG_CXX11
inline void CMsgSteamDatagramRelayAuthTicket::set_legacy_gameserver_identity_binary(::std::string&& value) {
  set_has_legacy_gameserver_identity_binary();
  legacy_gameserver_identity_binary_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMsgSteamDatagramRelayAuthTicket.legacy_gameserver_identity_binary)
}
#endif
inline void CMsgSteamDatagramRelayAuthTicket::set_legacy_gameserver_identity_binary(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_legacy_gameserver_identity_binary();
  legacy_gameserver_identity_binary_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMsgSteamDatagramRelayAuthTicket.legacy_gameserver_identity_binary)
}
inline void CMsgSteamDatagramRelayAuthTicket::set_legacy_gameserver_identity_binary(const void* value, size_t size) {
  set_has_legacy_gameserver_identity_binary();
  legacy_gameserver_identity_binary_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMsgSteamDatagramRelayAuthTicket.legacy_gameserver_identity_binary)
}
inline ::std::string* CMsgSteamDatagramRelayAuthTicket::mutable_legacy_gameserver_identity_binary() {
  set_has_legacy_gameserver_identity_binary();
  // @@protoc_insertion_point(field_mutable:CMsgSteamDatagramRelayAuthTicket.legacy_gameserver_identity_binary)
  return legacy_gameserver_identity_binary_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgSteamDatagramRelayAuthTicket::release_legacy_gameserver_identity_binary() {
  // @@protoc_insertion_point(field_release:CMsgSteamDatagramRelayAuthTicket.legacy_gameserver_identity_binary)
  if (!has_legacy_gameserver_identity_binary()) {
    return NULL;
  }
  clear_has_legacy_gameserver_identity_binary();
  return legacy_gameserver_identity_binary_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgSteamDatagramRelayAuthTicket::set_allocated_legacy_gameserver_identity_binary(::std::string* legacy_gameserver_identity_binary) {
  if (legacy_gameserver_identity_binary != NULL) {
    set_has_legacy_gameserver_identity_binary();
  } else {
    clear_has_legacy_gameserver_identity_binary();
  }
  legacy_gameserver_identity_binary_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), legacy_gameserver_identity_binary);
  // @@protoc_insertion_point(field_set_allocated:CMsgSteamDatagramRelayAuthTicket.legacy_gameserver_identity_binary)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_mcdota_2eproto
